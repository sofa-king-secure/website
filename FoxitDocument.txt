----------------------- Page 1-----------------------

NAVEX IRM Platform 

API Reference Guide 


----------------------- Page 2-----------------------

This publication was written and produced at NAVEX Global, Inc., Lake Oswego, Oregon. This publication or any portion 

thereof is confidential and/or proprietary and may not be reproduced or used in any manner whatsoever without the express 

written permission of NAVEX Global, Inc. 



©2023 NAVEX Global, Inc. All rights reserved. NAVEX®, NAVEX IRMTM , the NAVEX IRM iconTM , and Dynamic Content 

FrameworkTM are trademarks of NAVEX Global, Inc. and are registered in the United States. The trademarks and names of 



other companies and products mentioned herein are the property of their respective owners. 



Last Update: May 10, 2023 



Product Version: 6.7 



                                      NAVEX IRM Platform | API Reference Guide                                     2 of 188 


----------------------- Page 3-----------------------

Contents 



   About This Guide 



                                              INTRODUCTION 



   1: Fundamentals 



     NAVEX IRM API Services                                                                              9 



     Rules to NAVEX IRM API                                                                             12 



                                                SERVICES 



   2: Security Services API 



     Security Services API                                                                              16 



     Login                                                                                              17 



     Ping                                                                                               19 



     Logout                                                                                             20 



     GetUser                                                                                            21 



     GetUsers                                                                                           25 



     GetUserCount                                                                                       32 



     CreateUser                                                                                         37 



     UpdateUser                                                                                         48 



     DeleteUser                                                                                         55 



     GetGroup                                                                                           56 



     GetGroups                                                                                          58 



     CreateGroup                                                                                        62 



     UpdateGroup                                                                                        65 



     DeleteGroup                                                                                        69 



   3: Component Services API 



     GetComponent                                                                                       71 



                                      NAVEX IRM Platform | API Reference Guide 


----------------------- Page 4-----------------------

  GetComponentList                                                                                   73 



  GetComponentByAlias                                                                                75 



  GetFieldList                                                                                       77 



  GetField                                                                                           80 



  GetAvailableLookupRecords                                                                          82 



  GetRecord                                                                                          85 



  GetRecords                                                                                         87 



  GetRecordCount                                                                                     91 



  GetDetailRecord                                                                                    95 



  GetDetailRecords                                                                                   98 



  GetLookupReportColumnFields                                                                       110 



  GetRecordAttachment                                                                               112 



  GetRecordAttachments                                                                              114 



  GetWorkflow                                                                                       116 



  GetWorkflows                                                                                      120 



  TransitionRecord                                                                                  122 



  VoteRecord                                                                                        124 



  CreateRecord                                                                                      126 



  UpdateRecord                                                                                      133 



  UpdateRecordAttachments                                                                           137 



  DeleteRecord                                                                                      141 



  DeleteRecordAttachments                                                                           143 



  ImportFile                                                                                        147 



4: Report Services API 



  ExportReport                                                                                      150 



5: Assessment Services API 



                              NAVEX IRM Platform | API Reference Guide                           4 of 188 


----------------------- Page 5-----------------------

  IssueAssessment                                                                                  152 



                                            APPENDICES 



A:  Language Identifiers 



  Language IDs                                                                                     184 



B:  Troubleshooting Tips 



  Troubleshooting                                                                                  187 



  Frequently Asked Questions                                                                       188 



                                   NAVEX IRM Platform | API Reference Guide 


----------------------- Page 6-----------------------

About This Guide 



This guide provides the syntax for the various RESTful API verbs available with the NAVEX IRM API application. 

The intended audience for this reference guide is IT professionals and NAVEX IRM administrators who are 

responsible for importing and exporting data to and from the NAVEX IRM Platform. 



The NAVEX IRM Platform API Reference Guide includes the following sections: 



 Introduction                        Provides a list of the methods used for integrating external data with the 

                                     NAVEX IRM Platform and the rules for using the NAVEX IRM API. 



 Security Services API               Provides a description of the functions for logging in and logging out of the 

                                     NAVEX IRM Platform and methods for getting, creating, updating, and 

                                     deleting users and groups. 



 Component Services API              Provides the available methods for retrieving, updating, and deleting data 

                                     from the NAVEX IRM Platform. 



 Assessment Services API             Provides the available methods for initiating assessments into fields on DCF 

                                     tables and on Master Detail records in the NAVEX IRM Platform. 



 Report Services API                 Provides the available methods for reporting about the data in the 

                                     NAVEX IRM Platform. 



 Appendices                          Provides supporting information for language identifiers, troubleshooting 

                                     tips, and frequently asked questions when using the NAVEX IRM API 

                                     application. 



                                    NAVEX IRM Platform | API Reference Guide                                 6 of 188 


----------------------- Page 7-----------------------

Introduction 


----------------------- Page 8-----------------------

1: Fundamentals 



This chapter provides a list of the methods for integrating external data with the NAVEX IRM Platform and the 

rules for using the NAVEX IRM API. 



   NAVEX IRM API Services                                                                                   9 



   Rules to NAVEX IRM API                                                                                  12 


----------------------- Page 9-----------------------

NAVEX IRM API Services 



The NAVEX IRM Application Programming Interface (API) provides a set of Representational State Transfer 

(REST) APIs that allows access and integration to custom user-created data components stored in the 

NAVEX IRM Platform. The calls you use to access the NAVEX IRM API resources are grouped by Security 

Services, Component Services, Report Services, and Assessment Services. 



                                              Security Services API 



 Call               Description 



 CreateGroup        Creates a group. 



 CreateUser         Creates a user account. 



 DeleteGroup        Deletes a group. 



 DeleteUser         Deletes a user account. 



 GetGroup           Returns all supporting fields of a given group. 



 GetGroups          Returns the ID and Name for groups. 



 GetUser            Returns all fields for a given user. 



 GetUserCount       Returns an integer representing the count of all Full Users, Vendors Contact Users, and 

                    Awareness Users. 



 GetUsers           Returns a list of users and supporting fields. 



 Login              Accepts a username and password, verifies them, and provides encrypted cookies 

                    (.ASPXAUTH and NGSecure). The .ASPXAUTH cookie is used to authenticate additional 

                    API transactions. 



 Logout             Terminates a session. 



 Ping               Refreshes a valid session. 



 UpdateGroup        Updates a group. 



 UpdateUser         Updates a user account. 



                                            Component Services API 



 Call                                 Description 



 CreateRecord                         Creates a new record within the specified component of the application. 



 DeleteRecord                         Deletes a selected record from within a chosen component. 



 DeleteRecordAttachments              Deletes the specified attachments from the provided document fields on a 

                                      specific record. 



 GetAvailableLookupRecords            Retrieves records that are available for population for a lookup field. 



 GetComponent                         Retrieves a component specified by its ID. 



                                     NAVEX IRM Platform | API Reference Guide                                 9 of 188 


----------------------- Page 10-----------------------

                                             Component Services API 



Call                                   Description 



GetComponentByAlias                    Retrieves a component specified by its Alias. 



GetComponentList                       Returns a complete list of all components available to the user based on 

                                       account permissions. 



GetDetailRecord                        Retrieves record information based on the provided component ID and 

                                       record ID, with lookup field report details. 



GetDetailRecords                       Retrieves details for each record specified. 



GetField                               Retrieves details for a field within a component. 



GetFieldList                           Retrieves a detailed field list for a component specified by its ID. 



GetLookupReportColumnFields            Retrieves the field information of each field in a field path that corresponds 

                                       to a lookup report column. 



GetRecord                              Returns the set of fields for a given record for which you have permissions 

                                       within a component. 



GetRecordAttachment                    Retrieves a single attachment for a given field on a record. 



GetRecordAttachments                   Retrieves a list of information for all attachments associated with the 

                                       provided component ID, record ID, and field ID. 



GetRecordCount                         Returns the number of records in a given component. 



GetRecords                             Returns an array of records within a chosen component. 



GetWorkflow                            Retrieves workflow details and all workflow stages specified by ID. 



GetWorkflows                           Retrieves all workflows for a component specified by its alias. 



ImportFile                             Queues a job to import a file for a defined import template. 



TransitionRecord                       Transitions a record in a workflow stage. 



UpdateRecord                           Updates a record within the specified component of the application. 



UpdateRecordAttachments                Adds new attachments and/or updates existing attachments to the provided 

                                       documents field(s) on a specific record, where the FileData is represented 

                                       as a Base64 string. 



VoteRecord                             Casts a vote for a record in a workflow stage. 



                                                Report Services API 



Call                        Description 



ExportReport                Outputs report data to a CSV, PDF, or XLSL file format. 



                                     NAVEX IRM Platform | API Reference Guide                                    10 of 188 


----------------------- Page 11-----------------------

                                        Assessment Services API 



Call                            Description 



IssueAssessment                 Issues an assessment according to a specified schedule. 



                                 NAVEX IRM Platform | API Reference Guide                            11 of 188 


----------------------- Page 12-----------------------

Rules to NAVEX IRM API 



The NAVEX IRM API resources are referenced by the URL path with standard HTTP verbs to access the 

different methods. Requests are made using the instance name of the NAVEX IRM installation, the port of the 

individual site followed by the applicable service and the available call associated with the service. 



URL:             https://[instance name]:[port]/[service]/[call] 



Methods 



The methods you use to access the NAVEX IRM API resources are GET, POST, and DELETE. 



 Method                              Description 



 GET                                 Retrieves information about a resource. 



 POST                                Creates a resource. 



 DELETE                              Deletes a resource or related component of a resource. 



Access Configuration 



The methods you use to access the NAVEX IRM API resources are grouped by Security Services APIs, 

Component Services APIs, Report Services APIs, and Assessment Services APIs. API methods are case 

sensitive. Verify that you are entering the proper syntax and case for the given call as documented. 



 Type                                             API Resources Group 



 All logins                                       SecurityService 



 All data gathering/manipulation requests         ComponentService 



 All reporting requests                           ReportService 



 All assessment requests                          AssessmentService 



Permissions 



Permissions for the API are determined by the logon credentials used to access it. API access uses the 

permission settings for an account configured within the Security Roles section of the NAVEX IRM Platform. 



The credentials are accessed using the Login method in the SecurityService API. The credentials return cookies 

(.ASPXAUTH and NGSecure). The .ASPXAUTH cookie is then passed as authorization to all of the other 

portions of the API and detailed in the SecurityService API. 



cURL 



While the REST Framework supports almost any development language, examples in this documentation are 

provided in cURL and can be executed in a standalone command prompt. cURL is a tool to transfer data from or 

to a server, using HTTP(s) to connect to the web service API, and return an XML or JSON response that can be 

stored and parsed. 



                                     NAVEX IRM Platform | API Reference Guide                                 12 of 188 


----------------------- Page 13-----------------------

Some basic cURL command switches that may be helpful are shown below. For a list of curl commands and 

options, type curl --help at a command prompt. 



                                                           Switches 



 Switch           Option         Use 



 -b               --cookie       Passes the data to the server in the cookie header. This option provides 

                                 authentication. 



 -c               --cookie-      Specifies to which file you want curl to write all cookies after a completed operation. 

                  jar 



 -H               --header       Passes custom header(s) to the server; includes header information, such as 

                                 Content-Type. 



 -d               --data         Sends specified data in a POST request to the server; uses @filename.xml to read 

                  <data>         the input data. 



XML and JSON 



In addition to cURL examples, XML and JSON samples illustrate how a method may be utilized in your 

development environment. In some samples, due to size constraints, an ellipse (...) indicates an incomplete list of 

items returned. 



Data Structure 



A key component of the NAVEX IRM architecture is the Dynamic Content Framework (DCF) which allows you to 

build customized, dynamic tables to store a variety of data elements. The DCF also allows for complex relational 

interaction between custom and permanent data elements. As such, the content is completely customized to 

each business and does not have a fixed structure. 



Some terms will be useful to understand when using the NAVEX IRM API to access custom content. 



 Term              Description 



 Component        A single table in the NAVEX IRM Platform. 



 Field            A definition for a single piece of information in a component, for example, the address of a 

                   building. Each field is restricted to a user-defined data type. 



 Record           A complete grouping of multiple fields for a single identifier. For example, a record may consist 

                   of a name, address, and phone number for an employee. 



                                        NAVEX IRM Platform | API Reference Guide                                       13 of 188 


----------------------- Page 14-----------------------

Services 


----------------------- Page 15-----------------------

2: Security Services API 



This chapter includes a description of the functions for logging in and logging out of the NAVEX IRM Platform and 

methods for getting, creating, updating, and deleting users and groups. 



    Security Services API                                                                                     16 



    Login                                                                                                     17 



    Ping                                                                                                      19 



    Logout                                                                                                    20 



    GetUser                                                                                                   21 



    GetUsers                                                                                                  25 



    GetUserCount                                                                                              32 



    CreateUser                                                                                                37 



    UpdateUser                                                                                                48 



    DeleteUser                                                                                                55 



    GetGroup                                                                                                  56 



    GetGroups                                                                                                 58 



    CreateGroup                                                                                               62 



    UpdateGroup                                                                                               65 



    DeleteGroup                                                                                               69 


----------------------- Page 16-----------------------

Security Services API 



The Security Services API provides the available methods for logging in and logging out of the NAVEX IRM 

Platform. The Login call generates encrypted cookies (.ASPXAUTH and NGSecure) in the return header. These 

cookies must be captured and used as a parameter in all ComponentServices, ReportServices, and 

AssessmentServices calls to verify identity and set permissions. 



Permissions for the data that the API can access are based on permissions of the Logon account that is used. 

For example, if the login account has read-only permissions to an asset table, the API returns data for user 

viewing but does not allow update or delete functions to be performed. 



  Note: API methods are case-sensitive. Verify that you are entering the proper syntax and case for the 

  Security Services call as documented. 



                                    NAVEX IRM Platform | API Reference Guide                               16 of 188 


----------------------- Page 17-----------------------

Login 



Accepts a username and password, verifies it, and provides encrypted cookies (.ASPXAUTH and NGSecure). 

The .ASPXAUTH cookie is used to authenticate additional API transactions. 



Permissions      The authentication account that logs into the application must have: 



                 l  API Access enabled in the NAVEX IRM Platform 



URL:             https://[instance-name]:[port]/SecurityService/Login 



Method:          POST 



Input:           Username (string):       Username for the NAVEX IRM application account. 



                 Password (string):       Password for the NAVEX IRM application account. 



Output:          Cookies to establish sessions within the component services API. 



Examples 



In this example, cURL uses the –c option to store the encrypted cookies that are returned in a file. The cookies 

can be sent to authenticate all data manipulation commands in the ComponentService API with a single cURL 

command line switch (-b). The response sample includes both the header of the response (to view the cookies) 

and the XML response. 



  XML REQUEST (cURL) 



  curl -c cookie.txt -H "content-type: application/xml;charset=utf-8" -X POST -d 



  "<Login><username>username</username><password>password</password></Login>" 



  https://api.lockpath.app:4443/SecurityService/Login 



  XML RESPONSE 



  <boolean xmlns="http://schemas.microsoft.com/2003/10/Serialization/">true</boolean> 



  JSON REQUEST (cURL) 



  curl -c cookie.txt -H "content-type: application/json" -H "Accept: application/json" -X 

  POST -d "{ \"username\": \"user1\", \"password\": \"12345\" }" 

  https://api.lockpath.app:4443/SecurityService/Login 



  JSON RESPONSE 



  true 



                                   NAVEX IRM Platform | API Reference Guide                               17 of 188 


----------------------- Page 18-----------------------

Auto-provision an account using LDAP 



If Auto-Provision is enabled for LDAP Profile and the authenticated user does not have a NAVEX IRM application 

account, one will be created with API access enabled and then authenticated to the application. 



 Input:                             ldapSettingsId (integer):            LDAP Profile ID within application. 



Examples 



  XML REQUEST (cURL) 



  curl -c cookie.txt -H "content-type: application/xml;charset=utf-8" -X POST -d 

  "<Login><username>username</username><password>password</password><ldapSettingsId>1</ldap 

  SettingsId></Login>" https://api.lockpath.app:4443/SecurityService/Login 



  XML RESPONSE 



  <boolean xmlns="http://schemas.microsoft.com/2003/10/Serialization/">true</boolean> 



  JSON REQUEST (cURL) 



  curl -c cookie.txt -H "content-type: application/json" -H "Accept: application/json" -X 

  POST -d "{ \"username\": \"user1\", \"password\": \"12345\", \"ldapSettingsId\": \"1\"}" 

  https://api.lockpath.app:4443/SecurityService/Login 



  JSON RESPONSE 



  true 



                                  NAVEX IRM Platform | API Reference Guide                           18 of 188 


----------------------- Page 19-----------------------

Ping 



Refreshes a valid session. 



Permissions:    The authentication account must have: 



                 l API Access enabled in the NAVEX IRM Platform 



URL:            https://[instance-name]:[port]/SecurityService/Ping 



Method:         GET 



Input:          No input allowed. 



Examples 



Ping uses the default GET method, so the method does not need to be specified in the request. 



 XML REQUEST (cURL) 



  curl -b cookie.txt https://api.lockpath.app:4443/SecurityService/Ping 



 XML RESPONSE 



  <boolean xmlns="http://schemas.microsoft.com/2003/10/Serialization/">true</boolean> 



  JSON REQUEST (cURL) 



  curl -b cookie.txt -H "Accept: application/json" 

  https://api.lockpath.app:4443/SecurityService/Ping 



  JSON RESPONSE 



  true 



                                  NAVEX IRM Platform | API Reference Guide                           19 of 188 


----------------------- Page 20-----------------------

Logout 



Terminates a session. 



Permissions:     The authentication account that logs into the application must have: 



                 l  API Access enabled in the NAVEX IRM Platform 



URL:             https://[instance-name]:[port]/SecurityService/Logout 



Method:          GET 



Input:           No input allowed. 



Examples 



In this example, cURL uses the -b option to retrieve a stored session, authenticate it, and then terminate the 

session. 



  XML/JSON REQUEST (cURL) 



  curl -b cookie.txt https://api.lockpath.app:4443/SecurityService/Logout 



  XML/JSON RESPONSE 



  true 



                                   NAVEX IRM Platform | API Reference Guide                            20 of 188 


----------------------- Page 21-----------------------

GetUser 



Returns all fields for a given user. 



Permissions:      The authentication account must have: 



                   l Administrative Access - Read permissions to Administer - Users 



                  Vendor Contact accounts must also have: 



                   l General Access - Read permissions to Vendor Profiles 



                   l View permissions to Vendor Profiles workflow stage 



                   l Vendor Profiles record permissions 



URL:              https://[instance name]:[port]/SecurityService/GetUser?id={USERID} 



Method:           GET 



Input:            Id (integer):       The Id of the desired user. 



                  Language            The User object of the GetUser call reveals the language in use in the 

                  (integer):          NAVEX IRM Platform. The default language is English (United States) and 

                                      the default language value is "1033." 



                                      If an API request returns a language that is not available, or if a language is 

                                      not active in the instance, the error message "Invalid Language ID" returns. 



For a list of all languages and language IDs available in the NAVEX IRM Platform, see Language IDs in the 

appendix. 



                                      NAVEX IRM Platform | API Reference Guide                                    21 of 188 


----------------------- Page 22-----------------------

Examples 



 XML REQUEST (cURL) 



  curl -b cookie.txt -H "content-type: application/xml;charset=utf-8" 



 https://api.lockpath.app:4443/SecurityService/GetUser?id=1055 



 XML RESPONSE 



  <UserItem xmlns:i="http://www.w3.org/2001/XMLSchema-instance"> 



         <Id>1055</Id> 



         <FullName>User, Test</FullName> 



         <Username>testuser</Username> 



         <Active>true</Active> 



         <Locked>false</Locked> 



         <Deleted>false</Deleted> 



         <AccountType>1</AccountType> 



         <FirstName>Test</FirstName> 



         <MiddleName/> 



         <LastName>User</LastName> 



         <Title/> 



         <Language>1033</Language> 



         <EmailAddress>test@user.com</EmailAddress> 



         <HomePhone/> 



         <WorkPhone/> 



         <MobilePhone/> 



         <Fax/> 



         <Manager> 



                 <Id>12</Id> 



                 <FullName>Name, User</FullName> 



         </Manager> 



         <Department> 



                 <Id>10</Id> 



                 <Name>Anonymous Incident Analysts</Name> 



         </Department> 



         <IsSAML>false</IsSAML> 



                                 NAVEX IRM Platform | API Reference Guide                         22 of 188 


----------------------- Page 23-----------------------

        <IsLDAP>false</IsLDAP> 



        <SecurityConfiguration> 



                <Id>1</Id> 



                <DisplayName>Administrator Configuration</DisplayName> 



        </SecurityConfiguration> 



        <APIAccess>false</APIAccess> 



        <Groups> 



                <Group> 



                       <Id>13</Id> 



                       <Name>Retail Stores</Name> 



                </Group> 



        </Groups> 



        <SecurityRoles> 



                <SecurityRole> 



                       <Id>1</Id> 



                       <Name>Administration</Name> 



                </SecurityRole> 



        </SecurityRoles> 



        <FunctionalRoles/> 



</UserItem> 



JSON REQUEST (cURL) 



curl -b cookie.txt -H "content-type: application/json" -H "Accept: application/json" 



https://api.lockpath.app:4443/SecurityService/GetUser?id=1055 



JSON RESPONSE 



{ 



        "Id": 1055, 



        "FullName": "User, Test", 



        "Username": "testuser", 



        "Active": true, 



        "Locked": false, 



        "Deleted": false, 



        "AccountType": 1, 



        "FirstName": "Test", 



                                NAVEX IRM Platform | API Reference Guide                          23 of 188 


----------------------- Page 24-----------------------

       "MiddleName": "", 



       "LastName": "User", 



       "Title": "", 



       "Language": 1033, 



       "EmailAddress": "test@user.com", 



       "HomePhone": "", 



       "WorkPhone": "", 



       "MobilePhone": "", 



       "Fax": "", 



       "IsSAML": false, 



       "IsLDAP": false, 



       "SecurityConfiguration": { 



           "Id": 1, 



           "DisplayName": "Standard Configuration" 



       }, 



       "APIAccess": false, 



       "Groups": [], 



       "SecurityRoles": [ 



           { 



               "Id": 1, 



               "Name": "End User" 



           } 



       ], 



       "FunctionalRoles": [] 



} 



                               NAVEX IRM Platform | API Reference Guide                           24 of 188 


----------------------- Page 25-----------------------

GetUsers 



Returns a list of users and supporting fields. You can filter the list to return only certain user types, such as Active, 

Deleted, or users by a particular AccountType or Vendor Contacts by a certain Vendor Profile. 



Permissions:      The authentication account must have: 



                  l  Administrative Access - Read permissions to Administer - Users 



                  Vendor Contact accounts must also have: 



                  l  General Access - Read permissions to Vendor Profiles 



                  l  View permissions to Vendor Profiles workflow stage 



                  l  Vendor Profiles record permissions 



URL:              https://[instance name]:[port]/SecurityService/GetUsers 



Method:           POST 



Input:            pageIndex (integer):               The index of the page of result to return. Must be ≥ 0. 



                  pageSize (integer):                The size of the page results to return. Must be ≥ 1. 



                  FieldFilter (optional):            The filter parameters the users must meet to be included. 



Field Filters 



Use filters to return only the users meeting the selected criteria. 



 ShortName                               FilterType                 Value 



 Active                                  5 (Equal To)               True, False 



                                         6 (NotEqualTo) 



 Deleted                                 5 (Equal To)               True, False 



                                         6 (NotEqualTo) 



 AccountType                             5 (Equal To)               1 (Full User), 2 (Vendor, VendorContact), 4 

                                                                    (Awareness User) 



                                         6 (NotEqualTo) 



                                         10002 (Contains Any) 



 Vendor                                  5 (Equal To)               Vendor Profile ID for the Vendor Contact 



  Field Filter (Active) Example 



                                      NAVEX IRM Platform | API Reference Guide                                   25 of 188 


----------------------- Page 26-----------------------

 XML                                  JSON 



 <FieldFilter>                        "filters": [ 



 <Field>                              { 



 <ShortName>Active</ShortName>        "Field": { 



 </Field>                             "ShortName": "Active" 



 <FilterType>5</FilterType>           }, 



 <Value>False</Value>                 "FilterType": "5", 



 </FieldFilter>                       "Value": "false" 



                                      } 



                                      ] 



Field Filter (Deleted) Example 



 XML                                   JSON 



 <FieldFilter>                          "filters": [ 



 <Field>                                { 



 <ShortName>Deleted</ShortName>         "Field": { 



 </Field>                               "ShortName": "Deleted" 



 <FilterType>6</FilterType>             }, 



 <Value>True</Value>                    "FilterType": "6", 



 </FieldFilter>                         "Value": "true" 



                                        } 



                                        ] 



Field Filter (AccountType) Example 



                                NAVEX IRM Platform | API Reference Guide                          26 of 188 


----------------------- Page 27-----------------------

 XML                                        JSON 



 <FieldFilter>                              "filters": [ 



 <Field>                                    { 



 <ShortName>AccountType</ShortName>         "Field": { 



 </Field>                                   "ShortName": "AccountType" 



 <FilterType>10002</FilterType>             }, 



 <Value>1|2</Value>                         "FilterType": "10002", 



 </FieldFilter>                             "Value": "1|2" 



                                            } 



                                            ] 



Field Filter (Vendor) Example 



 XML                                  JSON 



 <GetUsers>                           { 



 <pageIndex>0</pageIndex>                     "pageIndex": "0", 



 <pageSize>100</pageSize>                     "pageSize": "100", 



 <filters>                                            "filters": [ 



 <FieldFilter>                                        { 



 <Field>                                                      "Field": { 



 <ShortName>Vendor</ShortName>                                "ShortName": "Vendor" 



 </Field>                                             }, 



 <FilterType>5</FilterType>                           "FilterType": "5", 



 <Value>7</Value>                                     "Value": "7" 



 </FieldFilter>                                       } 



 </filters>                                   ] 



 </GetUsers>                          } 



                                NAVEX IRM Platform | API Reference Guide                          27 of 188 


----------------------- Page 28-----------------------

Examples 



 XML REQUEST (cURL) 



  curl -b cookie.txt -H "content-type: application/xml;charset=utf-8" -X POST -d 

  @GetUsersInput.xml 



  "https://api.lockpath.app:4443/SecurityService/GetUsers" 



 XML REQUEST (GetUsersInput.xml) 



  <GetUsers> 



         <pageIndex>0</pageIndex> 



         <pageSize>4</pageSize> 



         <filters> 



             <FieldFilter> 



                <Field> 



                   <ShortName>Active</ShortName> 



                </Field> 



                <FilterType>5</FilterType> 



                <Value>true</Value> 



             </FieldFilter> 



         </filters> 



  </GetUsers> 



 XML RESPONSE 



  <UserList xmlns:i="http://www.w3.org/2001/XMLSchema-instance"> 



         <User> 



                 <Id>9</Id> 



                 <FullName>User, Test</FullName> 



                 <Username>testuser</Username> 



                 <Active>true</Active> 



                 <Deleted>false</Deleted> 



                 <AccountType>1</AccountType> 



         </User> 



         <User> 



                 <Id>10</Id> 



                 <FullName>User, VendorContact</FullName> 



                 <Username>vendorcontactuser</Username> 



                                 NAVEX IRM Platform | API Reference Guide                         28 of 188 


----------------------- Page 29-----------------------

                <Active>true</Active> 



                <Deleted>false</Deleted> 



                <AccountType>2</AccountType> 



                <Vendor> 



                       <Id>5</Id> 



                       <DisplayName>Vendor</DisplayName> 



                </Vendor> 



        </User> 



        <User> 



                <Id>11</Id> 



                <FullName>User, API</FullName> 



                <Username>APIuser</Username> 



                <Active>true</Active> 



                <Deleted>false</Deleted> 



                <AccountType>1</AccountType> 



        </User> 



        <User> 



                <Id>12</Id> 



                <FullName>User, Test2</FullName> 



                <Username>test2user</Username> 



                <Active>true</Active> 



                <Deleted>false</Deleted> 



                <AccountType>1</AccountType> 



        </User> 



</UserList> 



JSON REQUEST (cURL) 



curl -b cookie.txt -H "content-type: application/json" -H "Accept: application/json" -X 

POST -d @GetUsersInput.json 



"https://api.lockpath.app:4443/SecurityService/GetUsers" 



JSON REQUEST (GetUsersInput.json) 



{ 



        "pageIndex": "0", 



                                NAVEX IRM Platform | API Reference Guide                          29 of 188 


----------------------- Page 30-----------------------

        "pageSize": "4", 



        "filters": [ 



                { 



                "Field": { 



                        "ShortName": "Active" 



                }, 



                "FilterType": "5", 



                "Value": "true" 



                } 



        ] 



} 



JSON RESPONSE 



 [ 



        { 



                "Id": 9, 



                "FullName": "User, Test", 



                "Username": "testuser", 



                "Active": true, 



                "Deleted": false, 



                "AccountType": 1 



        }, 



        { 



                "Id": 10, 



                "FullName": "User, VendorContact", 



                "Username": "vendorcontactuser", 



                "Active": true, 



                "Deleted": false, 



                "AccountType": 2, 



                "Vendor": { 



                        "Id": 5, 



                        "DisplayName": "Vendor" 



                } 



                                NAVEX IRM Platform | API Reference Guide                          30 of 188 


----------------------- Page 31-----------------------

        }, 



        { 



                "Id": 11, 



                "FullName": "User, API", 



                "Username": "APIuser", 



                "Active": true, 



                "Deleted": false, 



                "AccountType": 1 



        }, 



        { 



                "Id": 12, 



                "FullName": "User, Test2", 



                "Username": "test2user", 



                "Active": true, 



                "Deleted": false, 



                "AccountType": 1 



        } 



] 



                                NAVEX IRM Platform | API Reference Guide                           31 of 188 


----------------------- Page 32-----------------------

GetUserCount 



Returns an integer representing the count of all Full Users, Vendors Contact Users, and Awareness Users in the 

application. Using the optional FieldFilter you can return records for only certain user types, such as Active, 

Deleted, or users by a particular AccountType or Vendor Contacts by a certain Vendor Profile. 



Permissions:      The authentication account must have: 



                  l  Administrative Access - Read permissions to Administer - Users 



                  Vendor Contact accounts must also have: 



                  l  General Access - Read permissions to Vendor Profiles 



                  l  View permissions to Vendor Profiles workflow stage 



                  l  Vendor Profiles record permissions 



URL:              https://[instance name]:[port]/SecurityService/GetUserCount 



Method:           POST 



Input:            FieldFilter (various)      The filter parameters the users must meet to be included. 

                  (optional): 



Field Filters 



Use filters to return the user count meeting the selected criteria. 



 FieldFilter (ShortName)                 FilterType                  Value 



 Active                                  5 (Equal To)                True, False 



                                         6 (NotEqualTo) 



 Deleted                                 5 (Equal To)                True, False 



                                         6 (NotEqualTo) 



 AccountType                             5 (Equal To)                 1 (Full User), 2 (Vendor Contact), 4 

                                                                     (Awareness User) 



                                         6 (NotEqualTo) 



                                         10002 (Contains Any) 



 Vendor                                  5 (Equal To)                Vendor Profile ID for the Vendor Contact 



  Field Filter (Active) Example 



                                      NAVEX IRM Platform | API Reference Guide                                   32 of 188 


----------------------- Page 33-----------------------

 XML                                  JSON 



 <FieldFilter>                        "filters": [ 



 <Field>                              { 



 <ShortName>Active</ShortName>        "Field": { 



 </Field>                             "ShortName": "Active" 



 <FilterType>5</FilterType>           }, 



 <Value>False</Value>                 "FilterType": "5", 



 </FieldFilter>                       "Value": "false" 



                                      } 



                                      ] 



Field Filter (Deleted) Example 



 XML                                   JSON 



 <FieldFilter>                         "filters": [ 



 <Field>                                { 



 <ShortName>Deleted</ShortName>        "Field": { 



 </Field>                              "ShortName": "Deleted" 



 <FilterType>6</FilterType>             }, 



 <Value>True</Value>                   "FilterType": "6", 



 </FieldFilter>                        "Value": "true" 



                                        } 



                                       ] 



Field Filter (AccountType) Example 



                                NAVEX IRM Platform | API Reference Guide                          33 of 188 


----------------------- Page 34-----------------------

 XML                                        JSON 



 <FieldFilter>                              "filters": [ 



 <Field>                                    { 



 <ShortName>AccountType</ShortName>         "Field": { 



 </Field>                                   "ShortName": "AccountType" 



 <FilterType>10002</FilterType>             }, 



 <Value>1|2</Value>                         "FilterType": "10002", 



 </FieldFilter>                             "Value": "1|2" 



                                            } 



                                            ] 



Field Filter (Vendor) Example 



This example shows how to return Vendor Contacts with non-NAVEX IRM User Accounts. 



 XML                                  JSON 



 <FieldFilter>                        "filters": [ 



 <Field>                               { 



 <ShortName>Vendor</ShortName>        "Field": { 



 </Field>                             "ShortName": "Vendor" 



 <FilterType>5</FilterType>            }, 



 <Value>7</Value>                     "FilterType": "5", 



 </FieldFilter>                       "Value": "7" 



                                       } 



                                      ] 



                                NAVEX IRM Platform | API Reference Guide                          34 of 188 


----------------------- Page 35-----------------------

Examples 



 XML REQUEST (cURL) 



  curl -b cookie.txt -H "content-type: application/xml;charset=utf-8" -X POST -d 

  @GetUserCount.xml 



 https://api.lockpath.app:4443/SecurityService/GetUserCount 



 XML REQUEST (GetUserCount.xml) 



 <GetUserCount> 



         <filters> 



                 <FieldFilter> 



                 <Field> 



                        <ShortName>AccountType</ShortName> 



                 </Field> 



                 <FilterType>5</FilterType> 



                 <Value>1</Value> 



                 </FieldFilter> 



         </filters> 



 </GetUserCount> 



 XML RESPONSE 



 <int xmlns="http://schemas.microsoft.com/2003/10/Serialization/">#</int> 



 JSON REQUEST (cURL) 



  curl -b cookie.txt -H "content-type: application/json" -H "Accept: application/json" -X 

  POST -d @GetUserCount.json 



 https://api.lockpath.app:4443/SecurityService/GetUserCount 



 JSON REQUEST (GetUserCount.json) 



  [ 



         { 



         "Field":{ 



                 "ShortName": "AccountType" 



         }, 



         "FilterType": "5", 



         "Value": "1" 



                                NAVEX IRM Platform | API Reference Guide                        35 of 188 


----------------------- Page 36-----------------------

        } 



] 



JSON RESPONSE 



# 



                               NAVEX IRM Platform | API Reference Guide                         36 of 188 


----------------------- Page 37-----------------------

CreateUser 



Creates a user account. 



Permissions:       The authentication account must have: 



                   l Administrative Access - Create and Read permissions to Administer - Users 



                   Vendor Contact accounts must also have: 



                   l  General Access - Create, Read, and Update permissions to Vendor Profiles 



                   l View and Edit permissions to Vendor Profiles workflow stage 



                   l Vendor Profiles record permissions 



URL:               https://[instance name]:[port]/SecurityService/CreateUser 



Method:            POST 



Input:             Various user fields. 



                   Language (integer):                       The User object of the GetUser call reveals the 

                                                             language in use in the NAVEX IRM Platform. The 

                                                             default language is English (United States) and the 

                                                             default language value is "1033." 



                                                             If an API request returns a language that is not 

                                                             available, or if a language is not active in the instance, 

                                                             the error message "Invalid Language ID" returns. 



For a list of all languages and language IDs available in the NAVEX IRM Platform, see Language IDs in the 

appendix. 



                                      NAVEX IRM Platform | API Reference Guide                                   37 of 188 


----------------------- Page 38-----------------------

Examples 



 XML REQUEST (cURL) 



  curl -b cookie.txt -H "content-type: application/xml;charset=utf-8" -X POST -d 

  @CreateUser.xml 



  "https://api.lockpath.app:4443/SecurityService/CreateUser" 



 XML REQUEST (CreateUser.xml) 



  <CreateUser> 



         <user xmlns:i='http://www.w3.org/2001/XMLSchema-instance' 

  xmlns:a='http://www.w3.org/2001/XMLSchema'> 



                 <Username>testuser</Username> 



                 <Password>P@ssword2!</Password> 



                 <Active>true</Active> 



                 <Locked>false</Locked> 



                 <AccountType>1</AccountType> 



                 <FirstName>test</FirstName> 



                 <MiddleName></MiddleName> 



                 <LastName>user</LastName> 



                 <Title></Title> 



                 <Language>1033</Language> 



                 <EmailAddress>test@user.com</EmailAddress> 



                 <HomePhone></HomePhone> 



                 <WorkPhone></WorkPhone> 



                 <MobilePhone></MobilePhone> 



                 <Fax></Fax> 



                 <Manager> 



                         <Id>12</Id> 



                 </Manager> 



                 <Department> 



                         <Id>10</Id> 



                 </Department> 



                 <IsSAML>false</IsSAML> 



                 <IsLDAP>false</IsLDAP> 



                 <LDAPDirectory> 



                                 NAVEX IRM Platform | API Reference Guide                           38 of 188 


----------------------- Page 39-----------------------

                         <Id>1</Id> 



                 </LDAPDirectory> 



                 <SecurityConfiguration> 



                         <Id>1</Id> 



                 </SecurityConfiguration> 



                 <APIAccess>false</APIAccess> 



                 <Groups> 



                         <Group> 



                                 <Id>5</Id> 



                         </Group> 



                 </Groups> 



                 <SecurityRoles> 



                         <SecurityRole> 



                                 <Id>1</Id> 



                         </SecurityRole> 



                 </SecurityRoles> 



          </user> 



  </CreateUser> 



XML REQUEST (CreateVendorContact.xml) 



<CreateUser> 



        <user xmlns:i='http://www.w3.org/2001/XMLSchema-instance' 



        xmlns:a='http://www.w3.org/2001/XMLSchema'> 



                <Username>vendor contact</Username> 



                <Password>p@ssword!</Password> 



                <Active>true</Active> 



                <Locked>false</Locked> 



                <AccountType>2</AccountType> 



                <Vendor> 



                        <Id>7</Id> 



                </Vendor> 



                <FirstName>Vendor</FirstName> 



                <MiddleName></MiddleName> 



                                  NAVEX IRM Platform | API Reference Guide                          39 of 188 


----------------------- Page 40-----------------------

                <LastName>Contact</LastName> 



                <Title>Manager</Title> 



                <Language>1033</Language> 



                <EmailAddress>test@user.com</EmailAddress> 



                <HomePhone></HomePhone> 



                <WorkPhone></WorkPhone> 



                <MobilePhone></MobilePhone> 



                <Fax></Fax> 



                <SecurityRoles> 



                       <SecurityRole> 



                               <Id>1</Id> 



                       </SecurityRole> 



                </SecurityRoles> 



        </user> 



</CreateUser> 



XML RESPONSE (CreateUser.xml) 



<UserItem xmlns:i="http://www.w3.org/2001/XMLSchema-instance"> 



        <Id>1063</Id> 



        <FullName>user, test</FullName> 



        <Username>testuser</Username> 



        <Active>true</Active> 



        <Locked>false</Locked> 



        <Deleted>false</Deleted> 



        <AccountType>1</AccountType> 



        <FirstName>test</FirstName> 



        <MiddleName/> 



        <LastName>user</LastName> 



        <Title/> 



        <Language>1033</Language> 



        <EmailAddress>test@user.com</EmailAddress> 



        <HomePhone/> 



        <WorkPhone/> 



                                 NAVEX IRM Platform | API Reference Guide                          40 of 188 


----------------------- Page 41-----------------------

        <MobilePhone/> 



        <Fax/> 



        <Manager> 



                <Id>12</Id> 



                <FullName>Name, User</FullName> 



        </Manager> 



        <Department> 



                <Id>10</Id> 



                <Name>Anonymous Incident Analysts</Name> 



        </Department> 



        <IsSAML>false</IsSAML> 



        <IsLDAP>false</IsLDAP> 



        <SecurityConfiguration> 



                <Id>1</Id> 



                <DisplayName>Administrator Configuration</DisplayName> 



        </SecurityConfiguration> 



        <APIAccess>false</APIAccess> 



        <Groups> 



                <Group> 



                        <Id>5</Id> 



                        <Name>Policy Incident Analysts</Name> 



                </Group> 



        </Groups> 



        <SecurityRoles> 



                <SecurityRole> 



                        <Id>1</Id> 



                        <Name>Administration</Name> 



                </SecurityRole> 



        </SecurityRoles> 



        <FunctionalRoles/> 



</UserItem> 



XML RESPONSE (CreateVendorContact.xml) 



<UserItem xmlns:i="http://www.w3.org/2001/XMLSchema-instance"> 



                                  NAVEX IRM Platform | API Reference Guide                           41 of 188 


----------------------- Page 42-----------------------

        <Id>1062</Id> 



        <FullName>Contact, Vendor</FullName> 



        <Username>vendor contact</Username> 



        <Active>true</Active> 



        <Locked>false</Locked> 



        <Deleted>false</Deleted> 



        <AccountType>2</AccountType> 



        <Vendor> 



                <Id>7</Id> 



                <DisplayName>KC Food Truck</DisplayName> 



        </Vendor> 



        <FirstName>Vendor</FirstName> 



        <MiddleName/> 



        <LastName>Contact</LastName> 



        <Title>Manager</Title> 



        <Language>1033</Language> 



        <EmailAddress>test@user.com</EmailAddress> 



        <WorkPhone/> 



        <MobilePhone/> 



        <Fax/> 



        <IsSAML>false</IsSAML> 



        <IsLDAP>false</IsLDAP> 



        <SecurityConfiguration> 



                <Id>12</Id> 



                <DisplayName>Vendor Contacts</DisplayName> 



        </SecurityConfiguration> 



        <APIAccess>false</APIAccess> 



        <VendorComments/> 



        <Groups/> 



</UserItem> 



                                 NAVEX IRM Platform | API Reference Guide                          42 of 188 


----------------------- Page 43-----------------------

JSON REQUEST (cURL) 



curl -b cookie.txt -H "content-type: application/json" -H "Accept: application/json" -X 

POST -d @CreateUser.json 



https://api.lockpath.app:4443/SecurityService/CreateUser 



JSON REQUEST (CreateUser.json) 



{ 



        "Username": "test", 



        "Password": "password", 



        "Active": true, 



        "Locked": false, 



        "AccountType": 1, 



        "FirstName": "Test", 



        "MiddleName": "", 



        "LastName": "User", 



        "Title": "", 



        "Language": 1033, 



        "EmailAddress": "test@user.com", 



        "HomePhone": "", 



        "WorkPhone": "", 



        "MobilePhone": "", 



        "Fax": "", 



        "IsSAML": false, 



        "IsLDAP": true, 



        "LDAPDirectory": { 



            "Id": "1" 



        }, 



        "Manager": { 



            "Id": "10" 



        }, 



        "Department": { 



            "Id": "10" 



        }, 



        "SecurityConfiguration": { 



            "Id": "1" 



        }, 



        "APIAccess": false, 



                                NAVEX IRM Platform | API Reference Guide                          43 of 188 


----------------------- Page 44-----------------------

        "Groups": [ 



            { 



               "Id": "2" 



            } 



        ], 



        "SecurityRoles": [ 



               { 



                  "Id": "1" 



               } 



        ], 



        "FunctionalRoles": [ 



            { 



                  "Id": "9" 



            } 



        ] 



} 



JSON REQUEST (CreateVendorContact.json) 



{ 



        "Username": "vuser", 



        "Password": "password", 



        "Active": true, 



        "Locked": false, 



        "AccountType": 2, 



        "Vendor": { 



                "Id": 7 



                }, 



        "FirstName": "Test", 



        "MiddleName": "", 



        "LastName": "User", 



        "Title": "", 



        "Language": 1033, 



        "EmailAddress": "test@user.com", 



        "HomePhone": "", 



                                NAVEX IRM Platform | API Reference Guide                          44 of 188 


----------------------- Page 45-----------------------

          "WorkPhone": "", 



          "MobilePhone": "", 



          "Fax": "" 



  } 



JSON RESPONSE (CreateUser.json) 



{ 



        "Id": 1067, 



        "FullName": "User, Test", 



        "Username": "testuser", 



        "Active": true, 



        "Locked": false, 



        "Deleted": false, 



        "AccountType": 1, 



        "FirstName": "Test", 



        "MiddleName": "", 



        "LastName": "User", 



        "Title": "", 



        "Language": 1033, 



        "EmailAddress": "test@user.com", 



        "HomePhone": "", 



        "WorkPhone": "", 



        "MobilePhone": "", 



        "Fax": "", 



        "Manager": { 



                "Id": 10, 



                "FullName": "Manager" 



        }, 



        "Department": { 



                "Id": 10, 



                "Name": "Anonymous Incident Analysts" 



        }, 



        "IsSAML": false, 



                                  NAVEX IRM Platform | API Reference Guide                          45 of 188 


----------------------- Page 46-----------------------

        "IsLDAP": true, 



        "LDAPDirectory": { 



               "Id": 1, 



               "DisplayName": "QE Domain" 



        }, 



        "SecurityConfiguration": { 



               "Id": 1, 



               "DisplayName": "Administrator Configuration" 



        }, 



        "APIAccess": false, 



        "Groups": [ 



                { 



               "Id": 2, 



               "Name": "Exception Analysts" 



                } 



        ], 



        "SecurityRoles": [ 



                { 



               "Id": 1, 



               "Name": "Administration" 



                } 



        ], 



        "FunctionalRoles": [ 



                { 



               "Id": 9, 



               "DisplayName": "Product Analysis and Design" 



                } 



        ] 



} 



 JSON RESPONSE (CreateVendorContact.json) 



  { 



         "Id": 1068, 



                                 NAVEX IRM Platform | API Reference Guide                          46 of 188 


----------------------- Page 47-----------------------

        "FullName": "User, Test", 



        "Username": "vuser", 



        "Active": true, 



        "Locked": false, 



        "Deleted": false, 



        "AccountType": 2, 



        "Vendor": { 



                "Id": 7, 



                "DisplayName": "KC Food Truck" 



        }, 



        "FirstName": "Test", 



        "MiddleName": "", 



        "LastName": "User", 



        "Title": "", 



        "Language": 1033, 



        "EmailAddress": "test@user.com", 



        "HomePhone": "", 



        "WorkPhone": "", 



        "MobilePhone": "", 



        "Fax": "", 



        "IsSAML": false, 



        "IsLDAP": false, 



        "SecurityConfiguration": { 



                "Id": 12, 



                "DisplayName": "Vendor Contacts" 



        }, 



        "VendorComments": "", 



        "Groups": [] 



} 



                                NAVEX IRM Platform | API Reference Guide                          47 of 188 


----------------------- Page 48-----------------------

UpdateUser 



Updates a user account. 



Permissions:     The authentication account must have: 



                 l  Administrative Access - Read and Update permissions to Administer - Users 



                 Vendor Contact accounts must also have: 



                 l  General Access - Read and Update permissions to Vendor Profiles 



                 l  View and Edit permissions to Vendor Profiles workflow stage 



                 l  Vendor Profiles record permissions 



URL:             https://[instance name]:[port]/SecurityService/UpdateUser 



Method:          POST 



Input:           Various user fields. 



                 CommitNullProperties (boolean) (              Clears all non-required string field values. 

                 optional):                                     By default, the setting is false. Use the 

                                                               GetUser call to retrieve current values of 

                                                               the User object and hand UpdateUser the 

                                                               same User object in the request, minus 

                                                               whatever fields you intend to clear. The 

                                                               CommitNullProperties tag must be placed 

                                                               at the end of the User object. 



                 Language (integer):                           The User object of the GetUser call 

                                                                reveals the language in use in the 

                                                                NAVEX IRM Platform. The default 

                                                               language is English (United States) and 

                                                               the default language value is "1033." 



                                                                If an API request returns a language that 

                                                                is not available, or if a language is not 

                                                               active in the instance, the error message 

                                                               "Invalid Language ID" returns. 



For a list of all languages and language IDs available in the NAVEX IRM Platform, see Language IDs in the 

appendix. 



                                      NAVEX IRM Platform | API Reference Guide                                    48 of 188 


----------------------- Page 49-----------------------

Examples 



 XML REQUEST (cURL) 



  curl -b cookie.txt -H "content-type: application/xml;charset=utf-8" -X POST -d 

  @UpdateUser.xml 



  "https://api.lockpath.app:4443/SecurityService/UpdateUser" 



 XML REQUEST (UpdateUser.xml) 



  <UpdateUser> 



  <user xmlns:i='http://www.w3.org/2001/XMLSchema-instance' 



  xmlns:a='http://www.w3.org/2001/XMLSchema'> 



         <Id>10</Id> 



         <Username>test</Username> 



         <Password>password</Password> 



         <Active>true</Active> 



         <Locked>false</Locked> 



         <AccountType>1</AccountType> 



         <FirstName>test</FirstName> 



         <MiddleName></MiddleName> 



         <LastName>user</LastName> 



         <Title></Title> 



         <Language>1033</Language> 



         <EmailAddress>test@user.com</EmailAddress> 



         <HomePhone></HomePhone> 



         <WorkPhone>9132345678</WorkPhone> 



         <MobilePhone></MobilePhone> 



         <Fax></Fax> 



         <IsSAML>false</IsSAML> 



         <IsLDAP>true</IsLDAP> 



         <LDAPDirectory> 



                 <Id>1</Id> 



         </LDAPDirectory> 



         <Manager></Manager> 



         <Department></Department> 



                                 NAVEX IRM Platform | API Reference Guide                           49 of 188 


----------------------- Page 50-----------------------

        <SecurityConfiguration> 



                <Id>1</Id> 



        </SecurityConfiguration> 



        <APIAccess>true</APIAccess> 



        <Groups> 



                <Group> 



                        <Id>2</Id> 



                </Group> 



        </Groups> 



<CommitNullProperties>true</CommitNullProperties> 



</user> 



</UpdateUser> 



XML RESPONSE 



<UserItem xmlns:i="http://www.w3.org/2001/XMLSchema-instance"> 



        <Id>10</Id> 



        <FullName>testuser</FullName> 



        <Username>test</Username> 



        <Active>true</Active> 



        <Locked>false</Locked> 



        <Deleted>false</Deleted> 



        <AccountType>1</AccountType> 



        <FirstName>test</FirstName> 



        <MiddleName/> 



        <LastName>user</LastName> 



        <Title/> 



        <Language>1033</Language> 



        <EmailAddress>test@user.com</EmailAddress> 



        <HomePhone/> 



        <WorkPhone/>9131234567</WorkPhone> 



        <MobilePhone/> 



        <Fax/> 



        <IsSAML>false</IsSAML> 



                                NAVEX IRM Platform | API Reference Guide                          50 of 188 


----------------------- Page 51-----------------------

        <IsLDAP>true</IsLDAP> 



        <LDAPDirectory> 



                <Id>1</Id> 



                <DisplayName>QE Domain</DisplayName> 



        </LDAPDirectory> 



        <SecurityConfiguration> 



                <Id>1</Id> 



                <DisplayName>Administrator Configuration</DisplayName> 



        </SecurityConfiguration> 



        <APIAccess>true</APIAccess> 



        <Groups> 



                <Group> 



                       <Id>2</Id> 



                       <Name>Exception Analysts</Name> 



                </Group> 



        </Groups> 



        <SecurityRoles> 



                <SecurityRole> 



                <Id>1</Id> 



                       <Name>Administration</Name> 



                </SecurityRole> 



        </SecurityRoles> 



        <FunctionalRoles/> 



</UserItem> 



JSON REQUEST (cURL) 



curl -b cookie.txt -H "content-type: application/json" -H "Accept: application/json" -X 

POST -d @UpdateUser.json 



https://api.lockpath.app:4443/SecurityService/UpdateUser 



JSON REQUEST (UpdateUser.json) 



{ 



        "Id": "10", 



        "Username": "test", 



                                NAVEX IRM Platform | API Reference Guide                          51 of 188 


----------------------- Page 52-----------------------

        "Password": "password", 



        "Active": true, 



        "Locked": false, 



        "AccountType": 1, 



        "FirstName": "Test", 



        "MiddleName": "", 



        "LastName": "User", 



        "Title": "", 



        "Language": 1033, 



        "EmailAddress": "test@user.com", 



        "HomePhone": "", 



        "WorkPhone": "9132345678", 



        "MobilePhone": "", 



        "Fax": "", 



        "IsSAML": false, 



        "IsLDAP": true, 



        "LDAPDirectory": { 



                "Id": "1" 



                ), 



        "Manager": "", 



        "Department": "", 



        "SecurityConfiguration": 



                "Id": "1" 



                }, 



        "APIAccess": true, 



        "CommitNullProperties": "true" 



} 



JSON RESPONSE 



{ 



        "Id": 10, 



        "FullName": "User, Test", 



        "Username": "test", 



                                NAVEX IRM Platform | API Reference Guide                          52 of 188 


----------------------- Page 53-----------------------

"Active": true, 



"Locked": false, 



"Deleted": false, 



"AccountType": 1, 



"FirstName": "Test", 



"MiddleName": "", 



"LastName": "User", 



"Title": "", 



"Language": 1033, 



"EmailAddress": "test@user.com", 



"HomePhone": "", 



"WorkPhone": "9132345678", 



"MobilePhone": "", 



"Fax": "", 



"IsSAML": false, 



"IsLDAP": true, 



"LDAPDirectory": { 



        "Id": 1, 



        "DisplayName": "QE Domain" 



}, 



"SecurityConfiguration": { 



        "Id": 1, 



        "DisplayName": "Administrator Configuration" 



}, 



"APIAccess": true, 



"Groups": [], 



"SecurityRoles": [ 



        { 



        "Id": 1, 



        "Name": "Administration" 



        } 



], 



                        NAVEX IRM Platform | API Reference Guide                          53 of 188 


----------------------- Page 54-----------------------

"FunctionalRoles": [] 



} 



                                NAVEX IRM Platform | API Reference Guide                          54 of 188 


----------------------- Page 55-----------------------

DeleteUser 



Deletes a user account. 



Permissions:    The authentication account must have: 



                 l Administrative Access - Read and Delete permissions to Administer - Users 



                Vendor Contact accounts must also have: 



                 l General Access - Read and Delete permissions to Vendor Profiles 



                 l View permissions to Vendor Profiles workflow stage 



                 l Vendor Profiles record permissions 



URL:            https://[instance name]:[port]/SecurityService/DeleteUser 



Method:         DELETE 



Input:          Id (integer):    The Id of the user account. 



Examples 



 XML REQUEST (cURL) 



  curl -b cookie.txt -H "content-type: application/xml;charset=utf-8" -X DELETE -d 

  "<DeleteUser><id>10</id></DeleteUser>" 



  "https://api.lockpath.app:4443/SecurityService/DeleteUser" 



 XML RESPONSE 



  <boolean xmlns="http://schemas.microsoft.com/2003/10/Serialization/">true</boolean> 



  JSON REQUEST (cURL) 



  curl -b cookie.txt -H "content-type: application/json" -H "Accept: application/json" -X 

  DELETE -d "10" 



  https://api.lockpath.app:4443/SecurityService/DeleteUser 



  JSON RESPONSE 



  true 



                                  NAVEX IRM Platform | API Reference Guide                            55 of 188 


----------------------- Page 56-----------------------

GetGroup 



Returns all supporting fields for a given group. 



Permissions:    The authentication account must have: 



                l  Administrative Access - Read permissions to Administer - Groups 



URL:            https://[instance name]:[port]/SecurityService/GetGroup 



Method:         GET 



Input:          Id:              The Id of the given group. 



Examples 



 XML REQUEST (cURL) 



  curl -b cookie.txt -H "content-type: application/xml;charset=utf-8" 



  "https://api.lockpath.app:4443/SecurityService/GetGroup?id=2" 



 XML RESPONSE 



  <GroupItem xmlns:i="http://www.w3.org/2001/XMLSchema-instance"> 



          <Id>2</Id> 



          <Name>Anonymous Incident Analysts</Name> 



          <Description/> 



          <BusinessUnit>false</BusinessUnit> 



          <SecurityRoles/> 



          <Users> 



                 <User> 



                         <Id>6</Id> 



                         <FullName>Admin, Lockpath</FullName> 



                 </User> 



                 <User> 



                         <Id>27</Id> 



                         <FullName>User, Test</FullName> 



                 </User> 



          </Users> 



          <ChildGroups/> 



          <ParentGroups/> 



  </GroupItem> 



                                  NAVEX IRM Platform | API Reference Guide                           56 of 188 


----------------------- Page 57-----------------------

JSON REQUEST (cURL) 



curl -b cookie.txt -H "content-type: application/json" -H "Accept: application/json" 



https://api.lockpath.app:4443/SecurityService/GetGroup?id=2 



JSON RESPONSE 



{ 



        "Id": 2, 



        "Name": "Anonymous Incident Analysts", 



        "Description": "", 



        "BusinessUnit": false, 



        "SecurityRoles": [], 



        "Users": [ 



                { 



                       "Id": 6, 



                       "FullName": "Admin, Lockpath" 



                }, 



                { 



                       "Id": 27, 



                       "FullName": "User, Test" 



                } 



        ], 



        "ChildGroups": [], 



        "ParentGroups": [] 



} 



                                NAVEX IRM Platform | API Reference Guide                         57 of 188 


----------------------- Page 58-----------------------

GetGroups 



Returns the ID and Name for groups. You can filter the list to return only the groups meeting selected criteria. 



Permissions:      The authentication account must have: 



                  l  Administrative Access - Read permissions to Administer - Groups 



URL:              https://[instance name]:[port]/SecurityService/GetGroups 



Method:           POST 



Input:            pageIndex (integer):               The index of the page of result to return. Must be ≥ 0. 



                  pageSize (integer):                The size of the page results to return. Must be ≥ 1. 



                  FieldFilter (various) (optional):  The filter parameters the groups must meet to be included. 



Field Filters 



Use filters to return only the users meeting the selected criteria. 



 Field ShortName                         FilterType                 Value 



 Active                                  5 (Equal To)               True, False 



                                         6 (NotEqualTo) 



 Deleted                                 5 (Equal To)               True, False 



                                         6 (NotEqualTo) 



 AccountType                             5 (Equal To)               1 (Full User), 2 (Vendor, VendorContact), 4 

                                                                    (Awareness User) 



                                         6 (NotEqualTo) 



                                         10002 (Contains Any) 



                                     NAVEX IRM Platform | API Reference Guide                                   58 of 188 


----------------------- Page 59-----------------------

Filter Example 



 XML                                        JSON 



 <filters>                                  { 



 <FieldFilter>                                      "filters": { 



 <FieldPath>                                                "FieldFilter": [ 



 <Field>                                                    { 



 <ShortName>Active</ShortName>                                      "FieldPath": { 



 </Field>                                                           "Field": { 



 </FieldPath>                                                              "ShortName": "Active" 



 <FilterType>5</FilterType>                                                } 



 <Value>False</Value>                                               }, 



 </FieldFilter>                                                     "FilterType": 5, 



 <FieldFilter>                                                      "Value": "False" 



 <Field>                                                    }, 



 <ShortName>Deleted</ShortName>                             { 



 </Field>                                                           "Field": { 



 <FilterType>6</FilterType>                                                "ShortName": "Deleted" 



 <Value>True</Value>                                                       }, 



 </FieldFilter>                                                     "FilterType": 6, 



 <FieldFilter>                                                      "Value": "True" 



 <Field>                                                    }, 



 <ShortName>AccountType</ShortName>                         { 



 </Field>                                                           "Field": { 



 <FilterType>10002</FilterType>                                            "ShortName": 

                                            "AccountType" 

 <Value>1|4</Value> 

                                                            }, 

 </FieldFilter> 

                                                                    "FilterType": 10002, 

 </filters> 

                                                                    "Value": "1|4" 



                                                            } 



                                                            ] 



                                                    } 



                                            } 



                                NAVEX IRM Platform | API Reference Guide                          59 of 188 


----------------------- Page 60-----------------------

Examples 



 XML REQUEST (cURL) 



  curl -b cookie.txt -H "content-type: application/xml;charset=utf-8" -X POST -d 

  @GetGroups.xml 



 https://api.lockpath.app:4443/SecurityService/GetGroups 



 XML REQUEST (GetGroups.xml) 



 <GetGroups> 



         <pageIndex>0</pageIndex> 



         <pageSize>2</pageSize> 



         <filters> 



             <FieldFilter> 



                <FieldPath> 



                   <Field> 



                      <ShortName>BusinessUnit</ShortName> 



                   </Field> 



                </FieldPath> 



                <FilterType>5</FilterType> 



                <Value>False</Value> 



             </FieldFilter> 



         </filters> 



 </GetGroups> 



 XML RESPONSE 



 <GroupList xmlns:i="http://www.w3.org/2001/XMLSchema-instance"> 



         <Group> 



             <Id>10</Id> 



             <Name>Anonymous Incident Analysts</Name> 



         </Group> 



         <Group> 



             <Id>6</Id> 



             <Name>Business Continuity Plan Approvers</Name> 



         </Group> 



 </GroupList> 



 JSON REQUEST (cURL) 



                                NAVEX IRM Platform | API Reference Guide                         60 of 188 


----------------------- Page 61-----------------------

curl -b cookie.txt -H "content-type: application/json" -H "Accept: application/json" -X 

POST -d @GetGroups.json 



https://api.lockpath.app:4443/SecurityService/GetGroups 



JSON REQUEST (GetGroups.json) 



{ 



        "pageIndex": "0", 



        "pageSize": "2", 



        "filters": 



        [ 



            { 



               "Field": 



               { 



                  "ShortName": "BusinessUnit" 



               }, 



               "FilterType": "5", 



               "Value": "False" 



            } 



        ] 



} 



JSON RESPONSE 



 [ 



        { 



                "Id": 10, 



                "Name": "Anonymous Incident Analysts" 



        }, 



        { 



                "Id": 6, 



                "Name": "Business Continuity Plan Approvers" 



        } 



] 



                                NAVEX IRM Platform | API Reference Guide                          61 of 188 


----------------------- Page 62-----------------------

CreateGroup 



Creates a group. 



Permissions:     The authenitcation account must have: 



                 l Administrative Access - Read and Create permissions to Administer - Groups 



URL:             https://[instance name]:[port]/SecurityService/CreateGroup 



Method:          POST 



Input:           Various group fields. 



Examples 



  XML REQUEST (cURL) 



  curl -b cookie.txt -H "content-type: application/xml;charset=utf-8" -X POST -d 

  @CreateGroup.xml 



  https://api.lockpath.app:4443/SecurityService/CreateGroup 



  XML REQUEST (CreateGroup.xml) 



  <CreateGroup> 



  <group xmlns:i='http://www.w3.org/2001/XMLSchema-instance' 

  xmlns:a='http://www.w3.org/2001/XMLSchema'> 



          <Name>Business Owners</Name> 



          <Description>Business Owners Group</Description 



          <BusinessUnit>false</BusinessUnit> 



                 <Users> 



                         <User> 



                                 <Id>1027</Id> 



                         </User> 



                         <User> 



                                 <Id>6</Id> 



                         </User> 



                 </Users> 



          <ChildGroups></ChildGroups> 



          <ParentGroups></ParentGroups> 



  </group> 



  </CreateGroup> 



                                  NAVEX IRM Platform | API Reference Guide                           62 of 188 


----------------------- Page 63-----------------------

XML RESPONSE 



<GroupItem xmlns:i="http://www.w3.org/2001/XMLSchema-instance"> 



        <Id>20</Id> 



        <Name>Business Owners</Name> 



        <Description>Business Owners Group</Description> 



        <BusinessUnit>false</BusinessUnit> 



        <SecurityRoles/> 



        <Users> 



                <User> 



                       <Id>1027</Id> 



                       <FullName>User, Test</FullName> 



                </User> 



        </Users> 



        <ChildGroups/> 



        <ParentGroups/> 



</GroupItem> 



JSON REQUEST (cURL) 



curl -b cookie.txt -H "content-type: application/json" -H "Accept: application/json" -X 

POST -d @CreateGroup.json 



https://api.lockpath.app:4443/SecurityService/CreateGroup 



JSON REQUEST (CreateGroup.json) 



{ 



        "Id": 21, 



        "Name": "Government", 



        "Description": "Government Group", 



        "BusinessUnit": false, 



        "SecurityRoles": "", 



        "Users": [{ 



                "Id": 1027 



        }], 



        "ChildGroups": "", 



        "ParentGroups": "" 



                                NAVEX IRM Platform | API Reference Guide                         63 of 188 


----------------------- Page 64-----------------------

} 



JSON RESPONSE 



{ 



        "Id": 22, 



        "Name": "Government", 



        "Description": "Government Group", 



        "BusinessUnit": false, 



        "SecurityRoles": [], 



        "Users": [ 



                { 



                        "Id": 1027, 



                        "FullName": "User, Test" 



                } 



        ], 



        "ChildGroups": [], 



        "ParentGroups": [] 



} 



                                NAVEX IRM Platform | API Reference Guide                          64 of 188 


----------------------- Page 65-----------------------

UpdateGroup 



Updates a group. 



Permissions:     The authentication account must have: 



                 l Administrative Access - Read and Update permissions to Administer - Groups 



URL:             https://[instance name]:[port]/SecurityService/UpdateGroup 



Method:          POST 



Input:          Various group fields. 



Examples 



 XML REQUEST (cURL) 



  curl -b cookie.txt -H "content-type: application/xml;charset=utf-8" -X POST -d 

  @UpdateGroup.xml 



  https://api.lockpath.app:4443/SecurityService/UpdateGroup 



 XML REQUEST (UpdateGroup.xml) 



  <UpdateGroup> 



         <group xmlns:i='http://www.w3.org/2001/XMLSchema-instance' 

  xmlns:a='http://www.w3.org/2001/XMLSchema'> 



                 <Id>6</Id> 



                 <Name>API Group</Name> 



                 <Description>This is an update.</Description> 



                 <BusinessUnit>false</BusinessUnit> 



                 <Users> 



                 <User> 



                         <Id>10</Id> 



                 </User> 



                         <User> 



                                 <Id>11</Id> 



                         </User> 



                 </Users> 



                 <ParentGroups> 



                         <Group> 



                                 <Id>2</Id> 



                                  NAVEX IRM Platform | API Reference Guide                           65 of 188 


----------------------- Page 66-----------------------

                        </Group> 



                        <Group> 



                               <Id>3</Id> 



                        </Group> 



                </ParentGroups> 



        </group> 



</UpdateGroup> 



XML RESPONSE 



<GroupItem xmlns:i="http://www.w3.org/2001/XMLSchema-instance"> 



        <Id>6</Id> 



        <Name>API Group</Name> 



        <Description>This is an update.</Description> 



        <BusinessUnit>false</BusinessUnit> 



        <SecurityRoles/> 



        <Users> 



                <User> 



                        <Id>10</Id> 



                        <FullName>User, Test</FullName> 



                </User> 



                <User> 



                        <Id>11</Id> 



                        <FullName>User, API</FullName> 



                </User> 



        </Users> 



        <ChildGroups/> 



        <ParentGroups> 



                <Group> 



                        <Id>2</Id> 



                        <Name>Exception Analysts</Name> 



                </Group> 



                <Group> 



                        <Id>3</Id> 



                                NAVEX IRM Platform | API Reference Guide                          66 of 188 


----------------------- Page 67-----------------------

                       <Name>Information Security Incident Analysts</Name> 



                </Group> 



        </ParentGroups> 



</GroupItem> 



JSON REQUEST (cURL) 



curl -b cookie.txt -H "content-type: application/json" -H "Accept: application/json" -X 

POST -d @UpdateGroup.json 



https://api.lockpath.app:4443/SecurityService/UpdateGroup 



JSON REQUEST (UpdateGroup.json) 



{ 



        "Id": 6, 



        "Name": "API Group", 



        "Description": "Another API update.", 



        "BusinessUnit": false, 



        "Users": [ 



                { 



                        "Id": 10 



                }, 



                { 



                        "Id": 11 



                } 



        ], 



        "ParentGroups": [ 



                { 



                        "Id": 2 



                }, 



                { 



                        "Id": 3 



                } 



        ] 



} 



                                NAVEX IRM Platform | API Reference Guide                          67 of 188 


----------------------- Page 68-----------------------

JSON RESPONSE 



{ 



        "Id": 6, 



        "Name": "API Group", 



        "Description": "Another API update.", 



        "BusinessUnit": false, 



        "SecurityRoles": [], 



        "Users": [ 



                { 



                        "Id": 10, 



                        "FullName": "User, Test" 



                }, 



                { 



                        "Id": 11, 



                        "FullName": "User, API" 



                } 



        ], 



        "ChildGroups": [], 



        "ParentGroups": [ 



                { 



                        "Id": 2, 



                        "Name": "Exception Analysts" 



                }, 



                { 



                        "Id": 3, 



                        "Name": "Information Security Incident Analysts" 



                } 



        ] 



} 



                                NAVEX IRM Platform | API Reference Guide                          68 of 188 


----------------------- Page 69-----------------------

DeleteGroup 



Deletes a group. 



Permissions:    The authentication account must have: 



                l Administrative Access - Read and Delete permissions to Administer - Groups 



URL:            https://[instance name]:[port]/SecurityService/DeleteGroup 



Method:         DELETE 



Input:          Id (integer):    The Id of the group. 



Examples 



 XML REQUEST (cURL) 



  curl -b cookie.txt -H "content-type: application/xml;charset=utf-8" -X DELETE -d 

  "<DeleteGroup><id>10</id></DeleteGroup>" 



  https://api.lockpath.app:4443/SecurityService/DeleteGroup 



 XML RESPONSE 



  <boolean xmlns="http://schemas.microsoft.com/2003/10/Serialization/">true</boolean> 



 JSON REQUEST (cURL) 



  curl -b cookie.txt -H "content-type: application/json" -H "Accept: application/json" -X 

  DELETE -d "10" 



  https://api.lockpath.app:4443/SecurityService/DeleteGroup 



 JSON RESPONSE 



  true 



                                 NAVEX IRM Platform | API Reference Guide                         69 of 188 


----------------------- Page 70-----------------------

3: Component Services API 



This chapter provides a list of the available methods for retrieving, updating, and deleting data from the 

NAVEX IRM Platform. 



    GetComponent                                                                                              71 



    GetComponentList                                                                                          73 



    GetComponentByAlias                                                                                       75 



    GetFieldList                                                                                              77 



    GetField                                                                                                  80 



    GetAvailableLookupRecords                                                                                 82 



    GetRecord                                                                                                 85 



    GetRecords                                                                                                87 



    GetRecordCount                                                                                            91 



    GetDetailRecord                                                                                           95 



    GetDetailRecords                                                                                          98 



    GetLookupReportColumnFields                                                                              110 



    GetRecordAttachment                                                                                      112 



    GetRecordAttachments                                                                                     114 



    GetWorkflow                                                                                              116 



    GetWorkflows                                                                                             120 



    TransitionRecord                                                                                         122 



    VoteRecord                                                                                               124 



    CreateRecord                                                                                             126 



    UpdateRecord                                                                                             133 



    UpdateRecordAttachments                                                                                  137 



    DeleteRecord                                                                                             141 



    DeleteRecordAttachments                                                                                  143 



    ImportFile                                                                                               147 


----------------------- Page 71-----------------------

GetComponent 



Retrieves a component specified by its ID. A component is a user-defined data object such as a custom content 

table. The component ID may be found by using GetComponentList. 



Permissions:    The authentication account must have: 



                l  General Access - Read permissions to the selected component 



URL:            https://[instance name]:[port]/ComponentService/GetComponent?id={ID} 



Method:         GET 



Input:          Id (integer):          The Id of the desired component. 



Examples 



  XML REQUEST (cURL) 



  curl -b cookie.txt -H "content-type: application/xml;charset=utf-8" 



  https://api.lockpath.app:4443/ComponentService/GetComponent?id=10021 



  XML RESPONSE 



  <ComponentItem xmlns:i="http://www.w3.org/2001/XMLSchema-instance"> 



         <Id>10021</Id> 



         <Name>Incident Reports</Name> 



         <SystemName>IncidentReports</SystemName> 



         <ShortName>IncidentReports</ShortName> 



  </ComponentItem> 



                                  NAVEX IRM Platform | API Reference Guide                            71 of 188 


----------------------- Page 72-----------------------

JSON REQUEST (cURL) 



curl -b cookie.txt -H "Accept: application/json" 

https://api.lockpath.app:4443/ComponentService/GetComponent?id=10021 



JSON RESPONSE 



{ 



       "Id": 10021, 



       "Name": "Incident Reports", 



       "SystemName": "IncidentReports", 



       "ShortName": "IncidentReports" 



} 



                               NAVEX IRM Platform | API Reference Guide                         72 of 188 


----------------------- Page 73-----------------------

GetComponentList 



Returns a complete list of all components available to the user based on account permissions. No input elements 

are used. The list will be ordered in ascending alphabetical order of the component name. 



Permissions:    The authentication account must have: 



                l  General Access - Read permissions to the selected components 



URL:            https://[instance name]:[port]/ComponentService/GetComponentList 



Method:         GET 



Input:          No inputs allowed. 



Examples 



In the samples, an ellipse (...) indicates an incomplete list of items returned. 



  XML REQUEST (cURL) 



  curl -b cookie.txt -H "content-type: application/xml;charset=utf-8" 



  https://api.lockpath.app:4443/ComponentService/GetComponentList 



  XML RESPONSE 



  <ComponentList xmlns:i="http://www.w3.org/2001/XMLSchema-instance"> 



         <Component> 



                 <Id>10003</Id> 



                 <Name>Device Types</Name> 



                 <SystemName>DeviceTypes</SystemName> 



                 <ShortName>DeviceTypes</ShortName> 



         </Component> 



         <Component> 



              <Id>10001</Id> 



              <Name>Devices</Name> 



              <SystemName>Devices</SystemName> 



              <ShortName>Devices</ShortName> 



         </Component> 



  ... 



  </ComponentList> 



                                  NAVEX IRM Platform | API Reference Guide                            73 of 188 


----------------------- Page 74-----------------------

JSON REQUEST (cURL) 



curl -b cookie.txt -H "Accept: application/json" 



https://api.lockpath.app:4443/ComponentService/GetComponentList 



JSON RESPONSE 



[ 



        { 



                   "Id": "10003", 



                   "Name": "Device Types", 



                   "SystemName": "DeviceTypes", 



                   "ShortName": "DeviceTypes" 



               }, 



               { 



                   "Id": "10001", 



                   "Name": "Devices", 



                   "SystemName": "Devices", 



                   "ShortName": "Devices" 



               } 



... 



] 



                               NAVEX IRM Platform | API Reference Guide                          74 of 188 


----------------------- Page 75-----------------------

GetComponentByAlias 



Retrieves a component specified by its Alias. A component is a user-defined data object such as a custom 

content table. The component Alias may be found by using GetComponentList. 



Permissions:    The authentication account must have: 



                l General Access - Read permissions to the specific component 



URL:            https://[instance name]:[port]/ComponentService/GetComponentByAlias?alias={ALIAS} 



Method:         GET 



Input:          Alias (string):             The alias (shortname) of the component. 



Examples 



  XML REQUEST (cURL) 



  curl -b cookie.txt -H "content-type: application/xml;charset=utf-8" 



  https://api.lockpath.app:4443/ComponentService/GetComponentByAlias?alias=IncidentReports 



  XML RESPONSE 



  <ComponentItem xmlns:i="http://www.w3.org/2001/XMLSchema-instance"> 



         <Id>10021</Id> 



         <Name>Incident Reports</Name> 



         <SystemName>IncidentReports</SystemName> 



         <ShortName>IncidentReports</ShortName> 



  </ComponentItem> 



                                  NAVEX IRM Platform | API Reference Guide                            75 of 188 


----------------------- Page 76-----------------------

JSON REQUEST (cURL) 



curl -b cookie.txt -H "Accept: application/json" 

https://api.lockpath.app:4443/ComponentService/GetComponentByAlias?alias=IncidentReports 



JSON RESPONSE 



{ 



       "Id": 10021, 



       "Name": "Incident Reports", 



       "SystemName": "IncidentReports", 



       "ShortName": "IncidentReports" 



} 



                               NAVEX IRM Platform | API Reference Guide                         76 of 188 


----------------------- Page 77-----------------------

GetFieldList 



Retrieves a detailed field list for a component specified by its ID. The component ID may be found by using 

GetComponentList. Assessments field type are not visible in this list. 



Permissions:    The authentication account must have: 



                l  General Access - Read permissions for the selected component. 



                l  View field permissions. Fields to which the account does not have access are not returned. 



URL:            https://[instance name]:[port]/ComponentService/GetFieldList?componentId= 

                {COMPONENTID} 



Method:         GET 



Input:          componentId (integer):     The Id of the desired component. 



Examples 



In the samples, an ellipse (...) indicates an incomplete list of items returned. 



  XML REQUEST (cURL) 



  curl -b cookie.txt -H "content-type: application/xml;charset=utf-8" 



  https://api.lockpath.app:4443/ComponentService/GetFieldList?componentId=10001 



  XML RESPONSE 



  <FieldList xmlns:i="http://www.w3.org/2001/XMLSchema-instance"> 



         <Field> 



              <Id>9</Id> 



              <Name>Acquisition Cost</Name> 



              <SystemName>Cost</SystemName> 



              <ShortName>Cost</ShortName> 



              <ReadOnly>false</ReadOnly> 



              <Required>false</Required> 



              <FieldType>2</FieldType> 



              <Precision>15</Precision> 



              <Scale>2</Scale> 



              <OneToMany>false</OneToMany> 



              <MatrixRows/> 



         </Field> 



         <Field> 



              <Id>10</Id> 



              <Name>Acquisition Date</Name> 



              <SystemName>AcquisitionDate</SystemName> 



                                  NAVEX IRM Platform | API Reference Guide                             77 of 188 


----------------------- Page 78-----------------------

            <ShortName>AcquisitionDate</ShortName> 



            <ReadOnly>false</ReadOnly> 



            <Required>false</Required> 



            <Nullable>false</Nullable> 



            <FieldType>3</FieldType> 



            <OneToMany>false</OneToMany> 



            <MatrixRows/> 



       </Field> 



... 



</FieldList> 



                                NAVEX IRM Platform | API Reference Guide                          78 of 188 


----------------------- Page 79-----------------------

JSON REQUEST (cURL) 



curl -b cookie.txt -H "Accept: application/json" 

https://api.lockpath.app:4443/ComponentService/GetFieldList?componentId=10001 



JSON RESPONSE 



 [ 



        { 



            "Id": 9, 



            "Name": "Acquisition Cost", 



            "SystemName": "Cost", 



            "ShortName": "Cost", 



            "ReadOnly": false, 



            "Required": false, 



            "FieldType": 2, 



            "Precision": 15, 



            "Scale": 2, 



            "OneToMany": false, 



            "MatrixRows": [] 



        }, 



        { 



            "Id": 10, 



            "Name": "Acquisition Date", 



            "SystemName": "AcquisitionDate", 



            "ShortName": "AcquisitionDate", 



            "ReadOnly": false, 



            "Required": false, 



            "FieldType": 3, 



            "OneToMany": false, 



            "MatrixRows": [] 



        }, 



... 



        } 



] 



                                NAVEX IRM Platform | API Reference Guide                          79 of 188 


----------------------- Page 80-----------------------

GetField 



Retrieves details for a field within a component. The field ID may be found by using GetFieldList. 



Permissions:     The authentication account must have: 



                  l General Access - Read permission to the component and field 



URL:              https://[instance name]:[port]/ComponentService/GetField?id={FIELDID} 



Method:           GET 



Input:            Id (integer):       The field Id for the individual field within the component. 



Examples 



GetField returns a FieldType. The application uses several field types each represented by a unique ID. 



                         Field Types 



 FieldType ID    Attribute     FieldType ID    Attribute 



 1               Text          6               Master/Detail 



 2               Numeric       7               Matrix 



 3               Date          8               Documents 



 4               IP Address    9               Assessments 



 5               Lookup        10              Yes/No 



                                     NAVEX IRM Platform | API Reference Guide                                80 of 188 


----------------------- Page 81-----------------------

XML REQUEST (cURL) 



curl -b cookie.txt -H "content-type: application/xml;charset=utf-8" 



https://api.lockpath.app:4443/ComponentService/GetField?id=23 



XML RESPONSE 



<?xml version="1.0"?> 



<FieldItem xmlns:i="http://www.w3.org/2001/XMLSchema-instance"> 



       <Id>23</Id> 



       <Name>Device Type</Name> 



       <SystemName>DeviceType> 



       <ShortName>DeviceType</ShortName> 



       <ReadOnly>false</ReadOnly> 



       <Required>false</Required> 



       <FieldType>5</FieldType> 



       <OneToMany>false</OneToMany> 



       <MatrixRows/> 



</FieldItem> 



JSON REQUEST (cURL) 



curl -b cookie.txt -H "Accept: application/json" 

https://api.lockpath.app:4443/ComponentService/GetField?Id=23 



JSON RESPONSE 



{ 



       "Id": 23, 



       "Name": "Device Type", 



       "SystemName": "DeviceType", 



       "ShortName": "DeviceType", 



       "ReadOnly": false, 



       "Required": false, 



       "FieldType": 5, 



       "OneToMany": false, 



       "MatrixRows": [] 



} 



                               NAVEX IRM Platform | API Reference Guide                         81 of 188 


----------------------- Page 82-----------------------

GetAvailableLookupRecords 



Retrieves records that are available for population for a lookup field. 



Permissions:     The authentication account must have: 



                 l  Create and Read access to the component that contains the lookup field if no recordId is 



                    supplied 



                 l  Read and Edit access to the component that contains the lookup field if a recordId is supplied 



                 l  Read and Edit access to the lookup field 



                 l  Read access to the recordId 



                 l  Read access to any lookup records 



URL:             https://[instance-name]:[port]/ComponentService/GetAvailableLookupRecords 



Method:          POST 



Input:           fieldId (integer):           The ID of the desired component. 



                 pageIndex (integer):         The index of the page of result to return. Must be ≥ 0. 



                 pageSize (integer):          The size of the page results to return. Must be ≥ 1. 



                 recordId (integer)           The ID of the record for which retrieving lookup records. 

                 (optional): 



Examples 



  XML REQUEST (cURL) 



  curl -b cookie.txt -H "content-type: application/xml;charset=utf-8" -X POST -d 

  @GetAvailableLookupRecords.xml 



  "https://api.lockpath.app:4443/ComponentService/GetAvailableLookupRecords" 



  XML REQUEST (GetAvailableLookupRecords.xml) 



  <GetAvailableLookupRecords> 



          <fieldId>23</fieldId> 



          <pageIndex>0</pageIndex> 



          <pageSize>2</pageSize> 



          <recordId>1</recordId> 



  </GetAvailableLookupRecords> 



                                    NAVEX IRM Platform | API Reference Guide                                 82 of 188 


----------------------- Page 83-----------------------

XML RESPONSE 



<ArrayOfDynamicRecordItem xmlns:i="http://www.w3.org/2001/XMLSchema-instance"> 



        <DynamicRecordItem> 



                <Id>2</Id> 



                <DisplayName>Mobile Device</DisplayName> 



                <FieldValues/> 



        </DynamicRecordItem> 



        <DynamicRecordItem> 



                <Id>4</Id> 



                <DisplayName>Laptop</DisplayName> 



                <FieldValues/> 



        </DynamicRecordItem> 



</ArrayOfDynamicRecordItem> 



JSON REQUEST (cURL) 



curl -b cookie.txt -H "content-type: application/json" -H "Accept: application/json" -X 

POST -d @GetAvailableLookupRecords.json 



"https://api.lockpath.app:4443/ComponentService/GetAvailableLookupRecords" 



JSON REQUEST (GetAvailableLookupRecords.json) 



{ 



       "fieldId": "23", 



       "pageIndex": "0", 



       "pageSize": "2", 



       "recordId": "1" 



} 



                                NAVEX IRM Platform | API Reference Guide                         83 of 188 


----------------------- Page 84-----------------------

JSON RESPONSE 



 [ 



        { 



            "Id": 2, 



            "DisplayName": "Mobile Device", 



            "FieldValues": [] 



        }, 



        { 



            "Id": 4, 



            "DisplayName": "Laptop", 



            "FieldValues": [] 



        } 



] 



                                NAVEX IRM Platform | API Reference Guide                          84 of 188 


----------------------- Page 85-----------------------

GetRecord 



Returns the set of fields for a given record for which you have permissions within a component. The field keys can 

be matched with the data from the GetField method to obtain the name of the field. 



Permissions:    The authentication account must have General Access - Read permissions to: 



                l  Selected component 



                l  Selected record 



                l  Applicable fields in the component (table) 



URL:            https://[instance name]:[port]/ComponentService/GetRecord?componentId= 

                {COMPONENTID}&recordId={RECORDID} 



Method:         GET 



Input:          componentId (integer):     The Id of the desired component. 



                recordId (integer):        The Id for the individual record within the component. 



Examples 



In the samples, an ellipse (...) indicates an incomplete list of items returned. 



  XML REQUEST (cURL) 



  curl -b cookie.txt -H "content-type: application/xml;charset=utf-8" 



  https://api.lockpath.app:4443/ComponentService/GetRecord?componentId=10001&recordId=1 



  XML RESPONSE 



  <DynamicRecordItem xmlns:i="http://www.w3.org/2001/XMLSchema-instance"> 



  <Id>1</Id> 



  <DisplayName>1</DisplayName> 



         <FieldValues> 



                 <KeyValuePair> 



                      <key>3</key> 



                      <value i:nil="true"/> 



                 </KeyValuePair> 



                 <KeyValuePair> 



                      <key>4</key> 



                      <value i:nil="true"/> 



                 </KeyValuePair> 



  ... 



         </FieldValues> 



  </DynamicRecordItem> 



                                   NAVEX IRM Platform | API Reference Guide                            85 of 188 


----------------------- Page 86-----------------------

JSON REQUEST (cURL) 



curl -b cookie.txt -H "Accept: application/json" 

"https://api.lockpath.app:4443/ComponentService/GetRecord?componentId=10001&recordId=1" 



JSON RESPONSE 



{ 



        "Id": "1", 



        "DisplayName": "1", 



        "FieldValues": [{ 



                       "Key": 3, 



                       "Value": null 



                }, 



                { 



                       "Key": 4, 



                       "Value": null 



                } 



... 



        ] 



} 



                               NAVEX IRM Platform | API Reference Guide                          86 of 188 


----------------------- Page 87-----------------------

GetRecords 



Returns an array of records within a chosen component. You can use filters to return only the records meeting 

selected criteria. 



Permissions:                   The authentication account must have General Access - Read permission to: 



                               l  Selected component 



                               l  Selected record 



                               l  Applicable fields in the component (table) 



URL:                           https://[instance name]:[port]/ComponentService/GetRecords 



Method:                        POST 



Input:                         componentId (integer):                       The Id of the desired component. 



                               pageIndex (integer):                         The index of the page of result to return. 

                                                                             Must be ≥ 0. 



                               pageSize (integer):                          The size of the page results to return. 

                                                                             Must be ≥ 1. 



                                      NAVEX IRM Platform | API Reference Guide                                    87 of 188 


----------------------- Page 88-----------------------

                               filters (various) (optional):                The filter parameters the records must 

                                                                            meet to be counted. 



A variety of filters are available, and an unlimited number of search criteria may be applied to each transaction 

that supports filtering. Search filters are composed of a field path, filter type, and a value. 



 Element                 Description 



 FieldPath                Describes the field ID for the column that the records will be filtered on. If the value is 

                         stored in the component directly, only one Field Path variable is needed. However, if the 

                         value is a lookup to another component, an additional Field Path variable will be 

                         required with the column value where the data resides. Field Path variables can be 

                         added as many as necessary to provide the correct path to the data. 



 FilterType               Describes the ID for the filter being applied. For example, the FilterType for Is Null is 15. 

                          If the FilterType would exclude the entry of a value like Is Empty (13) or Is Not Null (16), 

                         the <Value> tags should be removed from the request. 



                                                                  Filter Types 



                          ID             Option                      ID                       Option 



                           1             Contains                    9                        ≥ 



                           2             Excludes                     10                      ≤ 



                           3             Starts With                  11                      Between 



                           4             Ends With                    12                      Not Between 



                           5             =                            13                      Is Empty 



                           6             <>                           14                      Is Not Empty 



                           7             >                            15                      Is Null 



                           8             <                            16                      Is Not Null 



                           10001         Offset 



                           10002         Contains Any (applies only to One-to-Many Lookup fields) 



                           10003         Contains Only (applies only to One-to-Many Lookup fields) 



                           10004         Contains None (applies only to One-to-Many Lookup fields) 



                           10005         Contains At Least (applies only to One-to-Many Lookup fields) 



 Value                    Describes the comparison that the column will be measured again. FilterType 1 applies 

                         only to one-to-many lookup fields. For the FilterType 11 and 12, two values are required 

                         that are delimited by a pipe (|) symbol. For the FilterTypes 13 - 16 no values are 

                         required. 



 SearchCriteriaItem       Describes a single filter. By combining FieldPath, Filter, and Value, a complete search 

                         filter is created for the desired parameters. 



                                      NAVEX IRM Platform | API Reference Guide                                   88 of 188 


----------------------- Page 89-----------------------

Examples 



 XML REQUEST (cURL) 



  curl -b cookie.txt -H "content-type: application/xml;charset=utf-8" -X POST -d 



  @GetRecordsInput.xml 



  "https://api.lockpath.app:4443/ComponentService/GetRecords" 



 XML REQUEST (GetRecordsInput.xml) 



  <GetRecords> 



         <componentId>10001</componentId> 



         <pageIndex>0</pageIndex> 



         <pageSize>2</pageSize> 



         <filters> 



                <SearchCriteriaItem> 



                       <FieldPath> 



                            <int>11</int> 



                       </FieldPath> 



                       <FilterType>16</FilterType> 



                       <Value></Value> 



                </SearchCriteriaItem> 



         </filters> 



  </GetRecords> 



 XML RESPONSE 



  <ArrayOfDynamicRecordItem xmlns:i="http://www.w3.org/2001/XMLSchema-instance"> 



         <DynamicRecordItem> 



                <Id>1</Id> 



                <DisplayName>192.168.1.84</DisplayName> 



                <FieldValues/> 



         </DynamicRecordItem> 



         <DynamicRecordItem> 



                <Id>2</Id> 



                <DisplayName>192.168.1.69</DisplayName> 



                <FieldValues/> 



         </DynamicRecordItem> 



  </ArrayOfDynamicRecordItem> 



                                 NAVEX IRM Platform | API Reference Guide                         89 of 188 


----------------------- Page 90-----------------------

JSON REQUEST (cURL) 



curl -b cookie.txt -H "content-type: application/json" -H "Accept: application/json" -X 

POST -d @GetRecordsInput.json 



"https://api.lockpath.app:4443/ComponentService/GetRecords" 



JSON REQUEST (GetRecordsInput.json) 



{ 



       "componentId": "10001", 



       "pageIndex": "0", 



       "pageSize": "2", 



       "filters": [ 



            { 



               "FieldPath": [ 



                  11 



               ], 



               "FilterType": "16", 



               "Value": "" 



            } 



        ] 



} 



JSON RESPONSE 



[ 



        { 



           "Id": 1, 



           "DisplayName": "192.168.1.84", 



           "FieldValues": [] 



        }, 



        { 



           "Id": 2, 



           "DisplayName": "192.168.1.69", 



           "FieldValues": [] 



        } 



] 



                               NAVEX IRM Platform | API Reference Guide                          90 of 188 


----------------------- Page 91-----------------------

GetRecordCount 



Returns the number of records in a given component. You can use filters to return the count of records meeting 

selected criteria. 



Permissions:                   The authentication account must have Read General Access permission to: 



                               l  Selected component 



                               l  Applicable records 



                               l  Applicable records in the component (table) 



URL:                           https://[instance name]:[port]/ComponentService/GetRecordCount 



Method:                        POST 



Input:                         componentId (integer):                       The Id of the desired component. 



                                      NAVEX IRM Platform | API Reference Guide                                    91 of 188 


----------------------- Page 92-----------------------

                               filters (various):                           The filter parameters the records must 

                                                                            meet to be counted. 



A variety of filters are available, and an unlimited number of search criteria may be applied to each transaction 

that supports filtering. Search filters are composed of a field path, filter type, and a value. 



 Element                 Description 



 FieldPath                Describes the field ID for the column that the records will be filtered on. If the value is 

                         stored in the component directly, only one Field Path variable is needed. However, if the 

                         value is a lookup to another component, an additional Field Path variable will be 

                         required with the column value where the data resides. Field Path variables can be 

                         added as many as necessary to provide the correct path to the data. 



 FilterType               Describes the ID for the filter being applied. For example, the FilterType for Is Null is 15. 

                          If the FilterType would exclude the entry of a value like Is Empty (13) or Is Not Null (16), 

                         the <Value> tags should be removed from the request. 



                                                                  Filter Types 



                          ID             Option                      ID                       Option 



                           1             Contains                    9                        ≥ 



                           2             Excludes                     10                      ≤ 



                           3             Starts With                  11                      Between 



                           4             Ends With                    12                      Not Between 



                           5             =                            13                      Is Empty 



                           6             <>                           14                      Is Not Empty 



                           7             >                            15                      Is Null 



                           8             <                            16                      Is Not Null 



                           10001         Offset 



                           10002         Contains Any (applies only to One-to-Many Lookup fields) 



                           10003         Contains Only (applies only to One-to-Many Lookup fields) 



                           10004         Contains None (applies only to One-to-Many Lookup fields) 



                           10005         Contains At Least (applies only to One-to-Many Lookup fields) 



 Value                    Describes the comparison that the column will be measured again. FilterType 1 applies 

                         only to one-to-many lookup fields. For the FilterType 11 and 12, two values are required 

                         that are delimited by a pipe (|) symbol. For the FilterTypes 13 - 16 no values are 

                         required. 



 SearchCriteriaItem       Describes a single filter. By combining FieldPath, Filter, and Value, a complete search 

                         filter is created for the desired parameters. 



                                      NAVEX IRM Platform | API Reference Guide                                  92 of 188 


----------------------- Page 93-----------------------

Examples 



In the XML example, the search is looking for values that do not have an empty address field. Because of this, the 

value parameter is left blank because IsNotEmpty is not comparing to any set value. 



  XML REQUEST (cURL) 



  curl -b cookie.txt -H "content-type: application/xml;charset=utf-8" -X POST -d 

  @GetRecordCount.xml 



  "https://api.lockpath.app:4443/ComponentService/GetRecordCount" 



  XML REQUEST (GetRecordCount.xml) 



  <GetRecordCount> 



  <componentId>10001</componentId> 



         <filters> 



                <SearchCriteriaItem> 



                        <FieldPath> 



                             <int>11</int> 



                        </FieldPath> 



                        <FilterType>16</FilterType> 



                </SearchCriteriaItem> 



         </filters> 



  </GetRecordCount> 



  XML RESPONSE 



  <int xmlns="http://schemas.microsoft.com/2003/10/Serialization/">#</int> 



                                  NAVEX IRM Platform | API Reference Guide                          93 of 188 


----------------------- Page 94-----------------------

JSON REQUEST (cURL) 



curl -b cookie.txt -H "content-type: application/json" -H "Accept: application/json" -X 

POST -d @GetRecordCount.json 



"https://api.lockpath.app:4443/ComponentService/GetRecordCount" 



JSON REQUEST (GetRecordCount.json) 



{ 



        "componentId": "10001", 



        "filters": [ 



        { 



                "FieldPath": [ 



                       11 



                ], 



                "FilterType": 15, 



                "Value": "" 



                } 



        ] 



} 



JSON RESPONSE 



# 



                               NAVEX IRM Platform | API Reference Guide                         94 of 188 


----------------------- Page 95-----------------------

GetDetailRecord 



Retrieves record information based on the provided component ID and record ID, with lookup field report details. 

Using the optional boolean parameter "embedRichTextImages" you can return records with images contained in 

rich text fields. 



Permissions:    The authentication account must have General Access - Read permissions to: 



                 l Selected component 



                 l Selected record 



                 l Applicable fields in the component (table) 



URL:             https://[instance name]:[port]/ComponentService/GetDetailRecord?componentId= 

                {COMPONENTID}&recordId={RECORDID}&embedRichTextImages=true 



Method:         GET 



Input:          componentId (integer):         The Id of the desired component. 



                 recordId (integer):           The Id for the individual record within the component. 



                embedRichTextImages            Include images contained in rich text fields. 

                 (boolean) (optional): 



Examples 



In the samples, an ellipse (...) indicates an incomplete list of items returned. 



  XML REQUEST (cURL) 



  curl -b cookie.txt -H "content-type: application/xml;charset=utf-8" 



  https://api.lockpath.app:4443/ComponentService/GetDetailRecord?componentId=10001&recordId 

  =114&embedRichTextImages=true 



  XML RESPONSE 



  <DynamicRecordItem xmlns:i="http://www.w3.org/2001/XMLSchema-instance"> 



  <Id>114</Id> 



  <DisplayName>114</DisplayName> 



          <FieldValues> 



  ... 



                 <KeyValuePair> 



                         <key>34</key> 



                         <value i:type="DynamicRecordList"> 



                                         <Record> 



                                              <Id>55</Id> 



                                              <DisplayName>Attachment.txt</DisplayName> 



                                    NAVEX IRM Platform | API Reference Guide                               95 of 188 


----------------------- Page 96-----------------------

                                          <FieldValues/> 



                                     </Record> 



                      </value> 



               </KeyValuePair> 



... 



       </FieldValues> 



</DynamicRecordItem> 



                                NAVEX IRM Platform | API Reference Guide                          96 of 188 


----------------------- Page 97-----------------------

JSON REQUEST (cURL) 



curl -b cookie.txt -H "Accept: application/json" 



"https://api.lockpath.app:4443/ComponentService/GetDetailRecord?componentId=10001&recordI 

d=114&embedRichTextImages=true" 



JSON RESPONSE 



{ 



        "Id": 114, 



        "DisplayName": 114, 



        "FieldValues": [ 



... 



                { 



                       "Key": 34, 



                       "Value": { 



                               "Id": 55, 



                               "DisplayName": "Attachment.txt", 



                               "FieldValues": [] 



                        } 



                } 



        ] 



} 



                                NAVEX IRM Platform | API Reference Guide                         97 of 188 


----------------------- Page 98-----------------------

GetDetailRecords 



Retrieves details for each record specified. GetDetailRecords also allows multiple sorts to modify the order of the 

results. The maximum number of records returned (pageSize) is 1000. 



Permissions:                   The authentication account must have Read General Access permissions to: 



                               l  Selected component 



                               l  Selected record 



                               l  Applicable fields in the component (table) 



URL:                           https://[instance name]:[port]/ComponentService/GetDetailRecords 



Method:                        POST 



Input:                         componentId (integer):             The Id of the desired component. 



                               pageIndex (integer):               The index of the page of result to return. Must be ≥ 

                                                                  0. 



                               pageSize (integer):                The size of the page results to return. Must be ≥ 1. 



                               sortOrder (various) (optional):    The sort parameters the records must meet to be 

                                                                  included in the sort order. 



                               fieldIds (integer) (optional):     The Id of the field to be returned. If not provided, 

                                                                  returns all accessible fields. If provided, but empty, 

                                                                  returns core system fields (CreatedAt, CreatedBy, 

                                                                  etc.). If provided, returns core system fields plus 

                                                                  accessible fields. Note that system fields will always 

                                                                  be returned regardless. 



                                      NAVEX IRM Platform | API Reference Guide                                    98 of 188 


----------------------- Page 99-----------------------

                               filters (various) (optional):     The filter parameters the records must meet to be 

                                                                 counted. 



A variety of filters are available, and an unlimited number of search criteria may be applied to each transaction 

that supports filtering. Search filters are composed of a field path, filter type, and a value. 



 Element                 Description 



 FieldPath               Describes the field ID for the column that the records will be filtered on. If the value is 

                         stored in the component directly, only one Field Path variable is needed. However, if the 

                         value is a lookup to another component, an additional Field Path variable will be 

                         required with the column value where the data resides. Field Path variables can be 

                         added as many as necessary to provide the correct path to the data. 



 FilterType              Describes the ID for the filter being applied. For example, the FilterType for Is Null is 15. 

                          If the FilterType would exclude the entry of a value like Is Empty (13) or Is Not Null (16), 

                         the <Value> tags should be removed from the request. 



                                                                  Filter Types 



                          ID             Option                      ID                       Option 



                           1             Contains                    9                        ≥ 



                           2             Excludes                    10                       ≤ 



                           3             Starts With                 11                       Between 



                           4             Ends With                   12                       Not Between 



                           5             =                           13                       Is Empty 



                           6             <>                          14                       Is Not Empty 



                           7             >                           15                       Is Null 



                           8             <                           16                       Is Not Null 



                          10001          Offset 



                          10002          Contains Any (applies only to One-to-Many Lookup fields) 



                          10003          Contains Only (applies only to One-to-Many Lookup fields) 



                          10004          Contains None (applies only to One-to-Many Lookup fields) 



                          10005          Contains At Least (applies only to One-to-Many Lookup fields) 



 Value                   Describes the comparison that the column will be measured again. FilterType 1 applies 

                         only to one-to-many lookup fields. For the FilterType 11 and 12, two values are required 

                         that are delimited by a pipe (|) symbol. For the FilterTypes 13 - 16 no values are 

                         required. 



 SearchCriteriaItem      Describes a single filter. By combining FieldPath, Filter, and Value, a complete search 

                         filter is created for the desired parameters. 



                                      NAVEX IRM Platform | API Reference Guide                                   99 of 188 


----------------------- Page 100-----------------------

Examples 



XML REQUEST (cURL) 



curl -b cookie.txt -H "content-type: application/xml;charset=utf-8" -X POST -d 

@GetDetailRecords.xml 



"https://api.lockpath.app:4443/ComponentService/GetDetailRecords" 



XML REQUEST (GetDetailRecords.xml) 



<GetDetailRecords> 



        <componentId>10429</componentId> 



        <pageIndex>0</pageIndex> 



        <pageSize>2</pageSize> 



                <filters> 



                        <SearchCriteriaItem> 



                               <FieldPath> 



                                       <int>7455</int> 



                               </FieldPath> 



                               <FilterType>3</FilterType> 



                               <Value>P</Value> 



                        </SearchCriteriaItem> 



                </filters> 



        <sortOrder> 



                <SortCriteriaItem> 



                        <FieldPath> 



                               <int>7457</int> 



                        </FieldPath> 



                        <Ascending>true</Ascending> 



                </SortCriteriaItem> 



        </sortOrder> 



        <fieldIds> 



                <int>7454</int> 



                <int>7455</int> 



        </fieldIds> 



</GetDetailRecords> 



                                 NAVEX IRM Platform | API Reference Guide                          100 of 188 


----------------------- Page 101-----------------------

XML RESPONSE 



<ArrayOfDynamicRecordItem xmlns:i="http://www.w3.org/2001/XMLSchema-instance"> 



<DynamicRecordItem> 



        <Id>374</Id> 



        <DisplayName>374</DisplayName> 



        <FieldValues> 



                <KeyValuePair> 



                        <key>7439</key> 



                        <value i:type="a:int" 

xmlns:a="http://www.w3.org/2001/XMLSchema">374</value> 



                </KeyValuePair> 



                <KeyValuePair> 



                        <key>7440</key> 



                        <value i:type="a:int" 

xmlns:a="http://www.w3.org/2001/XMLSchema">3</value> 



                </KeyValuePair> 



                <KeyValuePair> 



                        <key>7442</key> 



                        <value i:type="DynamicRecordItem"> 



                                <Id>12</Id> 



                                <DisplayName>Name, User</DisplayName> 



                                <FieldValues/> 



                        </value> 



                </KeyValuePair> 



                <KeyValuePair> 



                        <key>7445</key> 



                        <value i:type="DynamicRecordItem"> 



                                <Id>12</Id> 



                                <DisplayName>Name, User</DisplayName> 



                                <FieldValues/> 



                        </value> 



                </KeyValuePair> 



                <KeyValuePair> 



                                  NAVEX IRM Platform | API Reference Guide                          101 of 188 


----------------------- Page 102-----------------------

                        <key>7448</key> 



                        <value i:type="a:boolean" 

xmlns:a="http://www.w3.org/2001/XMLSchema">false</value> 



                </KeyValuePair> 



                <KeyValuePair> 



                        <key>7449</key> 



                        <value i:type="DynamicRecordItem"> 



                               <Id>301</Id> 



                               <DisplayName>Published</DisplayName> 



                               <FieldValues/> 



                        </value> 



                </KeyValuePair> 



                <KeyValuePair> 



                        <key>7451</key> 



                        <value i:type="a:int" 

xmlns:a="http://www.w3.org/2001/XMLSchema">3</value> 



                </KeyValuePair> 



                <KeyValuePair> 



                        <key>7454</key> 



                        <value i:type="a:string" 

xmlns:a="http://www.w3.org/2001/XMLSchema">Cable</value> 



                </KeyValuePair> 



                <KeyValuePair> 



                        <key>7455</key> 



                        <value i:type="a:string" 

xmlns:a="http://www.w3.org/2001/XMLSchema">Printer</value> 



                </KeyValuePair> 



                </FieldValues> 



</DynamicRecordItem> 



<DynamicRecordItem> 



        <Id>375</Id> 



        <DisplayName>375</DisplayName> 



        <FieldValues> 



                <KeyValuePair> 



                                 NAVEX IRM Platform | API Reference Guide                          102 of 188 


----------------------- Page 103-----------------------

                       <key>7439</key> 



                       <value i:type="a:int" 

xmlns:a="http://www.w3.org/2001/XMLSchema">375</value> 



                </KeyValuePair> 



                <KeyValuePair> 



                       <key>7440</key> 



                       <value i:type="a:int" 

xmlns:a="http://www.w3.org/2001/XMLSchema">1</value> 



                </KeyValuePair> 



                <KeyValuePair> 



                       <key>7442</key> 



                       <value i:type="DynamicRecordItem"> 



                               <Id>12</Id> 



                               <DisplayName>Name, User</DisplayName> 



                               <FieldValues/> 



                       </value> 



                </KeyValuePair> 



        <KeyValuePair> 



                <key>7445</key> 



                <value i:type="DynamicRecordItem"> 



                       <Id>12</Id> 



                       <DisplayName>Name, User</DisplayName> 



                       <FieldValues/> 



                </value> 



        </KeyValuePair> 



        <KeyValuePair> 



                <key>7448</key> 



                <value i:type="a:boolean" 

xmlns:a="http://www.w3.org/2001/XMLSchema">false</value> 



        </KeyValuePair> 



        <KeyValuePair> 



                <key>7449</key> 



                <value i:type="DynamicRecordItem"> 



                                  NAVEX IRM Platform | API Reference Guide                         103 of 188 


----------------------- Page 104-----------------------

                        <Id>301</Id> 



                        <DisplayName>Published</DisplayName> 



                        <FieldValues/> 



                </value> 



        </KeyValuePair> 



        <KeyValuePair> 



                <key>7451</key> 



                <value i:type="a:int" xmlns:a="http://www.w3.org/2001/XMLSchema">1</value> 



        </KeyValuePair> 



        <KeyValuePair> 



                <key>7454</key> 



                <value i:type="a:string" 

xmlns:a="http://www.w3.org/2001/XMLSchema">Keyboard</value> 



        </KeyValuePair> 



        <KeyValuePair> 



                <key>7455</key> 



                <value i:type="a:string" 

xmlns:a="http://www.w3.org/2001/XMLSchema">Printer</value> 



        </KeyValuePair> 



        </FieldValues> 



</DynamicRecordItem> 



</ArrayOfDynamicRecordItem> 



                                 NAVEX IRM Platform | API Reference Guide                          104 of 188 


----------------------- Page 105-----------------------

JSON REQUEST (cURL) 



curl -b cookie.txt -H "content-type: application/json" -H "Accept: application/json" -X 

POST -d @GetDetailRecords.json 



"https://api.lockpath.app:4443/ComponentService/GetDetailRecords" 



JSON REQUEST (GetDetailRecords.json) 



{ 



        "componentId": 10429, 



        "pageIndex": 0, 



        "pageSize": 2, 



        "filters": [{ 



                "FieldPath": [7455], 



                "FilterType": 3, 



                "Value": "P" 



        }], 



        "sortOrder": [{ 



                "FieldPath": [7457], 



                "Ascending": true 



        }], 



        "fieldIds": [7454, 7455] 



} 



                                  NAVEX IRM Platform | API Reference Guide                         105 of 188 


----------------------- Page 106-----------------------

JSON RESPONSE 



 [ 



        { 



                "Id": 374, 



                "DisplayName": "374", 



                "FieldValues": [ 



                        { 



                                "Key": 7439, 



                                "Value": 374 



                        }, 



                        { 



                                "Key": 7440, 



                                "Value": 3 



                        }, 



                        { 



                                "Key": 7442, 



                                "Value": { 



                                       "Id": 12, 



                                       "DisplayName": "Name, User", 



                                       "FieldValues": [] 



                                } 



                        }, 



                        { 



                                "Key": 7445, 



                                "Value": { 



                                       "Id": 12, 



                                       "DisplayName": "Name, User", 



                                       "FieldValues": [] 



                                } 



                        }, 



                        { 



                                "Key": 7448, 



                                 NAVEX IRM Platform | API Reference Guide                          106 of 188 


----------------------- Page 107-----------------------

                       "Value": false 



                }, 



                { 



                       "Key": 7449, 



                       "Value": { 



                               "Id": 301, 



                               "DisplayName": "Published", 



                               "FieldValues": [] 



                        } 



                }, 



                { 



                       "Key": 7451, 



                       "Value": 3 



                }, 



                { 



                       "Key": 7454, 



                       "Value": "Cable" 



                }, 



                { 



                       "Key": 7455, 



                       "Value": "Printer" 



                } 



        ] 



}, 



{ 



        "Id": 375, 



        "DisplayName": "375", 



        "FieldValues": [ 



                { 



                       "Key": 7439, 



                       "Value": 375 



                }, 



                         NAVEX IRM Platform | API Reference Guide                          107 of 188 


----------------------- Page 108-----------------------

{ 



        "Key": 7440, 



        "Value": 1 



}, 



{ 



        "Key": 7442, 



        "Value": { 



                "Id": 12, 



                "DisplayName": "Name, User", 



                "FieldValues": [] 



        } 



}, 



{ 



        "Key": 7445, 



        "Value": { 



                "Id": 12, 



                "DisplayName": "Name, User", 



                "FieldValues": [] 



        } 



}, 



{ 



        "Key": 7448, 



        "Value": false 



}, 



{ 



        "Key": 7449, 



        "Value": { 



                "Id": 301, 



                "DisplayName": "Published", 



                "FieldValues": [] 



        } 



}, 



          NAVEX IRM Platform | API Reference Guide                         108 of 188 


----------------------- Page 109-----------------------

                        { 



                               "Key": 7451, 



                               "Value": 1 



                        }, 



                        { 



                               "Key": 7454, 



                               "Value": "Keyboard" 



                        }, 



                        { 



                               "Key": 7455, 



                               "Value": "Printer" 



                        } 



                ] 



        } 



] 



                                 NAVEX IRM Platform | API Reference Guide                          109 of 188 


----------------------- Page 110-----------------------

GetLookupReportColumnFields 



Retrieves the field information of each field in a field path that corresponds to a lookup report column. The 

lookupFieldId corresponds to a lookup field with a report definition on it and the fieldPathId corresponds to the 

field path to retrieve fields from, which is obtained from GetDetailRecord. GetLookupReportColumnFields 

compliments GetDetailRecord by adding additional details about the lookup report columns returned from 

GetDetailRecord. 



Permissions:    The authentication account must have General Access - Read permissions to: 



                l  Selected component 



                l  Selected record 



                l  Applicable fields in the component (table) 



URL:            https://[instance name]: 

                [port]/ComponentService/GetLookupReportColumnFields?lookupFieldId= 

                {FIELDID}&fieldPathId={FIELDPATHID} 



Method:         GET 



Input:          lookupFieldId (integer):              The id of the desired lookup field. 



                fieldPathId (integer):                The Id for the desired lookup field path. 



Examples 



  XML REQUEST (cURL) 



  curl -b cookie.txt -H "content-type: application/xml;charset=utf-8" 



  https://api.lockpath.app:4443/ComponentService/GetLookupReportColumnFields?lookupFieldId= 

  1234&fieldPathId=5678 



  XML RESPONSE 



  <LookupReportFieldList xmlns:i="http://www.w3.org/2001/XMLSchema-instance"> 



          <Field> 



               <Id>3</Id> 



               <ComponentId>10001</ComponentId> 



               <Name>Workflow Stage</Name> 



               <SystemName>WorkflowStage</SystemName> 



          </Field> 



  </LookupReportFieldList> 



                                    NAVEX IRM Platform | API Reference Guide                               110 of 188 


----------------------- Page 111-----------------------

JSON REQUEST (cURL) 



curl -b cookie.txt -H "Accept: application/json" 

https://api.lockpath.app:4443/ComponentService/GetLookupReportColumnFields?lookupFieldId= 

1234&fieldPathId=5678" 



JSON RESPONSE 



[ 



        { 



           "Id": 3, 



           "ComponentId": 10001, 



           "Name": "Workflow Stage", 



           "SystemName": "WorkflowStage" 



        } 



] 



                               NAVEX IRM Platform | API Reference Guide                          111 of 188 


----------------------- Page 112-----------------------

GetRecordAttachment 



Retrieves a single attachment for a given field on a record. The record ID and field ID may be found by using 

GetDetailRecord. 



Permissions:    The authentication account must have General Access - Read permissions to: 



                l  Selected component 



                l  Selected record 



                l  Applicable fields in the component (table) 



URL:            https://[instance name]:[port]/ComponentService/GetRecordAttachment?componentId= 

                {COMPONENTID}&recordId={RECORDID}&fieldId={FIELDID}&documentId={DOCUMENTID} 



Method:         GET 



Input:          componentId (integer):           The Id of the desired component. 



                recordId (integer):              The Id for the individual record within the component. 



                fieldId (integer):               The Id for the individual field within the component. 



                documentId (integer):            The Id for the individual document within the component. 



Examples 



The Base64 encoded response represents the text in the attachment. 



  XML REQUEST (cURL) 



  curl -b cookie.txt -H "content-type: application/xml;charset=utf-8" 



  https://api.lockpath.app:4443/ComponentService/GetRecordAttachment?componentId=12345&reco 

  rdId=1&fieldId=1234&documentId=1 



  XML RESPONSE 



  <RecordAttachmentItem xmlns:i="http://www.w3.org/2001/XMLSchema-instance"> 



          <FileName>Attachment.txt</FileName> 



          <FileData>QW4gYXR0YWNobWVudCBmb3IgdGVzdGluZyBwdXJwb3Nlcw==</FileData> 



  </RecordAttachmentItem> 



                                    NAVEX IRM Platform | API Reference Guide                              112 of 188 


----------------------- Page 113-----------------------

JSON REQUEST (cURL) 



curl -b cookie.txt -H "Accept: application/json" 

"https://api.lockpath.app:4443/ComponentService/GetRecordAttachment?componentId=12345&rec 

ordId=1&fieldId=1234&documentId=1" 



JSON RESPONSE 



{ 



       "FileName": "Attachment.txt", 



       "FileData": "QW4gYXR0YWNobWVudCBmb3IgdGVzdGluZyBwdXJwb3Nlcw==" 



} 



                               NAVEX IRM Platform | API Reference Guide                        113 of 188 


----------------------- Page 114-----------------------

GetRecordAttachments 



Retrieves a list of information for all attachments associated with the provided component ID, record ID, and field 

ID. No file data is returned, only file name, field ID, and document ID information. 



Permissions:    The authentication account must have General Access - Read permissions to: 



                l  Selected component 



                l  Selected record 



                l  Applicable fields in the component (table) 



URL:            https://[instance name]:[port]/ComponentService/GetRecordAttachments?componentId= 

                {COMPONENTID}&recordId={RECORDID}&fieldId={FIELDID} 



Method:         GET 



Input:          componentId (integer):           The Id of the desired component. 



                recordId (integer):              The Id for the individual record within the component. 



                fieldId (integer):               The Id for the individual field within the component. 



Examples 



  XML REQUEST (cURL) 



  curl -b cookie.txt -H "content-type: application/xml;charset=utf-8" 



  "https://api.lockpath.app:4443/ComponentService/GetRecordAttachments?componentId=10001&re 

  cordId=114&fieldId=34" 



  XML RESPONSE 



  <AttachmentInfoList xmlns:i="http://www.w3.org/2001/XMLSchema-instance"> 



         <AttachmentInfo> 



               <FileName>Attachment1.txt</FileName> 



               <FieldId>34</FieldId> 



               <DocumentId>55</DocumentId> 



         </AttachmentInfo> 



  </AttachmentInfoList> 



                                   NAVEX IRM Platform | API Reference Guide                              114 of 188 


----------------------- Page 115-----------------------

JSON REQUEST (cURL) 



curl -b cookie.txt -H "Accept: application/json" 

"https://api.lockpath.app:4443/ComponentService/GetRecordAttachments?componentId=10001&re 

cordId=114&fieldId=35 



JSON RESPONSE 



[ 



        { 



                "FileName": "AttachmentTest.txt", 



                "FieldId": 34, 



                "DocumentId": 55 



        } 



] 



                               NAVEX IRM Platform | API Reference Guide                        115 of 188 


----------------------- Page 116-----------------------

GetWorkflow 



Retrieves workflow details and all workflow stages specified by ID. The ID for a workflow may be found by using 

GetWorkflows. 



Permissions:    The authentication account must have: 



                l  Administrative Access - Read permission for the specific component 



URL:            https://[instancename]:[port]/ComponentService/GetWorkflow?id=[ID] 



Method:         GET 



Input:          Id (integer):         The Id of the desired workflow. 



Examples 



  XML REQUEST (cURL) 



  curl -b cookie.txt -H "content-type: application/xml;charset=utf-8" 



  https://api.lockpath.app:4443/ComponentService/GetWorkflow?id=10 



  XML RESPONSE 



  <WorkflowItem xmlns:i="http://www.w3.org/2001/XMLSchema-instance"> 



          <Id>10</Id> 



          <Name>Default</Name> 



          <IsActive>true</IsActive> 



          <IsDefault>true</IsDefault> 



          <RoutingCriteria/> 



          <WorkflowOwnerGroups/> 



          <WorkflowOwnerUsers/> 



          <WorkflowStages> 



                  <WorkflowStage> 



                          <Id>15</Id> 



                          <Name>Published</Name> 



                          <Description/> 



                          <IsInitial>true</IsInitial> 



                          <IsActive>true</IsActive> 



                          <IsVoting>false</IsVoting> 



                          <GroupAccess> 



                                  <Permission> 



                                  NAVEX IRM Platform | API Reference Guide                           116 of 188 


----------------------- Page 117-----------------------

                                        <Group> 



                                                <Id>0</Id> 



                                                <Name>Everyone</Name> 



                                        </Group> 



                                        <CanViewAll>true</CanViewAll> 



                                        <CanEdit>true</CanEdit> 



                                        <CanTransition>false</CanTransition> 



                                </Permission> 



                        </GroupAccess> 



                        <UserAccess/> 



                        <UseAssignments>false</UseAssignments> 



                        <Transitions/> 



                        <CanAutoApprove>false</CanAutoApprove> 



                </WorkflowStage> 



        </WorkflowStages> 



</WorkflowItem> 



                                NAVEX IRM Platform | API Reference Guide                           117 of 188 


----------------------- Page 118-----------------------

JSON REQUEST (cURL) 



curl -b cookie.txt -H "Accept: application/json" 

https://api.lockpath.app:4443/ComponentService/GetWorkflow?id=10 



JSON RESPONSE 



{ 



        "Id": 10, 



        "Name": "Default", 



        "IsActive": true, 



        "IsDefault": true, 



        "RoutingCriteria": [], 



        "WorkflowOwnerGroups": [], 



        "WorkflowOwnerUsers": [], 



        "WorkflowStages": [ 



                { 



                        "Id": 15, 



                        "Name": "Published", 



                        "Description": "", 



                        "IsInitial": true, 



                        "IsActive": true, 



                        "IsVoting": false, 



                        "GroupAccess": [ 



                                { 



                                       "Group": { 



                                               "Id": 0, 



                                               "Name": "Everyone" 



                                       }, 



                                       "CanViewAll": true, 



                                       "CanEdit": true, 



                                       "CanTransition": false 



                                } 



                        ], 



                        "UserAccess": [], 



                                NAVEX IRM Platform | API Reference Guide                         118 of 188 


----------------------- Page 119-----------------------

                        "UseAssignments": false, 



                        "Transitions": [], 



                        "CanAutoApprove": false 



                } 



        ] 



} 



                                NAVEX IRM Platform | API Reference Guide                          119 of 188 


----------------------- Page 120-----------------------

GetWorkflows 



Retrieves all workflows for a component specified by its Alias. A component is a user-defined data object such as 

a custom content table. The component Alias may be found by using GetComponentList. 



Permissions:    The authentication account must have: 



                l Administrative Access - Read permission for the specific component 



URL:            https://[instancename]:[port]/ComponentService/GetWorkflows?componentalias=[ALIAS] 



Method:         GET 



Input:          componentalias (string):     The Alias of the desired component. 



Examples 



  XML REQUEST (cURL) 



  curl -b cookie.txt -H "content-type: application/xml;charset=utf-8" 



  https://api.lockpath.app:4443/ComponentService/GetWorkflows?componentalias=Devices 



  XML RESPONSE 



  <WorkflowList xmlns:i="http://www.w3.org/2001/XMLSchema-instance"> 



          <Workflow> 



                  <Id>2</Id> 



                  <Name>Default</Name> 



                  <IsActive>true</IsActive> 



                  <IsDefault>true</IsDefault> 



          </Workflow> 



  </WorkflowList> 



                                  NAVEX IRM Platform | API Reference Guide                           120 of 188 


----------------------- Page 121-----------------------

JSON REQUEST (cURL) 



curl -b cookie.txt -H "Accept: application/json" 

https://api.lockpath.app:4443/ComponentService/GetWorkflows?componentalias=Devices 



JSON RESPONSE 



[  



        { 



           "Id": 2, 



           "Name": "Default", 



           "IsActive": true, 



           "IsDefault": true 



        } 



] 



                               NAVEX IRM Platform | API Reference Guide                        121 of 188 


----------------------- Page 122-----------------------

TransitionRecord 



Transitions a record in a workflow stage. The transitionId may be found by using GetWorkflow. 



Permissions:    The authentication account must have: 



                 l General Access - Read and Update permissions to the defined table 



                 l View and Transition workflow stage permissions 



                 l Record permission 



URL:             https://[instance name]:[port]/ComponentService/TransitionRecord 



Method:          POST 



Input:          tableAlias (string):            The Alias for the table. 



                recordId (integer):             The Id of the record to be transitioned. 



                transitionId (integer):         The Id of the workflow stage transition. 



Examples 



  XML REQUEST (cURL) 



  curl -b cookie.txt -H "content-type: application/xml;charset=utf-8" -X POST -d 

  @TransitionRecord.xml 



  "https://api.lockpath.app:4443/ComponentService/TransitionRecord" 



  XML REQUEST (TransitionRecord.xml) 



  <TransitionRecord> 



         <tableAlias>Devices</tableAlias> 



         <recordId>2</recordId> 



         <transitionId>42</transitionId> 



  </TransitionRecord> 



  XML RESPONSE 



  true 



  JSON REQUEST (cURL) 



  curl -b cookie.txt -H "content-type: application/json" -H "Accept: application/json" -X 

  POST -d @TransitionRecord.json 



  "https://api.lockpath.app:4443/ComponentService/TransitionRecord" 



                                   NAVEX IRM Platform | API Reference Guide                           122 of 188 


----------------------- Page 123-----------------------

JSON REQUEST (TransitionRecord.json) 



{ 



       "tableAlias": "Devices", 



       "recordId": "2", 



       "transitionId": "42" 



} 



JSON RESPONSE 



true 



                               NAVEX IRM Platform | API Reference Guide                        123 of 188 


----------------------- Page 124-----------------------

VoteRecord 



Casts a vote for a record in a workflow stage. The transition ID may be found by using GetWorkflow. 



Permissions:     The authentication account must have: 



                 l General Access - Read and Update permissions to the defined table 



                 l View and Vote workflow stage permissions 



                 l Record permission 



URL:             https://[instance name]:[port]/ComponentService/VoteRecord 



Method:          POST 



Input:           tableAlias (string):           The Alias for the table. 



                 recordId (integer):            The Id of the record to be transitioned. 



                 transitionId (integer):        The Id of the workflow stage voting rule. 



                 votingComments (string)        A comment regarding the vote. 

                 (optional): 



Examples 



  XML REQUEST (cURL) 



  curl -b cookie.txt -H "content-type: application/xml;charset=utf-8" -X POST -d 

  @VoteRecord.xml 



  "https://api.lockpath.app:4443/ComponentService/VoteRecord" 



  XML REQUEST (VoteRecord.xml) 



  <VoteRecord> 



         <tableAlias>Devices</tableAlias> 



         <recordId>4</recordId> 



         <transitionId>46</transitionId> 



         <votingComments>Approved</votingComments> 



  </VoteRecord> 



  XML RESPONSE 



  true 



  JSON REQUEST (cURL) 



  curl -b cookie.txt -H "content-type: application/json" -H "Accept: application/json" -X 

  POST -d @VoteRecord.json 



  "https://api.lockpath.app:4443/ComponentService/VoteRecord" 



                                   NAVEX IRM Platform | API Reference Guide                           124 of 188 


----------------------- Page 125-----------------------

JSON REQUEST (VoteRecord.json) 



{ 



       "tableAlias": "Devices", 



       "recordId": "4", 



       "transitionId": "46", 



       "votingComments": "Approved" 



} 



JSON RESPONSE 



true 



                               NAVEX IRM Platform | API Reference Guide                        125 of 188 


----------------------- Page 126-----------------------

CreateRecord 



Creates a new record within the specified component of the application. 



  Note: The Required option for a field is only enforced through the user interface, not through the API. 

  Therefore, CreateRecord does not enforce the Required option for fields. 



Permissions:      The authentication account must have: 



                  l  General Access - Create permissions to the selected component 



                  l  Edit permission to any field into which data is to be entered 



URL:              https://[instance name]:[port]/ComponentService/CreateRecord 



Method:           POST 



Input:            componentId (integer):                            The ID of the desired component. 



                  dynamicRecord (FieldValues - KeyValuePair):       Fields for the component to be created. 



Dynamic           A dynamic record is defined by key-value pairs that contain a field ID (where the data will be 

Record:           entered) and a value that contains the type of the data and the data itself. 



                  Applicable types are string, decimal, boolean, dateTime, and DynamicRecordItem. For 

                  example, the XML syntax for the types is shown below. 



                  <!--Text--> 



                          <KeyValuePair> 



                               <key>3664</key> 



                               <value i:type="a:string">See Spot Run</value> 



                          </KeyValuePair> 



                  <!--Numeric--> 



                          <KeyValuePair> 



                               <key>3667</key> 



                               <value i:type="a:decimal ">25.13</value> 



                          </KeyValuePair> 



                                     NAVEX IRM Platform | API Reference Guide                                126 of 188 


----------------------- Page 127-----------------------

                 <!--Yes/No--> 



                       <KeyValuePair> 



                            <key>3670</key> 



                            <value i:type="a:boolean ">true</value> 



                       </KeyValuePair> 



                 <!--Date--> 



                         <KeyValuePair> 



                              <key>3719</key> 



                              <value i:type="a:dateTime ">2014-09-19T11:02:46</value> 



                         </KeyValuePair> 



                 <!--1:1 Lookup--> 



                         <KeyValuePair> 



                              <key>3667</key> 



                              <value i:type='DynamicRecordItem '><Id>18</Id></value> 



                         </KeyValuePair> 



                 <!--1:M Lookup--> 



                         <KeyValuePair> 



                              <key>3720</key> 



                              <value i:type='DynamicRecordList'> 



                              <Record><Id>13</Id></Record> 



                              <Record><Id>20</Id></Record> 



                              </value> 



                         </KeyValuePair> 



Empty Fields:    If a field is not included in the input for CreateRecord, the field remains empty/null for the 

                 created record. 



                 To create empty/null data for a field that is defined in the input is to use: 



                         <value i:nil="true" /> in XML or "value i:nil="true" in JSON 



Matrix:          Matrix records can only be created after the parent record is created. The Matrix componentId 

                 can be retrieved with GetComponentList and the Matrix column fields can be retrieved with 

                 GetFieldList, using the Matrix componentId. Matrix row ID’s must be retrieved from the table in 

                 the database. 



                                    NAVEX IRM Platform | API Reference Guide                               127 of 188 


----------------------- Page 128-----------------------

Master/Detail:   Master/Detail records can only be created after the parent record has been created. The 

                 Master/Detail componentId can be retrieved with GetComponentList and the master/detail 

                 subfields can be retrieved with GetFieldList, using the Master/Detail componentId. 



Workflow Stage Workflow contains a Workflow Stage field ID and the Workflow Stage ID. 

ID: 

                 <KeyValuePair> 



                         <key>3849</key> 



                         <value i:type="DynamicRecordItem"><Id>109</Id></value> 



                 </KeyValuePair> 



System Fields:   The platform populates system fields when a user enters values for their custom created fields. 

                 The response contains values for these system fields. 



                                                          System Fields 



                  Field                             Value Source 



                  CreatedAt                          TimeStamp record created 



                  CreatedBy                          User Id (API logon) 



                  Id                                 Unique record identifier 



                  CurrentRevision                    Tracks revision history starting at 0 



                  UpdatedAt                          TimeStamp record updated 



                  UpdatedBy                          User Id (API logon) 



                  Workflow Stage                    Workflow stage for record 



  Note: To embed HTML code in XML, use the <![CDATA[html goes here]]> tag to wrap around the 

  HTML code. 



                                    NAVEX IRM Platform | API Reference Guide                              128 of 188 


----------------------- Page 129-----------------------

Examples 



 XML REQUEST (cURL) 



  curl -b cookie.txt -H "content-type: application/xml;charset=utf-8" -X POST -d 



  @CreateRecordInput.xml 



  "https://api.lockpath.app:4443/ComponentService/CreateRecord" 



 XML REQUEST (CreateRecord.xml) 



  <CreateRecord> 



  <componentId>10001</componentId> 



         <dynamicRecord xmlns:i="http://www.w3.org/2001/XMLSchema-instance" 

         xmlns:a="http://www.w3.org/2001/XMLSchema"> 



                <FieldValues> 



                       <KeyValuePair> 



                            <key>6</key> 



                            <value i:type="a:string">Tag</value> 



                       </KeyValuePair> 



                </FieldValues> 



         </dynamicRecord> 



  </CreateRecord> 



 XML RESPONSE 



  <DynamicRecordItem xmlns:i="http://www.w3.org/2001/XMLSchema-instance"> 



         <Id>321</Id> 



         <DisplayName>321</DisplayName> 



         <FieldValues> 



                 <KeyValuePair> 



                         <key>3</key> 



                         <value i:nil="true"/> 



                 </KeyValuePair> 



                 <KeyValuePair> 



                         <key>4</key> 



                         <value i:nil="true"/> 



                 </KeyValuePair> 



                 <KeyValuePair> 



                         <key>6</key> 



                                 NAVEX IRM Platform | API Reference Guide                        129 of 188 


----------------------- Page 130-----------------------

                       <value i:type="a:string" 

xmlns:a="http://www.w3.org/2001/XMLSchema">Tag</value> 



                </KeyValuePair> 



... 



        </FieldValues> 



</DynamicRecordItem> 



JSON REQUEST (cURL) 



curl -b cookie.txt -H "content-type: application/json" -H "Accept: application/json" -X 

POST -d @CreateRecord.json 



"https://api.lockpath.app:4443/ComponentService/CreateRecord" 



JSON REQUEST (CreateRecord.json) 



{ 



        "componentId": "10001", 



        "dynamicRecord": { 



                "FieldValues": [ 



                        { 



                               "key": "3", 



                               "value": "API Example DNS Name" 



                        }, 



                        { 



                               "key": "9", 



                               "value": 250.00 



                        }, 



                        { 



                               "key": "10", 



                               "value": "12/25/2020" 



                        }, 



                        { 



                               "key": "11", 



                               "value": "127.0.0.1" 



                        } 



                ] 



        } 



                                NAVEX IRM Platform | API Reference Guide                         130 of 188 


----------------------- Page 131-----------------------

} 



JSON RESPONSE 



{ 



        "Id": 322, 



        "DisplayName": "322", 



        "FieldValues": [ 



                { 



                        "Key": 3, 



                        "Value": "API Example DNS Name" 



                }, 



                { 



                                "Key": 4, 



                                "Value": null 



                }, 



                { 



                                "Key": 6, 



                                "Value": null 



                }, 



                { 



                                "Key": 7, 



                                "Value": null 



                }, 



                { 



                                "Key": 8, 



                                "Value": null 



                }, 



                { 



                                "Key": 9, 



                                "Value": 250.0 



                }, 



                { 



                                "Key": 10, 



                                NAVEX IRM Platform | API Reference Guide                          131 of 188 


----------------------- Page 132-----------------------

                               "Value": "2020-12-25T00:00:00" 



                }, 



                { 



                               "Key": 11, 



                               "Value": "127.0.0.1" 



                }, 



... 



                } 



        ] 



} 



                                NAVEX IRM Platform | API Reference Guide                         132 of 188 


----------------------- Page 133-----------------------

UpdateRecord 



Updates a record within the specified component of the application. 



  Note: The Required option for a field is only enforced through the user interface, not through the API. 

  Therefore, UpdateRecord does not enforce the Required option for fields. The response will include 

  the complete set of fields for the specified record. 



Permissions:      The authentication account must have: 



                  l  Read/Update General Access permission to the selected component 



                  l  Edit permission for fields to be updated 



                  l  Read permission to the selected record 



URL:              https://[instance name]:[port]/ComponentService/UpdateRecord 



Method:           POST 



Input:            componentId (integer):                             The ID of the desired component. 



                  dynamicRecord (FieldValues - KeyValuePair):        Fields for the component to be created. 



Dynamic           A dynamic record is defined by key-value pairs that contain a field ID (where the data will be 

Record:           entered) and a value that contains the type of the data and the data itself. 



                  Applicable types are string, decimal, boolean, dateTime, and DynamicRecordItem. For 

                  example, the XML syntax for the types is shown below. 



                  <!--Text--> 



                          <KeyValuePair> 



                                <key>3664</key> 



                                <value i:type="a:string">See Spot Run</value> 



                          </KeyValuePair> 



                  <!--Numeric--> 



                          <KeyValuePair> 



                                <key>3667</key> 



                                <value i:type="a:decimal ">25.13</value> 



                          </KeyValuePair> 



                  <!--Date--> 



                          <KeyValuePair> 



                                <key>3719</key> 



                                <value i:type="a:dateTime ">2014-09-19T11:02:46</value> 



                          </KeyValuePair> 



                                     NAVEX IRM Platform | API Reference Guide                                 133 of 188 


----------------------- Page 134-----------------------

                 <!--Yes/No--> 



                         <KeyValuePair> 



                               <key>3670</key> 



                               <value i:type="a:boolean ">true</value> 



                         </KeyValuePair> 



                 <!--1:1 Lookup--> 



                         <KeyValuePair> 



                               <key>3667</key> 



                               <value i:type='DynamicRecordItem '><Id>18</Id></value> 



                         </KeyValuePair> 



                 <!--1:M Lookup--> 



                         <KeyValuePair> 



                                 <key>3720</key> 



                                 <value i:type='DynamicRecordList'> 



                                 <Record><Id>13</Id></Record> 



                                 <Record><Id>20</Id></Record> 



                                 </value> 



                         </KeyValuePair> 



Empty Fields:    To create empty/null data for a field that is defined in the input is to use: 



                         <value i:nil="true" /> in XML or "value i:nil="true" in JSON 



Matrix:          The Matrix componentId can be retrieved with GetComponentList and the Matrix column fields 

                 can be retrieved with GetFieldList, using the Matrix componentId. Matrix row ID’s must be 

                 retrieved from the table in the database. 



Master/Detail:   The Master/Detail componentId can be retrieved with GetComponentList and the master/detail 

                 subfields can be retrieved with GetFieldList, using the Master/Detail componentId. 



  Note: To embed HTML code in XML, use the <![CDATA[html goes here]]> tag to wrap around the 

  HTML code. 



                                    NAVEX IRM Platform | API Reference Guide                               134 of 188 


----------------------- Page 135-----------------------

Examples 



In the samples, an ellipse (...) indicates an incomplete list of items returned. 



 XML REQUEST (cURL) 



  curl -b cookie.txt -H "content-type: application/xml;charset=utf-8" -X POST -d 



  @UpdateRecordInput.xml 



  "https://api.lockpath.app:4443/ComponentService/UpdateRecord" 



 XML REQUEST (UpdateRecord.xml) 



  <UpdateRecord> 



         <componentId>10001</componentId> 



         <dynamicRecord xmlns:i="http://www.w3.org/2001/XMLSchema-instance" 

  xmlns:a="http://www.w3.org/2001/XMLSchema"> 



         <Id>1</Id> 



         <FieldValues> 



                 <KeyValuePair> 



                         <key>9</key> 



                         <value i:type="a:decimal">120.00</value> 



                 </KeyValuePair> 



         </FieldValues> 



         </dynamicRecord> 



  </UpdateRecord> 



 XML RESPONSE 



  <DynamicRecordItem xmlns:i="http://www.w3.org/2001/XMLSchema-instance"> 



         <Id>1</Id> 



         <DisplayName>1</DisplayName> 



         <FieldValues> 



                <KeyValuePair> 



                     <key>9</key> 



                     <value i:type="a:decimal" 

                     xmlns:a="http://www.w3.org/2001/XMLSchema">120.00</value> 



                </KeyValuePair> 



  ... 



         </FieldValues> 



  </DynamicRecordItem> 



                                 NAVEX IRM Platform | API Reference Guide                          135 of 188 


----------------------- Page 136-----------------------

JSON REQUEST (cURL) 



curl -b cookie.txt -H "content-type: application/json" -H "Accept: application/json" -X 

POST -d @UpdateRecord.json 



"https://api.lockpath.app:4443/ComponentService/UpdateRecord" 



JSON REQUEST (UpdateRecord.json) 



{ 



        "componentId": "10001", 



        "dynamicRecord": { 



                "Id": "314", 



                "FieldValues": { 



                       "key": "6", 



                       "value": "Asset: IT Department" 



                } 



        } 



} 



JSON RESPONSE 



{ 



        "Id": "314", 



        "DisplayName": "314", 



        "FieldValues": [ 



                { 



                "Key": "6", 



                "Value": "Asset: IT Department" 



                }, 



... 



        ] 



} 



                                NAVEX IRM Platform | API Reference Guide                        136 of 188 


----------------------- Page 137-----------------------

UpdateRecordAttachments 



Adds new attachments and/or updates existing attachments to the provided documents field(s) on a specific 

record, where the FileData is represented as a Base64 string. The maximum data size of the request is controlled 

by the maxAllowedContentLength and maxReceivedMessageSize values in the API web.config file. 



Permissions:    The authentication account must have Read and Update General Access permissions to: 



                 l Selected component 



                 l Selected record 



                 l Applicable fields in the component (table) 



URL:             https://[instance name]:[port]/ComponentService/UpdateRecordAttachments 



Method:          POST 



Input:           componentId (integer):     The Id of the desired component. 



                 recordId (integer):        The Id for the individual record within the component. 



                fieldId (integer):          The Id for the individual field within the component. 



Examples 



  XML REQUEST (cURL) 



  curl -b cookie.txt -H "content-type: application/xml;charset=utf-8" -X POST -d 

  @UpdateRecordAttachments.xml 



  "https://api.lockpath.app:4443/ComponentService/UpdateRecordAttachments" 



  XML REQUEST (UpdateRecordAttachments.xml) 



  <UpdateRecordAttachments> 



  <componentId>10001</componentId> 



  <dynamicRecord xmlns:i="http://www.w3.org/2001/XMLSchema-instance" 

  xmlns:a="http://www.w3.org/2001/XMLSchema"> 



  <Id>2</Id> 



  <FieldValues> 



          <KeyValuePair> 



          <key>34</key> 



          <value i:type='RecordAttachmentList'> 



                  <Attachment> 



                  <FileName>AttachmentTest1.txt</FileName> 



                  <FileData>SGVsbG8gV29ybGQ=</FileData> 



                  </Attachment> 



                                   NAVEX IRM Platform | API Reference Guide                             137 of 188 


----------------------- Page 138-----------------------

        </value> 



        </KeyValuePair> 



</FieldValues> 



</dynamicRecord> 



</UpdateRecordAttachments> 



XML RESPONSE 



<AttachmentOperationResultList xmlns:i="http://www.w3.org/2001/XMLSchema-instance"> 



        <AttachmentOperationResult> 



                <OperationSucceeded>true</OperationSucceeded> 



                <Message>Attachment was successfully added to the Documents field.</Message> 



                <ComponentId>10001</ComponentId> 



                <RecordId>2</RecordId> 



                <AttachmentInfo> 



                       <FileName>AttachmentTest1.txt</FileName> 



                       <FieldId>34</FieldId> 



                       <DocumentId>56</DocumentId> 



                </AttachmentInfo> 



        </AttachmentOperationResult> 



</AttachmentOperationResultList> 



JSON REQUEST (cURL) 



curl -b cookie.txt -H "content-type: application/json" -H "Accept: application/json" -X 

POST -d @UpdateRecordAttachments.json 



"https://api.lockpath.app:4443/ComponentService/UpdateRecordAttachments" 



JSON REQUEST (UpdateRecordAttachments.json) 



{ 



        "componentId": 10001, 



        "dynamicRecord": { 



                "Id": 2, 



                "FieldValues": [ 



                        { 



                               "key": 34, 



                               "value": 



                                NAVEX IRM Platform | API Reference Guide                        138 of 188 


----------------------- Page 139-----------------------

                                       [ 



                                               { 



                                               "FileName": "AttachmentTest1.txt", 



                                               "FileData": "SGVsbG8gV29ybGQ=" 



                                               } 



                                       ] 



                               } 



                       ] 



                } 



} 



                               NAVEX IRM Platform | API Reference Guide                          139 of 188 


----------------------- Page 140-----------------------

JSON RESPONSE 



 [ 



        { 



                "OperationSucceeded": true, 



                "Message": "Attachment was successfully updated on the Documents field.", 



                "ComponentId": 10001, 



                "RecordId": 2, 



                "AttachmentInfo": { 



                        "FileName": "AttachmentTest1.txt", 



                        "FieldId": 34, 



                        "DocumentId": 56 



                } 



        } 



] 



                                NAVEX IRM Platform | API Reference Guide                         140 of 188 


----------------------- Page 141-----------------------

DeleteRecord 



Deletes a selected record from within a chosen component. DeleteRecord will update the record, making it so it 

will no longer be viewable. 



   Important:  Records are soft deleted to maintain any historical references to the record and can be 

   restored with a database script. 



Permissions:     The authentication account must have: 



                 l  General Access - Read and Delete permissions to the selected component 



                 l  Read permissions to the selected record 



URL:             https://[instance name]:[port]/ComponentService/DeleteRecord 



Method:          DELETE 



Input:           componentId (integer):          The Id of the desired component. 



                 recordId (integer):             The Id for the individual record within the component. 



Examples 



  XML REQUEST (cURL) 



  curl -b cookie.txt -H "content-type: application/xml;charset=utf-8" -X DELETE –d 

  @DeleteRecord.xml 



  "https://api.lockpath.app:4443/ComponentService/DeleteRecord" 



  XML REQUEST (DeleteRecord.xml) 



  <DeleteRecord> 



         <componentId>10001</componentId> 



         <recordId>319</recordId> 



  </DeleteRecord> 



  XML RESPONSE 



  <boolean xmlns="http://schemas.microsoft.com/2003/10/Serialization/">true</boolean> 



  JSON REQUEST (cURL) 



  curl -b cookie.txt -H "content-type: application/json" -H "Accept: application/json" -X 

  DELETE-d @DeleteRecord.json 



  "https://api.lockpath.app:4443/ComponentService/DeleteRecord" 



                                   NAVEX IRM Platform | API Reference Guide                            141 of 188 


----------------------- Page 142-----------------------

JSON REQUEST (DeleteRecord.json) 



{ 



       "componentId": "10001", 



       "recordId": "319" 



} 



JSON RESPONSE 



true 



                               NAVEX IRM Platform | API Reference Guide                        142 of 188 


----------------------- Page 143-----------------------

DeleteRecordAttachments 



Deletes the specified attachments from the provided document fields on a specific record. 



Permissions:    The authentication account must have General Access - Read and Delete permissions to: 



                 l Selected component 



                 l Selected record 



                 l Applicable fields in the component (table) 



URL:            https://[instance name]:[port]/ComponentService/DeleteRecordAttachments 



Method:         POST 



Input:          componentId (integer):     The Id of the desired component. 



                recordId (integer):        The Id for the individual record within the component. 



                fieldId (integer):         The Id for the individual field within the component. 



                attachmentId (integer):    The Id for the individual attachment within the component. 



Examples 



  XML REQUEST (cURL) 



  curl -b cookie.txt -H "content-type: application/xml;charset=utf-8" -X POST -d 

  @DeleteRecordAttachments.xml 



  "https://api.lockpath.app:4443/ComponentService/DeleteRecordAttachments" 



  XML REQUEST (DeleteRecordAttachments.xml) 



  <DeleteRecordAttachments> 



  <componentId>10001</componentId> 



  <dynamicRecord xmlns:i="http://www.w3.org/2001/XMLSchema-instance" 

  xmlns:a="http://www.w3.org/2001/XMLSchema"> 



          <Id>1</Id> 



          <FieldValues> 



                  <KeyValuePair> 



                          <key>34</key> 



                          <value i:type='DynamicRecordList'> 



          <Record> 



                  <Id>1</Id> 



          </Record> 



          </value> 



                                   NAVEX IRM Platform | API Reference Guide                             143 of 188 


----------------------- Page 144-----------------------

                </KeyValuePair> 



        </FieldValues> 



</dynamicRecord> 



</DeleteRecordAttachments> 



XML RESPONSE 



<AttachmentOperationResultList xmlns:i="http://www.w3.org/2001/XMLSchema-instance"> 



        <AttachmentOperationResult> 



                <OperationSucceeded>true</OperationSucceeded> 



                <Message>Attachment was successfully deleted from the Documents 

field.</Message> 



                <ComponentId>10001</ComponentId> 



                <RecordId>1</RecordId> 



                <AttachmentInfo> 



                       <FileName/> 



                       <FieldId>34</FieldId> 



                       <DocumentId>1</DocumentId> 



                </AttachmentInfo> 



        </AttachmentOperationResult> 



</AttachmentOperationResultList> 



JSON REQUEST (cURL) 



curl -b cookie.txt -H "content-type: application/json" -H "Accept: application/json" -X 

POST -d @DeleteRecordAttachments.json 



"https://api.lockpath.app:4443/ComponentService/DeleteRecordAttachments" 



JSON REQUEST (DeleteRecordAttachments.json) 



{ 



        "componentId": "10001", 



        "dynamicRecord": { 



                "Id": "2", 



                "FieldValues": [ 



                        { 



                       "key": "34", 



                       "value":[ 



                                NAVEX IRM Platform | API Reference Guide                        144 of 188 


----------------------- Page 145-----------------------

                               { 



                               "Id": "1" 



                               } 



                       ] 



                        } 



        ] 



        } 



} 



                               NAVEX IRM Platform | API Reference Guide                          145 of 188 


----------------------- Page 146-----------------------

JSON RESPONSE 



 [ 



        { 



                "OperationSucceeded": true, 



                "Message": "Attachment was successfully deleted from the Documents field.", 



                "ComponentId": 10001, 



                "RecordId": 2, 



                "AttachmentInfo": { 



                        "FileName": "Attachment.txt", 



                        "FieldId": 34, 



                        "DocumentId": 1 



                } 



        } 



] 



                                NAVEX IRM Platform | API Reference Guide                         146 of 188 


----------------------- Page 147-----------------------

ImportFile 



Queues a job to import a file for a defined import template. 



Permissions:     The authentication account must have: 



                 l  General Access - Read, Create, Update, and Import/Bulk permissions to the defined table 



                 To enable the Run As System option the authentication account must have also have 

                 Administrative Access - Read, Create, and Update permissions to the defined table 



URL:             https://[instance name]:[port]/ComponentService/ImportFile 



Method:          POST 



Input:           tableAlias (string):             The Alias for the table to import into. 



                 importTemplateName (string):     The Name of the import template. 



                 fileName (string):               The Name of the import file. 



                 fileData (string):               Base64 encoded string of file contents. 



                 runAsSystem (boolean):           Run import as the System account rather than authentication 

                                                  account. 



Examples 



  XML REQUEST (cURL) 



  curl -b cookie.txt -H "content-type: application/xml;charset=utf-8" -X POST -d 

  @ImportFile.xml 



  "https://api.lockpath.app:4443/ComponentService/ImportFile" 



  XML REQUEST (ImportFile.xml) 



  <ImportFile> 



          <tableAlias>_temp</tableAlias> 



          <importTemplateName>CSV Import</importTemplateName> 



          <fileName>import_temp.csv</fileName> 



          <fileData>SGVsbG8gV29ybGQ=</fileData> 



          <runAsSystem>false</runAsSystem> 



  </ImportFile> 



  XML RESPONSE 



  <boolean xmlnx="http://schemas.microsoft.com/2003/10/Serialization/">true</boolean> 



  JSON REQUEST (cURL) 



                                   NAVEX IRM Platform | API Reference Guide                             147 of 188 


----------------------- Page 148-----------------------

curl -b cookie.txt -H "content-type: application/json" -H "Accept: application/json" -X 

POST -d @ImportFile.json 



"https://api.lockpath.app:4443/ComponentService/ImportFile" 



JSON REQUEST (ImportFile.json) 



{ 



       "tableAlias": "_temp", 



       "importTemplateName": "CSV Import", 



       "fileName": "import_temp.csv", 



       "fileData": "SGVsbG8gV29ybGQ=", 



       "runAsSystem": "false" 



} 



JSON RESPONSE 



true 



                                NAVEX IRM Platform | API Reference Guide                        148 of 188 


----------------------- Page 149-----------------------

4: Report Services API 



This chapter includes a description of the available methods for reporting about the data in the NAVEX IRM 

Platform. 



    ExportReport                                                                                           150 


----------------------- Page 150-----------------------

ExportReport 



Outputs report data to a CSV, PDF, or XLSX file format. The My Reports tab in the user interface contains the ID 

for the desired report. If a report is not found or permissions are not granted to export data, the message "Report 

does not exist or is inaccessible" appears. 



Permissions:      The authentication account must have General Access - Read and Print/Export permissions to: 



                  l  Applicable component 



                  l  Applicable records 



                  l  Applicable fields in the component (table) 



URL:              https://[instance name]:[port]/ReportService/ExportReport 



Method:           GET 



Input:            Id (integer):      The Id of the desired report. 



                  fileExtension      CSV (a comma-separated values file). 

                  (text): 

                                     PDF (a portable document format file). 



                                     XLSX (a Microsoft Excel Open XML formatted spreadsheet). 



Examples 



The resource media type for this method is application/octet-stream. The XML and JSON responses include the 

exported data in the format you request. 



  XML REQUEST (cURL) 



  curl -b cookie.txt -H "Accept: application/xml" 

  "https://url:4443/ReportService/ExportReport?id=123&fileExtension=csv" -o report_name.csv 



  JSON REQUEST (cURL) 



  curl -b cookie.txt -H "Accept: application/json" 

  "https://url:4443/ReportService/ExportReport?id=123&fileExtension=csv" -o report_name.csv 



                                      NAVEX IRM Platform | API Reference Guide                                 150 of 188 


----------------------- Page 151-----------------------

5: Assessment Services API 



This chapter includes the available methods for initiating assessments into fields on DCF tables and on Master 

Detail records in the NAVEX IRM Platform. 



    IssueAssessment                                                                                      152 


----------------------- Page 152-----------------------

IssueAssessment 



Issues an assessment according to a specified schedule. Assessments can be issued directly to a vendor or you 

can issue an assessment internally to a NAVEX IRM user to perform assessments of a vendor without the 

assessment being viewable by external vendor contacts that have access to the NAVEX IRM Vendor Portal. 



Permissions:       The authentication account must have General Access - Create, Read and Update permissions 

                   to: 



                   l  Applicable component 



                   l  Applicable records 



                   l  Applicable fields in the component (table) 



                   The user account must have "Accessible to" permissions to: 



                   l  Applicable assessment category 



URL:               https://[instance name]:[port]/AssessmentService/IssueAssessment 



Method:            POST 



Input:             Various user fields 



Schedule Types 



Assessments are generated according to a schedule type and are issued on a cycle of every five minutes. 



 Schedule Type              Description 



 Immediate                  A one-time assessment issued today. 



 Onetime                    A one-time assessment issued at a future date. 



 Recurring                  An assessment that repeats how often you want it to be issued according to a 

                            schedule. 



                                      NAVEX IRM Platform | API Reference Guide                                    152 of 188 


----------------------- Page 153-----------------------

Parameters 



The following is a list of the available parameters for the IssueAssessment method. Some parameters when 

enabled require additional parameters to be set. 



 Parameter                           Additional parameters                    Description 



 ProjectId                                                                    Specifies the id of the project defined in 

                                                                              Compliance Manager associated with 

                                                                              the assessment. When an assessment 

                                                                              is issued from a DCF table or 

                                                                              master/detail record this parameter is 

                                                                              not required. 



 TableId                                                                      Specifies the id of the table to which the 

                                                                              assessment is associated. For 

                                                                              master/detail record assessments, 

                                                                              TableId is the master field ID. 



 FieldId                                                                      Specifies the id of the field to which the 

                                                                              assessment is associated. For 

                                                                              master/detail record assessments, 

                                                                              FieldId is the assessment field ID of the 

                                                                              master/detail table. 



 ContentId                                                                    Specifies the id of the record of the 

                                                                              table to which the assessment is 

                                                                              associated. For master/detail record 

                                                                              assessments, ContentId is the specific 

                                                                              record within the master/detail table. 



 VendorId                                                                     Specifies the id of the vendor for the 

                                                                              issuance. When an assessment is 

                                                                              issued to a vendor this parameter is 

                                                                              required. 



 IsVendorInternalMode                                                        Although this parameter exists, it has 

                                                                              no content. 



 Name                                                                         Specifies the name identifying the 

                                                                              assessment. 



 TemplateId                                                                   Specifies the id of the template 

                                                                              containing the questions for the 

                                                                              assessment. 



 VendorContactId                                                              Specifies the id of the vendor contact. 

                                                                             When an assessment is issued to a 

                                                                             vendor this parameter is required. 



                                      NAVEX IRM Platform | API Reference Guide                                  153 of 188 


----------------------- Page 154-----------------------

Parameter                          Additional parameters                  Description 



UsersIds                                                                  Specifies the id of the user to which you 

                                                                          want to issue the assessment. Use a 

                                                                          comma to separate the ids of multiple 

                                                                          users. 



GroupIds                                                                  Specifies the id of the group to which 

                                                                          you want to issue the assessment. Use 

                                                                          a comma to separate the ids of multiple 

                                                                          groups. 



AssignedUserOnly                                                          Determines whether a review or 

                                                                          multiple reviewers are required. When 

                                                                          this parameter is set to True, optional 

                                                                          parameters are required. 



                                   ReviewerId                             Specifies the id of the user designated 

                                                                          to review the assessment once it has 

                                                                          been submitted. Use a comma to 

                                                                          separate the ids of multiple reviewers. 



AllowDelegation                                                           Determines whether to allow the 

                                                                          assessment to be delegated. 



GenerateFindings                                                          Determines whether to automatically 

                                                                          generate findings. 



                                   FindingsOutputTableId                  Specifies the table (ComponentId) into 

                                                                          which you want the record 

                                                                          automatically generated for the 

                                                                          question specified in the applicable 

                                                                          assessment template. This parameter 

                                                                          appears when GenerateFindings is set 

                                                                          to True. 



                                   FindingsOutputFieldId                  Specifies the field (FieldId) into which 

                                                                          you want the record automatically 

                                                                          generated for the question specified in 

                                                                          the applicable assessment template. 

                                                                          This parameter appears when 

                                                                          GenerateFindings is set to True. 



                                   FindingsParentGroupingFieldId          Specifies the field (FieldId) into which 

                                                                          the findings are grouped together and 

                                                                          recorded in one single table record. 

                                                                          This parameter appears when 

                                                                          GenerateFindings is set to True. 



                                    NAVEX IRM Platform | API Reference Guide                               154 of 188 


----------------------- Page 155-----------------------

Parameter                          Additional parameters                   Description 



                                    FindingsControlsFieldId                Specifies the field (FieldId) into which 

                                                                           the controls that are mapped to the 

                                                                           assessment question are automatically 

                                                                           populated. This parameter appears 

                                                                           when GenerateFindings is set to True. 



ShowUserScores                                                             Determines whether user scores are 

                                                                           written to a record. This parameter is 

                                                                           only applicable if the assessment 

                                                                           template has score-based enabled. 



IssuanceScheduleType                                                       Specifies whether to issue the 

                                                                           assessment immediately, onetime, or 

                                                                           on a recurring basis. 



                                    IssueDate                              Specifies the issuance date of the 

                                                                           assessment. The default is today’s 

                                                                           date. This parameter appears when 

                                                                           IssuanceScheduleType is set to 

                                                                           onetime. 



                                    DueDate                                Specifies the due date of the issuance. 

                                                                           The date may not precede the issuance 

                                                                           date. This parameter appears when 

                                                                           IssuanceScheduleType is set to 

                                                                           onetime. 



                                    BeginningDate                          Specifies the date when the 

                                                                           assessment is initially issued. This 

                                                                           parameter appears when 

                                                                           IssuanceScheduleType is set to 

                                                                           recurring. 



                                    EndingDate                             Specifies the date when the issuing of 

                                                                           the assessment is to stop. This 

                                                                           parameter appears when 

                                                                           IssuanceScheduleType is set to 

                                                                           recurring. 



                                    RepeatInterval                         Specifies whether the issuance repeats 

                                                                           Daily, Weekly, Monthly, or Annually. 

                                                                           This parameter appears when 

                                                                           IssuanceScheduleType is set to 

                                                                           recurring. 



                                    NAVEX IRM Platform | API Reference Guide                                155 of 188 


----------------------- Page 156-----------------------

Parameter                          Additional parameters                  Description 



                                   RepeatUnit                             Specifies the number of times the 

                                                                          assessment is repeated. This 

                                                                          parameter appears when 

                                                                          IssuanceScheduleType is set to 

                                                                          recurring and is required when 

                                                                          RepeatInterval is set to Daily, Monthly, 

                                                                          or Annually. 



                                   RepeatsSunday                          Determines whether the issuance 

                                                                          repeats on Sunday. This parameter 

                                                                          appears when IssuanceScheduleType 

                                                                          is set to recurring and is required when 

                                                                          RepeatInterval is set to Weekly. 



                                   RepeatsMonday                          Determines whether the issuance 

                                                                          repeats on Monday. This parameter 

                                                                          appears when IssuanceScheduleType 

                                                                          is set to recurring and is required when 

                                                                          RepeatInterval is set to Weekly. 



                                   RepeatsTuesday                         Determines whether the issuance 

                                                                          repeats on Tuesday. This parameter 

                                                                          appears when IssuanceScheduleType 

                                                                          is set to recurring and is required when 

                                                                          RepeatInterval is set to Weekly. 



                                   RepeatsWednesday                       Determines whether the issuance 

                                                                          repeats on Wednesday. This 

                                                                          parameter appears when 

                                                                          IssuanceScheduleType is set to 

                                                                          recurring and is required when 

                                                                          RepeatInterval is set to Weekly. 



                                   RepeatsThursday                        Determines whether the issuance 

                                                                          repeats on Thursday. This parameter 

                                                                          appears when IssuanceScheduleType 

                                                                          is set to recurring and is required when 

                                                                          RepeatInterval is set to Weekly. 



                                   RepeatsFriday                          Determines whether the issuance 

                                                                          repeats on Friday. This parameter 

                                                                          appears when IssuanceScheduleType 

                                                                          is set to recurring and is required when 

                                                                          RepeatInterval is set to Weekly. 



                                    NAVEX IRM Platform | API Reference Guide                               156 of 188 


----------------------- Page 157-----------------------

Parameter                            Additional parameters                   Description 



                                     RepeatsSaturday                         Determines whether the issuance 

                                                                             repeats on Saturday. This parameter 

                                                                             appears when IssuanceScheduleType 

                                                                             is set to recurring and is required when 

                                                                             RepeatInterval is set to Weekly. 



                                     DueUnit                                 Specifies the number of days, weeks, 

                                                                             months, or years until the assessment 

                                                                             is due. This parameter appears when 

                                                                             IssuanceScheduleType is set to 

                                                                             recurring. 



                                     DueInterval                             Determines whether the due date 

                                                                             interval is days, weeks, months, or 

                                                                             years. This parameter appears when 

                                                                             IssuanceScheduleType is set to 

                                                                             recurring. 



PrepopulatePriorAnswers                                                      Determines whether the questions 

                                                                             specified in the applicable assessment 

                                                                             template are populated with the 

                                                                             answers submitted previously. 



EmailSubject                                                                 Specifies the text in the subject of the 

                                                                             email that is sent notifying the issuer of 

                                                                             the assessment. 



EmailBody                                                                    Specifies the text in the body of the 

                                                                             email that is sent notifying the issuer of 

                                                                             the assessment. 



SendCategoryEmail                                                            Determines whether email is sent to the 

                                                                             assessment category owner. 



SendReviewersOrIssueEmail                                                    Determines whether email is sent to 

                                                                             reviewers. 



                                     NAVEX IRM Platform | API Reference Guide                                   157 of 188 


----------------------- Page 158-----------------------

Parameter                          Additional parameters                  Description 



                                   AdministrativeEmailSubject             Specifies the text in the subject of the 

                                                                          email that is sent to the user designated 

                                                                         to review the assessment. This 

                                                                          parameter appears when 

                                                                          SendReviewersOrIssueEmail is set to 

                                                                         True. 



                                   AdministrativeEmailBody                Specifies the text in the body of the 

                                                                          email that is sent to the user designated 

                                                                         to review the assessment. This 

                                                                          parameter appears when 

                                                                          SendReviewersOrIssueEmail is set to 

                                                                         True. 



ScheduledAssessmentId                                                     Specifies the Id of the assessment itself 

                                                                          and is found at the end of the response 

                                                                          object. 



                                   NAVEX IRM Platform | API Reference Guide                               158 of 188 


----------------------- Page 159-----------------------

XML Examples 



  XML REQUEST (cURL) 



  curl -b cookie.txt -H "content-type: application/xml;charset=utf-8" -X POST -d 

  @Request.xml 



  "https://api.lockpath.app:4443/AssessmentService/IssueAssessment" 



  XML REQUEST - Immediate Assessment (Results.xml) 



  <IssueAssessment> 



          <assessmentIssuance xmlns:i="http://www.w3.org/2001/XMLSchema-instance" 

  xmlns:a="http://www.w3.org/2001/XMLSchema"> 



                 <ProjectId>16</ProjectId> 



                 <Name>Assessment Issued Today</Name> 



                 <TemplateId>21</TemplateId> 



                 <UserIds>1027</UserIds> 



                 <GroupIds></GroupIds> 



                 <AllowDelegation>false</AllowDelegation> 



                 <GenerateFindings>false</GenerateFindings> 



                 <AssignedUserOnly>false</AssignedUserOnly> 



                 <ShowUserScores>false</ShowUserScores> 



                 <IssuanceScheduleType>immediate</IssuanceScheduleType> 



                 <DueDate>3/12/2021</DueDate> 



                 <PrepopulatePriorAnswers>false</PrepopulatePriorAnswers> 



                 <EmailSubject>Immediate Assessment</EmailSubject> 



                 <EmailBody>Immediate Assessment</EmailBody> 



          </assessmentIssuance> 



  </IssueAssessment> 



  XML RESPONSE - Immediate Assessment 



  <AssessmentIssuanceItem xmlns:i="http://www.w3.org/2001/XMLSchema-instance"> 



          <ProjectId>16</ProjectId> 



          <TableId i:nil="true"/> 



          <FieldId i:nil="true"/> 



          <ContentId i:nil="true"/> 



          <VendorId i:nil="true"/> 



          <IsVendorInternalMode i:nil="true"/> 



                                  NAVEX IRM Platform | API Reference Guide                         159 of 188 


----------------------- Page 160-----------------------

<Name>Assessment Issued Today</Name> 



<TemplateId>21</TemplateId> 



<UserIds>1027</UserIds> 



<VendorContactId i:nil="true"/> 



<GroupIds/> 



<AllowDelegation>false</AllowDelegation> 



<AssignedUserOnly i:nil="true"/> 



<ReviewerId i:nil="true"/> 



<GenerateFindings>false</GenerateFindings> 



<FindingsOutputTableId i:nil="true"/> 



<FindingsOutputFieldId i:nil="true"/> 



<FindingsParentGroupingFieldId i:nil="true"/> 



<FindingsControlsFieldId i:nil="true"/> 



<ShowUserScores>false</ShowUserScores> 



<IssuanceScheduleType>immediate</IssuanceScheduleType> 



<BeginningDate i:nil="true"/> 



<IssueDate i:nil="true"/> 



<DueDate>3/12/2021</DueDate> 



<EndingDate i:nil="true"/> 



<RepeatUnit i:nil="true"/> 



<RepeatInterval i:nil="true"/> 



<RepeatsSunday i:nil="true"/> 



<RepeatsMonday i:nil="true"/> 



<RepeatsTuesday i:nil="true"/> 



<RepeatsWednesday i:nil="true"/> 



<RepeatsThursday i:nil="true"/> 



<RepeatsFriday i:nil="true"/> 



<RepeatsSaturday i:nil="true"/> 



<DueUnit i:nil="true"/> 



<DueInterval i:nil="true"/> 



<PrepopulatePriorAnswers>false</PrepopulatePriorAnswers> 



<EmailSubject>Immediate Assessment</EmailSubject> 



                        NAVEX IRM Platform | API Reference Guide                          160 of 188 


----------------------- Page 161-----------------------

        <EmailBody>Immediate Assessment</EmailBody> 



        <SendReviewerOrIssuerEmail i:nil="true"/> 



        <SendCategoryEmail i:nil="true"/> 



        <AdministrativeEmailSubject i:nil="true"/> 



        <AdministrativeEmailBody i:nil="true"/> 



        <ScheduledAssessmentId>165</ScheduledAssessmentId> 



</AssessmentIssuanceItem> 



XML REQUEST - Onetime Scheduled Assessment (Results.xml) 



<IssueAssessment> 



        <assessmentIssuance xmlns:i="http://www.w3.org/2001/XMLSchema-instance" 

xmlns:a="http://www.w3.org/2001/XMLSchema"> 



                <ProjectId>16</ProjectId> 



                <Name>Onetime Scheduled Assessment</Name> 



                <TemplateId>21</TemplateId> 



                <UserIds>1027</UserIds> 



                <GroupIds></GroupIds> 



                <AllowDelegation>false</AllowDelegation> 



                <GenerateFindings>false</GenerateFindings> 



                <AssignedUserOnly>false</AssignedUserOnly> 



                <ShowUserScores>false</ShowUserScores> 



                <IssuanceScheduleType>onetime</IssuanceScheduleType> 



                <IssueDate>03/05/2021</IssueDate> 



                <DueDate>03/31/2021</DueDate> 



                <PrepopulatePriorAnswers>false</PrepopulatePriorAnswers> 



                <EmailSubject>Onetime Scheduled Assessment</EmailSubject> 



                <EmailBody>Onetime Scheduled Assessment</EmailBody> 



        </assessmentIssuance> 



</IssueAssessment> 



XML RESPONSE - Onetime Scheduled Assessment 



<AssessmentIssuanceItem xmlns:i="http://www.w3.org/2001/XMLSchema-instance"> 



        <ProjectId>16</ProjectId> 



        <TableId i:nil="true"/> 



        <FieldId i:nil="true"/> 



                                NAVEX IRM Platform | API Reference Guide                           161 of 188 


----------------------- Page 162-----------------------

<ContentId i:nil="true"/> 



<VendorId i:nil="true"/> 



<IsVendorInternalMode i:nil="true"/> 



<Name>Onetime Scheduled Assessment</Name> 



<TemplateId>21</TemplateId> 



<UserIds>1027</UserIds> 



<VendorContactId i:nil="true"/> 



<GroupIds/> 



<AllowDelegation>false</AllowDelegation> 



<AssignedUserOnly i:nil="true"/> 



<ReviewerId i:nil="true"/> 



<GenerateFindings>false</GenerateFindings> 



<FindingsOutputTableId i:nil="true"/> 



<FindingsOutputFieldId i:nil="true"/> 



<FindingsParentGroupingFieldId i:nil="true"/> 



<FindingsControlsFieldId i:nil="true"/> 



<ShowUserScores>false</ShowUserScores> 



<IssuanceScheduleType>onetime</IssuanceScheduleType> 



<BeginningDate i:nil="true"/> 



<IssueDate>03/05/2021</IssueDate> 



<DueDate>03/31/2021</DueDate> 



<EndingDate i:nil="true"/> 



<RepeatUnit i:nil="true"/> 



<RepeatInterval i:nil="true"/> 



<RepeatsSunday i:nil="true"/> 



<RepeatsMonday i:nil="true"/> 



<RepeatsTuesday i:nil="true"/> 



<RepeatsWednesday i:nil="true"/> 



<RepeatsThursday i:nil="true"/> 



<RepeatsFriday i:nil="true"/> 



<RepeatsSaturday i:nil="true"/> 



<DueUnit i:nil="true"/> 



                        NAVEX IRM Platform | API Reference Guide                          162 of 188 


----------------------- Page 163-----------------------

        <DueInterval i:nil="true"/> 



        <PrepopulatePriorAnswers>false</PrepopulatePriorAnswers> 



        <EmailSubject>Onetime Scheduled Assessment</EmailSubject> 



        <EmailBody>Onetime Scheduled Assessment</EmailBody> 



        <SendReviewerOrIssuerEmail i:nil="true"/> 



        <SendCategoryEmail i:nil="true"/> 



        <AdministrativeEmailSubject i:nil="true"/> 



        <AdministrativeEmailBody i:nil="true"/> 



        <ScheduledAssessmentId>168</ScheduledAssessmentId> 



</AssessmentIssuanceItem> 



XML REQUEST - Recurring Scheduled Assessment (Results.xml) 



<IssueAssessment> 



        <assessmentIssuance xmlns:i="http://www.w3.org/2001/XMLSchema-instance" 

xmlns:a="http://www.w3.org/2001/XMLSchema"> 



        <TableId>10383</TableId> 



        <FieldId>6543</FieldId> 



        <ContentId>1</ContentId> 



        <Name>Recurring Scheduled Assessment</Name> 



        <TemplateId>21</TemplateId> 



        <UserIds>1027</UserIds> 



        <GroupIds></GroupIds> 



        <AllowDelegation>false</AllowDelegation> 



        <GenerateFindings>false</GenerateFindings> 



        <AssignedUserOnly>false</AssignedUserOnly> 



        <ShowUserScores>false</ShowUserScores> 



        <IssuanceScheduleType>recurring</IssuanceScheduleType> 



        <BeginningDate>03/03/2021</BeginningDate> 



        <RepeatUnit>monthly</RepeatUnit> 



        <EndingDate>11/05/2021</EndingDate> 



        <RepeatInterval>1</RepeatInterval> 



        <DueUnit>daily</DueUnit> 



        <DueInterval>1</DueInterval> 



        <EmailSubject>Recurring Scheduled Assessment</EmailSubject> 



                                NAVEX IRM Platform | API Reference Guide                          163 of 188 


----------------------- Page 164-----------------------

        <EmailBody>Recurring Scheduled Assessment</EmailBody> 



        </assessmentIssuance> 



</IssueAssessment> 



XML RESPONSE - Recurring Scheduled Assessment 



<AssessmentIssuanceItem xmlns:i="http://www.w3.org/2001/XMLSchema-instance"> 



        <ProjectId i:nil="true"/> 



        <TableId>10383</TableId> 



        <FieldId>6543</FieldId> 



        <ContentId>1</ContentId> 



        <VendorId i:nil="true"/> 



        <IsVendorInternalMode i:nil="true"/> 



        <Name>Recurring Scheduled Assessment</Name> 



        <TemplateId>21</TemplateId> 



        <UserIds>1027</UserIds> 



        <VendorContactId i:nil="true"/> 



        <GroupIds/> 



        <AllowDelegation>false</AllowDelegation> 



        <AssignedUserOnly i:nil="true"/> 



        <ReviewerId i:nil="true"/> 



        <GenerateFindings>false</GenerateFindings> 



        <FindingsOutputTableId i:nil="true"/> 



        <FindingsOutputFieldId i:nil="true"/> 



        <FindingsParentGroupingFieldId i:nil="true"/> 



        <FindingsControlsFieldId i:nil="true"/> 



        <ShowUserScores>false</ShowUserScores> 



        <IssuanceScheduleType>recurring</IssuanceScheduleType> 



        <BeginningDate>03/03/2021</BeginningDate> 



        <IssueDate i:nil="true"/> 



        <DueDate i:nil="true"/> 



        <EndingDate i:nil="true"/> 



        <RepeatUnit>monthly</RepeatUnit> 



        <RepeatInterval>1</RepeatInterval> 



        <RepeatsSunday i:nil="true"/> 



                                NAVEX IRM Platform | API Reference Guide                          164 of 188 


----------------------- Page 165-----------------------

        <RepeatsMonday i:nil="true"/> 



        <RepeatsTuesday i:nil="true"/> 



        <RepeatsWednesday i:nil="true"/> 



        <RepeatsThursday i:nil="true"/> 



        <RepeatsFriday i:nil="true"/> 



        <RepeatsSaturday i:nil="true"/> 



        <DueUnit>daily</DueUnit> 



        <DueInterval>1</DueInterval> 



        <PrepopulatePriorAnswers i:nil="true"/> 



        <EmailSubject>Recurring Scheduled Assessment</EmailSubject> 



        <EmailBody>Recurring Scheduled Assessment</EmailBody> 



        <SendReviewerOrIssuerEmail i:nil="true"/> 



        <SendCategoryEmail i:nil="true"/> 



        <AdministrativeEmailSubject i:nil="true"/> 



        <AdministrativeEmailBody i:nil="true"/> 



        <ScheduledAssessmentId>169</ScheduledAssessmentId> 



</AssessmentIssuanceItem> 



XML REQUEST - Vendor Internal Assessment (Results.xml) 



<IssueAssessment> 



        <assessmentIssuance xmlns:i="http://www.w3.org/2001/XMLSchema-instance" 

xmlns:a="http://www.w3.org/2001/XMLSchema"> 



        <TableId>10066</TableId> 



        <FieldId>1439</FieldId> 



        <ContentId>7</ContentId> 



        <VendorId>7</VendorId> 



        <Name>Vendor Internal Assessment</Name> 



        <TemplateId>21</TemplateId> 



        <VendorContactId>1048</VendorContactId> 



        <AllowDelegation>false</AllowDelegation> 



        <GenerateFindings>false</GenerateFindings> 



        <AssignedUserOnly>false</AssignedUserOnly> 



        <ShowUserScores>false</ShowUserScores> 



        <IssuanceScheduleType>immediate</IssuanceScheduleType> 



                                NAVEX IRM Platform | API Reference Guide                          165 of 188 


----------------------- Page 166-----------------------

        <DueDate>03/12/2021</DueDate> 



        <PrepopulatePriorAnswers>false</PrepopulatePriorAnswers> 



        <EmailSubject>Vendor Internal Assessment</EmailSubject> 



        <EmailBody>Vendor Internal Assessment</EmailBody> 



        </assessmentIssuance> 



</IssueAssessment> 



XML RESPONSE - Vendor Internal Assessment 



<AssessmentIssuanceItem xmlns:i="http://www.w3.org/2001/XMLSchema-instance"> 



        <ProjectId i:nil="true"/> 



        <TableId>10066</TableId> 



        <FieldId>1439</FieldId> 



        <ContentId>7</ContentId> 



        <VendorId>7</VendorId> 



        <IsVendorInternalMode i:nil="true"/> 



        <Name>Vendor Internal Assessment</Name> 



        <TemplateId>21</TemplateId> 



        <UserIds i:nil="true"/> 



        <VendorContactId>1048</VendorContactId> 



        <GroupIds i:nil="true"/> 



        <AllowDelegation>false</AllowDelegation> 



        <AssignedUserOnly i:nil="true"/> 



        <ReviewerId i:nil="true"/> 



        <GenerateFindings>false</GenerateFindings> 



        <FindingsOutputTableId i:nil="true"/> 



        <FindingsOutputFieldId i:nil="true"/> 



        <FindingsParentGroupingFieldId i:nil="true"/> 



        <FindingsControlsFieldId i:nil="true"/> 



        <ShowUserScores>false</ShowUserScores> 



        <IssuanceScheduleType>immediate</IssuanceScheduleType> 



        <BeginningDate i:nil="true"/> 



        <IssueDate i:nil="true"/> 



        <DueDate>03/12/2021</DueDate> 



        <EndingDate i:nil="true"/> 



                                NAVEX IRM Platform | API Reference Guide                          166 of 188 


----------------------- Page 167-----------------------

        <RepeatUnit i:nil="true"/> 



        <RepeatInterval i:nil="true"/> 



        <RepeatsSunday i:nil="true"/> 



        <RepeatsMonday i:nil="true"/> 



        <RepeatsTuesday i:nil="true"/> 



        <RepeatsWednesday i:nil="true"/> 



        <RepeatsThursday i:nil="true"/> 



        <RepeatsFriday i:nil="true"/> 



        <RepeatsSaturday i:nil="true"/> 



        <DueUnit i:nil="true"/> 



        <DueInterval i:nil="true"/> 



        <PrepopulatePriorAnswers>false</PrepopulatePriorAnswers> 



        <EmailSubject>Vendor Internal Assessment</EmailSubject> 



        <EmailBody>Vendor Internal Assessment</EmailBody> 



        <SendReviewerOrIssuerEmail i:nil="true"/> 



        <SendCategoryEmail i:nil="true"/> 



        <AdministrativeEmailSubject i:nil="true"/> 



        <AdministrativeEmailBody i:nil="true"/> 



        <ScheduledAssessmentId>171</ScheduledAssessmentId> 



</AssessmentIssuanceItem> 



XML REQUEST - Vendor Recurring Assessment (Results.xml) 



<IssueAssessment> 



        <assessmentIssuance xmlns:i="http://www.w3.org/2001/XMLSchema-instance" 

xmlns:a="http://www.w3.org/2001/XMLSchema"> 



        <TableId>10066</TableId> 



        <FieldId>1439</FieldId> 



        <ContentId>6</ContentId> 



        <VendorId>6</VendorId> 



        <Name>Vendor Recurring Assessment [Vendor Name]</Name> 



        <TemplateId>21</TemplateId> 



        <VendorContactId>1059</VendorContactId> 



        <AllowDelegation>false</AllowDelegation> 



        <GenerateFindings>false</GenerateFindings> 



                                NAVEX IRM Platform | API Reference Guide                          167 of 188 


----------------------- Page 168-----------------------

        <AssignedUserOnly>false</AssignedUserOnly> 



        <ShowUserScores>false</ShowUserScores> 



        <IssuanceScheduleType>recurring</IssuanceScheduleType> 



        <BeginningDate>03/08/2021</BeginningDate> 



        <RepeatUnit>Monthly</RepeatUnit> 



        <EndingDate>11/05/2022</EndingDate> 



        <RepeatInterval>1</RepeatInterval> 



        <DueUnit>Weeks</DueUnit> 



        <DueInterval>1</DueInterval> 



        <EmailSubject>Vendor Recurring Assessment</EmailSubject> 



        <EmailBody>Vendor Recurring Assessment [Vendor Name]</EmailBody> 



        <SendReviewerOrIssuerEmail>false</SendReviewerOrIssuerEmail> 



        </assessmentIssuance> 



</IssueAssessment> 



XML RESPONSE - Vendor Recurring Assessment 



<AssessmentIssuanceItem xmlns:i="http://www.w3.org/2001/XMLSchema-instance"> 



        <ProjectId i:nil="true"/> 



        <TableId>10066</TableId> 



        <FieldId>1439</FieldId> 



        <ContentId>6</ContentId> 



        <VendorId>6</VendorId> 



        <IsVendorInternalMode i:nil="true"/> 



        <Name>Vendor Recurring Assessment [Vendor Name]</Name> 



        <TemplateId>21</TemplateId> 



        <UserIds i:nil="true"/> 



        <VendorContactId>1059</VendorContactId> 



        <GroupIds i:nil="true"/> 



        <AllowDelegation>false</AllowDelegation> 



        <AssignedUserOnly i:nil="true"/> 



        <ReviewerId i:nil="true"/> 



        <GenerateFindings>false</GenerateFindings> 



        <FindingsOutputTableId i:nil="true"/> 



        <FindingsOutputFieldId i:nil="true"/> 



                                NAVEX IRM Platform | API Reference Guide                          168 of 188 


----------------------- Page 169-----------------------

        <FindingsParentGroupingFieldId i:nil="true"/> 



        <FindingsControlsFieldId i:nil="true"/> 



        <ShowUserScores>false</ShowUserScores> 



        <IssuanceScheduleType>recurring</IssuanceScheduleType> 



        <BeginningDate>03/08/2021</BeginningDate> 



        <IssueDate i:nil="true"/> 



        <DueDate i:nil="true"/> 



        <EndingDate i:nil="true"/> 



        <RepeatUnit>Monthly</RepeatUnit> 



        <RepeatInterval>1</RepeatInterval> 



        <RepeatsSunday i:nil="true"/> 



        <RepeatsMonday i:nil="true"/> 



        <RepeatsTuesday i:nil="true"/> 



        <RepeatsWednesday i:nil="true"/> 



        <RepeatsThursday i:nil="true"/> 



        <RepeatsFriday i:nil="true"/> 



        <RepeatsSaturday i:nil="true"/> 



        <DueUnit>Weeks</DueUnit> 



        <DueInterval>1</DueInterval> 



        <PrepopulatePriorAnswers i:nil="true"/> 



        <EmailSubject>Vendor Recurring Assessment</EmailSubject> 



        <EmailBody>Vendor Recurring Assessment [Vendor Name]</EmailBody> 



        <SendReviewerOrIssuerEmail>false</SendReviewerOrIssuerEmail> 



        <SendCategoryEmail i:nil="true"/> 



        <AdministrativeEmailSubject i:nil="true"/> 



        <AdministrativeEmailBody i:nil="true"/> 



        <ScheduledAssessmentId>173</ScheduledAssessmentId> 



</AssessmentIssuanceItem> 



                                NAVEX IRM Platform | API Reference Guide                          169 of 188 


----------------------- Page 170-----------------------

JSON Examples 



  JSON REQUEST (cURL) 



  curl -b cookie.txt -H "content-type: application/json" -H "Accept: application/json" -X 

  POST -d @Results.json 



  "https://api.lockpath.app:4443/AssessmentService/IssueAssessment" 



  JSON REQUEST - Immediate Assessment (Results.json) 



  { 



          "IssueAssessment": { 



                  "assessmentIssuance": { 



                         "ProjectId": 16, 



                         "Name": "Assessment Issues Today", 



                         "TemplateId": 21, 



                         "UserIds": 1027, 



                         "GroupIds": "", 



                         "AllowDelegation": false, 



                         "GenerateFindings": false, 



                         "AssignedUserOnly": false, 



                         "ShowUserScores": false, 



                         "IssuanceScheduleType": "immediate", 



                         "DueDate": "3/12/2021", 



                         "PrepopulatePriorAnswers": false, 



                         "EmailSubject": "Immediate Assessment", 



                         "EmailBody": "Immediate Assessment" 



                  } 



          } 



  } 



  JSON RESPONSE - Immediate Assessment 



  { 



          "AssessmentIssuanceItem": { 



                  "ProjectId": 16, 



                  "TableId": "", 



                  "FieldId": "", 



                                 NAVEX IRM Platform | API Reference Guide                          170 of 188 


----------------------- Page 171-----------------------

"ContentId": "", 



"VendorId": "", 



"IsVendorInternalMode": "", 



"Name": "Assessment Issued Today", 



"TemplateId": 21, 



"UserIds": 1027, 



"VendorContactId": "", 



"GroupIds": "", 



"AllowDelegation": false, 



"AssignedUserOnly": "", 



"ReviewerId": "", 



"GenerateFindings": false, 



"FindingsOutputTableId": "", 



"FindingsOutputFieldId": "", 



"FindingsParentGroupingFieldId": "", 



"FindingsControlsFieldId": "", 



"ShowUserScores": false, 



"IssuanceScheduleType": "immediate", 



"BeginningDate": "", 



"IssueDate": "", 



"DueDate": "3/12/2021", 



"EndingDate": "", 



"RepeatUnit": "", 



"RepeatInterval": "", 



"RepeatsSunday": "", 



"RepeatsMonday": "", 



"RepeatsTuesday": "", 



"RepeatsWednesday": "", 



"RepeatsThursday": "", 



"RepeatsFriday": "", 



"RepeatsSaturday": "", 



"DueUnit": "", 



                NAVEX IRM Platform | API Reference Guide                           171 of 188 


----------------------- Page 172-----------------------

                "DueInterval": "", 



                "PrepopulatePriorAnswers": false, 



                "EmailSubject": "Immediate Assessment", 



                "EmailBody": "Immediate Assessment", 



                "SendReviewerOrIssuerEmail": "", 



                "SendCategoryEmail": "", 



                "AdministrativeEmailSubject": "", 



                "AdministrativeEmailBody": "", 



                "ScheduledAssessmentId": 165 



        } 



} 



JSON REQUEST - Onetime Scheduled Assessment (Results.json) 



{ 



        "IssueAssessment": { 



                "assessmentIssuance": { 



                        "ProjectId": 16, 



                        "Name": "Onetime Scheduled Assessment", 



                        "TemplateId": 21, 



                        "UserIds": 1027, 



                        "GroupIds": "", 



                        "AllowDelegation": false, 



                        "GenerateFindings": false, 



                        "AssignedUserOnly": false, 



                        "ShowUserScores": false, 



                        "IssuanceScheduleType": "onetime", 



                        "IssueDate": "03/05/2021", 



                        "DueDate": "03/31/2021", 



                        "PrepopulatePriorAnswers": false, 



                        "EmailSubject": "Onetime Scheduled Assessment", 



                        "EmailBody": "Onetime Scheduled Assessment" 



                } 



        } 



} 



                                NAVEX IRM Platform | API Reference Guide                          172 of 188 


----------------------- Page 173-----------------------

JSON RESPONSE - Onetime Scheduled Assessment 



{ 



        "AssessmentIssuanceItem": { 



                "ProjectId": 16, 



                "TableId": "", 



                "FieldId": "", 



                "ContentId": "", 



                "VendorId": "", 



                "IsVendorInternalMode": "", 



                "Name": "Onetime Scheduled Assessment", 



                "TemplateId": 21, 



                "UserIds": 1027, 



                "VendorContactId": "", 



                "GroupIds": "", 



                "AllowDelegation": false, 



                "AssignedUserOnly": "", 



                "ReviewerId": "", 



                "GenerateFindings": false, 



                "FindingsOutputTableId": "", 



                "FindingsOutputFieldId": "", 



                "FindingsParentGroupingFieldId": "", 



                "FindingsControlsFieldId": "", 



                "ShowUserScores": false, 



                "IssuanceScheduleType": "onetime", 



                "BeginningDate": "", 



                "IssueDate": "03/05/2021", 



                "DueDate": "03/31/2021", 



                "EndingDate": "", 



                "RepeatUnit": "", 



                "RepeatInterval": "", 



                "RepeatsSunday": "", 



                "RepeatsMonday": "", 



                                NAVEX IRM Platform | API Reference Guide                          173 of 188 


----------------------- Page 174-----------------------

                "RepeatsTuesday": "", 



                "RepeatsWednesday": "", 



                "RepeatsThursday": "", 



                "RepeatsFriday": "", 



                "RepeatsSaturday": "", 



                "DueUnit": "", 



                "DueInterval": "", 



                "PrepopulatePriorAnswers": false, 



                "EmailSubject": "Onetime Scheduled Assessment", 



                "EmailBody": "Onetime Scheduled Assessment", 



                "SendReviewerOrIssuerEmail": "", 



                "SendCategoryEmail": "", 



                "AdministrativeEmailSubject": "", 



                "AdministrativeEmailBody": "", 



                "ScheduledAssessmentId": 168 



        } 



} 



JSON REQUEST - Recurring Scheduled Assessment (Results.json) 



{ 



        "IssueAssessment": { 



                "assessmentIssuance": { 



                "TableId": 10383, 



                "FieldId": 6543, 



                "ContentId": 1, 



                "Name": "Recurring Scheduled Assessment", 



                "TemplateId": 21, 



                "UserIds": 1027, 



                "GroupIds": "", 



                "AllowDelegation": false, 



                "GenerateFindings": false, 



                "AssignedUserOnly": false, 



                "ShowUserScores": false, 



                "IssuanceScheduleType": "recurring", 



                                NAVEX IRM Platform | API Reference Guide                          174 of 188 


----------------------- Page 175-----------------------

                "BeginningDate": "03/03/2021", 



                "RepeatUnit": "monthly", 



                "EndingDate": "11/05/2021", 



                "RepeatInterval": 1, 



                "DueUnit": "daily", 



                "DueInterval": 1, 



                "EmailSubject": "Recurring Scheduled Assessment", 



                "EmailBody": "Recurring Scheduled Assessment" 



                } 



        } 



} 



JSON RESPONSE - Recurring Scheduled Assessment 



{ 



        "AssessmentIssuanceItem": { 



                "ProjectId": "", 



                "TableId": 10383, 



                "FieldId": 6543, 



                "ContentId": 1, 



                "VendorId": "", 



                "IsVendorInternalMode": "", 



                "Name": "Recurring Scheduled Assessment", 



                "TemplateId": 21, 



                "UserIds": 1027, 



                "VendorContactId": "", 



                "GroupIds": "", 



                "AllowDelegation": false, 



                "AssignedUserOnly": "", 



                "ReviewerId": "", 



                "GenerateFindings": false, 



                "FindingsOutputTableId": "", 



                "FindingsOutputFieldId": "", 



                "FindingsParentGroupingFieldId": "", 



                "FindingsControlsFieldId": "", 



                                NAVEX IRM Platform | API Reference Guide                          175 of 188 


----------------------- Page 176-----------------------

                "ShowUserScores": false, 



                "IssuanceScheduleType": "recurring", 



                "BeginningDate": "03/03/2021", 



                "IssueDate": "", 



                "DueDate": "", 



                "EndingDate": "", 



                "RepeatUnit": "monthly", 



                "RepeatInterval": 1, 



                "RepeatsSunday": "", 



                "RepeatsMonday": "", 



                "RepeatsTuesday": "", 



                "RepeatsWednesday": "", 



                "RepeatsThursday": "", 



                "RepeatsFriday": "", 



                "RepeatsSaturday": "", 



                "DueUnit": "daily", 



                "DueInterval": 1, 



                "PrepopulatePriorAnswers": "", 



                "EmailSubject": "Recurring Scheduled Assessment", 



                "EmailBody": "Recurring Scheduled Assessment", 



                "SendReviewerOrIssuerEmail": "", 



                "SendCategoryEmail": "", 



                "AdministrativeEmailSubject": "", 



                "AdministrativeEmailBody": "", 



                "ScheduledAssessmentId": 169 



        } 



} 



JSON REQUEST - Vendor Internal Assessment (Results.json) 



{ 



        "IssueAssessment": { 



                "assessmentIssuance": { 



                        "TableId": 10066, 



                        "FieldId": 1439, 



                                NAVEX IRM Platform | API Reference Guide                          176 of 188 


----------------------- Page 177-----------------------

                        "ContentId": 7, 



                        "VendorId": 7, 



                        "Name": "Vendor Internal Assessment", 



                        "TemplateId": 21, 



                        "VendorContactId": 1048, 



                        "AllowDelegation": false, 



                        "GenerateFindings": false, 



                        "AssignedUserOnly": false, 



                        "ShowUserScores": false, 



                        "IssuanceScheduleType": "immediate", 



                        "DueDate": "03/12/2021", 



                        "PrepopulatePriorAnswers": false, 



                        "EmailSubject": "Vendor Internal Assessment", 



                        "EmailBody": "Vendor Internal Assessment" 



                } 



        } 



} 



JSON RESPONSE - Vendor Internal Assessment 



{ 



        "AssessmentIssuanceItem": { 



                "ProjectId": "", 



                "TableId": 10066, 



                "FieldId": 1439, 



                "ContentId": 7, 



                "VendorId": 7, 



                "IsVendorInternalMode": "", 



                "Name": "Vendor Internal Assessment", 



                "TemplateId": 21, 



                "UserIds": "", 



                "VendorContactId": 1048, 



                "GroupIds": "", 



                "AllowDelegation": false, 



                "AssignedUserOnly": "", 



                                NAVEX IRM Platform | API Reference Guide                          177 of 188 


----------------------- Page 178-----------------------

        "ReviewerId": "", 



        "GenerateFindings": false, 



        "FindingsOutputTableId": "", 



        "FindingsOutputFieldId": "", 



        "FindingsParentGroupingFieldId": "", 



        "FindingsControlsFieldId": "", 



        "ShowUserScores": false, 



        "IssuanceScheduleType": "immediate", 



        "BeginningDate": "", 



        "IssueDate": "", 



        "DueDate": "03/12/2021", 



        "EndingDate": "", 



        "RepeatUnit": "", 



        "RepeatInterval": "", 



        "RepeatsSunday": "", 



        "RepeatsMonday": "", 



        "RepeatsTuesday": "", 



        "RepeatsWednesday": "", 



        "RepeatsThursday": "", 



        "RepeatsFriday": "", 



        "RepeatsSaturday": "", 



        "DueUnit": "", 



        "DueInterval": "", 



        "PrepopulatePriorAnswers": false, 



        "EmailSubject": "Vendor Internal Assessment", 



        "EmailBody": "Vendor Internal Assessment", 



        "SendReviewerOrIssuerEmail": "", 



        "SendCategoryEmail": "", 



        "AdministrativeEmailSubject": "", 



        "AdministrativeEmailBody": "", 



        "ScheduledAssessmentId": 171 



} 



                        NAVEX IRM Platform | API Reference Guide                          178 of 188 


----------------------- Page 179-----------------------

} 



JSON REQUEST - Vendor Recurring Assessment (Results.json) 



{ 



        "IssueAssessment": { 



                "assessmentIssuance": { 



                        "TableId": 10066, 



                        "FieldId": 1439, 



                        "ContentId": 6, 



                        "VendorId": 6, 



                        "Name": "Vendor Recurring Assessment [Vendor Name]", 



                        "TemplateId": 21, 



                        "VendorContactId": 1059, 



                        "AllowDelegation": false, 



                        "GenerateFindings": false, 



                        "AssignedUserOnly": false, 



                        "ShowUserScores": false, 



                        "IssuanceScheduleType": "recurring", 



                        "BeginningDate": "03/08/2021", 



                        "RepeatUnit": "Monthly", 



                        "EndingDate": "11/05/2022", 



                        "RepeatInterval": 1, 



                        "DueUnit": "Weeks", 



                        "DueInterval": 1, 



                        "EmailSubject": "Vendor Recurring Assessment", 



                        "EmailBody": "Vendor Recurring Assessment [Vendor Name]", 



                        "SendReviewerOrIssuerEmail": false 



                } 



        } 



} 



JSON RESPONSE - Vendor Recurring Assessment 



{ 



        "AssessmentIssuanceItem": { 



                                NAVEX IRM Platform | API Reference Guide                          179 of 188 


----------------------- Page 180-----------------------

"ProjectId": "", 



"TableId": 10066, 



"FieldId": 1439, 



"ContentId": 6, 



"VendorId": 6, 



"IsVendorInternalMode": "", 



"Name": "Vendor Recurring Assessment [Vendor Name]", 



"TemplateId": 21, 



"UserIds": "", 



"VendorContactId": 1059, 



"GroupIds": "", 



"AllowDelegation": false, 



"AssignedUserOnly": "", 



"ReviewerId": "", 



"GenerateFindings": false, 



"FindingsOutputTableId": "", 



"FindingsOutputFieldId": "", 



"FindingsParentGroupingFieldId": "", 



"FindingsControlsFieldId": "", 



"ShowUserScores": false, 



"IssuanceScheduleType": "recurring", 



"BeginningDate": "03/08/2021", 



"IssueDate": "", 



"DueDate": "", 



"EndingDate": "", 



"RepeatUnit": "Monthly", 



"RepeatInterval": 1, 



"RepeatsSunday": "", 



"RepeatsMonday": "", 



"RepeatsTuesday": "", 



"RepeatsWednesday": "", 



"RepeatsThursday": "", 



                NAVEX IRM Platform | API Reference Guide                         180 of 188 


----------------------- Page 181-----------------------

                "RepeatsFriday": "", 



                "RepeatsSaturday": "", 



                "DueUnit": "Weeks", 



                "DueInterval": 1, 



                "PrepopulatePriorAnswers": "", 



                "EmailSubject": "Vendor Recurring Assessment", 



                "EmailBody": "Vendor Recurring Assessment [Vendor Name]", 



                "SendReviewerOrIssuerEmail": false, 



                "SendCategoryEmail": "", 



                "AdministrativeEmailSubject": "", 



                "AdministrativeEmailBody": "", 



                "ScheduledAssessmentId": 173 



        } 



} 



                                NAVEX IRM Platform | API Reference Guide                          181 of 188 


----------------------- Page 182-----------------------

Appendices 


----------------------- Page 183-----------------------

A:    Language Identifiers 



This appendix includes language IDs that can be utilized in the GetUser, CreateUser, and UpdateUser calls. 


----------------------- Page 184-----------------------

Language IDs 



The Language object of the GetUser, CreateUser, and UpdateUser calls determine the language in the 

NAVEX IRM Platform. In addition to English (United States), which is the default language, the NAVEX IRM 

Platform provides other languages that can be utilized in the language object. 



If an API request returns a language that is not available, or if a language is not active in the instance, the error 

message "Invalid Language ID" returns. 



Language Names and Language IDs 



The preferred language of the user is stored in the user profile and is revealed in Setup > Platform > Multilingual > 

Language. You can hover the cursor over the language name in the list to obtain the ID. The table below displays 

all supported Language names and Language IDs. 



 Language            Language ID        Language            Language ID        Language           Language ID 

 Name                                   Name                                   Name 



 Afrikaans           54                 Hindi                57                Portuguese          22 



 Albanian            28                 Hungarian            14                Punjabi             70 



 Alsatian            132                Icelandic            15                Quechua            107 



 Amharic             94                 Igbo                112                Romanian            24 



 Arabic              1                  Indonesian           33                Romansh             23 



 Armenian            43                 Inuktitut            93                Russian             25 



 Assamese            77                 Irish                60                Sakha              133 



 Azerbaijani         44                 isiXhosa             52                Sami (Northern)     59 



 Bangla              69                 isiZulu              53                Sanskrit            79 



 Bashkir             109                Italian (Italy)     1040               Scottish Gaelic    145 



 Basque              45                 Japanese             17                Serbian            31770 



 Belarusian          35                 Kannada              75                Sesotho sa         108 

                                                                               Leboa 



 Bosnian             30746              Kazakh               63                Setswana            50 



 Breton              126                Khmer                83                Sinhala             91 



 Bulgarian           2                  K'iche              134                Slovak              27 



 Catalan             3                  Kinyarwanda         135                Slovenian           36 



 Chinese             30724              Kiswahili            65                Spanish            2058 

                                                                               (Mexico) 



 Corsican            131                Konkani              87                Spanish (Spain)    3082 



                                    NAVEX IRM Platform | API Reference Guide                               184 of 188 


----------------------- Page 185-----------------------

Language          Language ID       Language           Language ID      Language          Language ID 

Name                                Name                                Name 



Croatian           26               Korean             18               Swedish           29 



Czech             5                 Kyrgyz             64               Syriac            90 



Danish            6                 Lao                84               Tajik             40 



Dari              140               Latvian            38               Tamazight         95 



Divehi            101               Lithuanian         39               Tamil             73 



Dutch              19               Luxembourgish      110              Tatar             68 



English (United   1033              Macedonian         47               Telugu            74 

States)                             (FYROM) 



English (United   2057              Malay              62               Thai              30 

Kingdom) 



Estonian           37               Malayalam          76               Tibetan           81 



Faroese            56               Maltese            58               Turkish           31 



Filipino          100               Maori              129              Turkmen           66 



Finnish            11               Mapudungun         122              Ukrainian         34 



French (France)   1036              Marathi            78               Upper Sorbian     46 



Frisian            98               Mohawk             124              Urdu              32 



Galician           86               Mongolian          80               Uyghur            128 



Georgian           55               Nepali             97               Uzbek             67 



German            7                 Norwegian          20               Vietnamese        42 



Greek             8                 Occitan            130              Welsh             82 



Greenlandic       111               Odia               72               Wolof             136 



Gujarati           71               Pashto             99               Yi                120 



Hausa             104               Persian            41               Yoruba            106 



Hebrew             13               Polish             21 



                                 NAVEX IRM Platform | API Reference Guide                         185 of 188 


----------------------- Page 186-----------------------

B:  Troubleshooting Tips 



This appendix provides troubleshooting tips and frequently asked questions for issues that may occur when 

using the NAVEX IRM API application. 



   Troubleshooting                                                                                         187 



    Frequently Asked Questions                                                                             188 


----------------------- Page 187-----------------------

Troubleshooting 



The following are problems you may encounter using the NAVEX IRM API and a suggested solution for each. 



 Problem                                         What to do 



 Enabling the API                                NAVEX IRM API is available only with NAVEX IRM Enterprise 

                                                 Edition or with an additional license in the NAVEX IRM Standard 

                                                 Edition. 



 Licensing the API                               Confirm the NAVEX IRM API is licensed. Go to Setup > Platform > 

                                                 System > Subscription / License Details. NAVEX IRM Data API 

                                                 should be listed in the Connectors field. 



 User access permissions                         Confirm the user has appropriate rights to the component (table), 

                                                 workflow stage for the given record, the record itself (restrict record 

                                                 access), and the specified fields. 



 User not making API calls                       Confirm that the API access option is enabled in the user profile. Go 

                                                 to Setup > Platform > Security > Users. In the Email column, click 

                                                 the name of the user in question, and confirm the API Access field 

                                                 is set to Yes. 



 Server encountered error processing             Verify the message format is correct. 

 request. The incoming message has an 

 unexpected message format 'Raw'. 

 Expected formats are xml or json 



 Using the right method (GET vs POST vs          Consult this guide for the method appropriate to your request. 

 DELETE) 



 Capitalization                                  API methods are case-sensitive. Verify the case for the given 

                                                 method in this guide. 



 Having set-cookie not cookie                    Verify the correct cookie files are specified from the login. 



 A valid session is required for API request     If you previously had a valid cookie, the session has now expired. 

                                                 Consider creating a custom security configuration with an extended 

                                                 timeout and assign the new configuration to your API user(s) if the 

                                                 session is expiring inappropriately. 



 Input string is not in the correct format       Review the syntax of your command. 



 cURL command results in error                   API methods are case-sensitive. Verify that you are entering the 

                                                 proper syntax and case for the cURL command as documented in 

                                                 this guide. 



 Order of switches for cURL command              For a list of curl commands and options, type curl - -help at a 

                                                 command prompt. 



                                       NAVEX IRM Platform | API Reference Guide                                    187 of 188 


----------------------- Page 188-----------------------

Frequently Asked Questions 



The following are frequently asked questions about the NAVEX IRM API. 



 Question              Answer 



 Why should            The NAVEX IRM API is extremely useful for building automated linkages to your internal 

 I choose to use       systems for performing bi-directional updates. You can also use the REST API methods to 

 NAVEX IRM API?        update/import one-to-many lookup fields for fully managing a record. 



 In what editions are  NAVEX IRM Enterprise Edition and with an additional license in the NAVEX IRM Standard 

 the NAVEX IRM         Edition. 

 API available? 



 Can I modify user     Yes, you can add, update, and assign security roles to users and groups using API calls. 

 information using 

 the NAVEX IRM 

 API? 



 How are               Users with Portal access may have access to the NAVEX IRM API without using an 

 API licenses          additional user license. If a user account is established specifically for API access, there 

 counted?              must be a full user license available for granting the appropriate access. 



 What methods are      The REST API supports the following HTTP verbs: GET, POST, and DELETE 

 supported? 



 Is there a limit to   The API is limited to 10 active sessions at one time and up to 20 requests can be 

 the number of calls   processed per second. When retrieving multiple (bulk) records, up to 1,000 records can 

 I can make?           be requested at once. Messaging is provided if a request is unable to be completed to 

                       allow for subsequent attempts. 



 Will NAVEX            You can engage your NAVEX representative for a statement of work. They will contact 

 program against       you to gather the project requirements and to estimate the expected deliverables to best 

 the NAVEX IRM         fit your needs. 

 API on our behalf? 



                                     NAVEX IRM Platform | API Reference Guide                               188 of 188 

